package generatedtest;

import junit.framework.*;

public class JSAPUnitTest2 extends TestCase {

  // Runs all the tests in this file.
  public static void main(String[] args) {
    junit.textui.TestRunner.run(JSAPUnitTest2.class);
  }

  public void test1() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    java.lang.String var7 = var5.getSyntax();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var9 = var8.getHelp();
    java.lang.String var10 = var8.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var11 = new com.martiansoftware.jsap.SimpleJSAP(var10);
    boolean var12 = var11.messagePrinted();
    java.lang.String var13 = var11.getHelp();
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException(var13);
    com.martiansoftware.jsap.FlaggedOption var15 = var5.setUsageName(var13);
    java.lang.String var16 = var15.getHelp();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail(var16);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "[<hi!>]"+ "'", var7.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var13.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));

  }

  public void test2() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var9.testSwitchParse();
    var9.testLongFlag();
    var9.testID();
    java.lang.String var13 = var9.getName();
    var9.testID();
    java.lang.String[] var16 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    var9.setName("");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var36 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var44 = var42.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var46 = var42.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var52 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var36, var39, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    int var54 = var53.getScreenWidth();
    java.lang.String var55 = com.martiansoftware.util.StringUtils.padRightToWidth("", var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "hi!"+ "'", var13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 80);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "                                                                                "+ "'", var55.equals("                                                                                "));

  }

  public void test3() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getHelp();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    java.util.Iterator var8 = var5.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    boolean var14 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    java.lang.String var28 = var12.getHelp(100, "hi!");
    java.lang.String var29 = var5.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var49 = var0.getHelp(100, "");
    java.lang.String var50 = var0.toString();
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    java.lang.String var54 = var52.getUsage();
    java.util.Iterator var55 = var52.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    boolean var60 = var59.messagePrinted();
    boolean var61 = var59.messagePrinted();
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var74 = var63.getHelp((-1), "hi!");
    java.lang.String var75 = var59.getHelp(100, "hi!");
    java.lang.String var76 = var52.getHelp(100);
    java.lang.String var77 = var0.getHelp(1, var76);
    com.martiansoftware.jsap.TestFlaggedOption var78 = new com.martiansoftware.jsap.TestFlaggedOption(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var28.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var75.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));

  }

  public void test4() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var30 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var43 = var0.getProperty("hi!", "hi!");
    com.martiansoftware.jsap.UnflaggedOption var44 = new com.martiansoftware.jsap.UnflaggedOption(var43);
    java.lang.String var45 = var44.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "[<hi!>]"+ "'", var45.equals("[<hi!>]"));

  }

  public void test5() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.IntSizeStringParser.getParser();
    var0.tearDown();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var11 = var10.getShortFlag();
    char var12 = var10.getShortFlag();
    char var13 = var10.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var18 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var19 = var15.setHelp("hi!");
    var15.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var22 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var24 = var23.getHelp();
    java.lang.String var25 = var23.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    boolean var27 = var26.messagePrinted();
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var39 = var28.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    com.martiansoftware.jsap.UnflaggedOption var41 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var22, var27, var39);
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var59 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var51, "hi!", true, '4', "", var58);
    com.martiansoftware.jsap.UnflaggedOption var60 = var41.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var61 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var62 = var60.setStringParser((com.martiansoftware.jsap.StringParser)var61);
    char var63 = var60.getListSeparator();
    com.martiansoftware.jsap.Switch var64 = var10.setShortFlag(var63);
    java.lang.String var65 = var64.getLongFlag();
    java.lang.String[] var66 = var64.getDefault();
    java.lang.String var67 = var64.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var68 = var0.parse(var67);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "hi!"+ "'", var18.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "hi!"+ "'", var65.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "[-:|--hi!]"+ "'", var67.equals("[-:|--hi!]"));

  }

  public void test6() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.UnspecifiedParameterException var19 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    java.lang.String var20 = var19.getID();
    com.martiansoftware.jsap.JSAPException var21 = new com.martiansoftware.jsap.JSAPException(var20);
    java.lang.String var22 = com.martiansoftware.util.StringUtils.noNull(var20);
    var0.setDefault(var22);
    com.martiansoftware.jsap.stringparsers.FileStringParser var24 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var24.tearDown();
    var24.setUp();
    boolean var27 = var24.mustExist();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var28 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var29 = var28.hasProperties();
    java.lang.String var30 = var28.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var31 = new com.martiansoftware.jsap.ant.ParserProperty();
    var28.addConfiguredProperty(var31);
    boolean var33 = var28.getGreedy();
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var43 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var51 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var43, "hi!", true, '4', "", var50);
    java.lang.Character var52 = var51.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var55 = var51.setLongFlag("hi!");
    boolean var56 = var51.isList();
    var28.setGreedy(var56);
    com.martiansoftware.jsap.stringparsers.FileStringParser var58 = var24.setMustBeDirectory(var56);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var22, var56);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + '4'+ "'", var52.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);

  }

  public void test7() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    java.lang.String[] var22 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var32 = var0.getProperty("", "hi!");
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var33 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser("");
    var33.testBasicParse();
    var33.testBasicParse();
    java.lang.String var36 = var33.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "(com.martiansoftware.jsap.stringparsers.TestLongStringParser)"+ "'", var36.equals("(com.martiansoftware.jsap.stringparsers.TestLongStringParser)"));

  }

  public void test8() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.stringparsers.FileStringParser var2 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var2.tearDown();
    var2.setUp();
    boolean var5 = var2.mustExist();
    var2.tearDown();
    boolean var7 = var2.mustBeFile();
    com.martiansoftware.jsap.FlaggedOption var8 = var1.setList(var7);
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var13 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var14 = var10.setHelp("hi!");
    var10.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var17 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    java.lang.String var20 = var18.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var21 = new com.martiansoftware.jsap.SimpleJSAP(var20);
    boolean var22 = var21.messagePrinted();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var34 = var23.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    com.martiansoftware.jsap.UnflaggedOption var36 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var17, var22, var34);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.UnflaggedOption var55 = var36.setRequired(true);
    boolean var56 = var36.isList();
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var60 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var64 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var65 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var66 = var65.getShortFlag();
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var72 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var76 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var77 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var78 = var67.getHelp((-1), "hi!");
    java.lang.String[] var79 = new java.lang.String[] { var78};
    com.martiansoftware.jsap.Switch var80 = var65.setDefault(var79);
    char var81 = var80.getShortFlag();
    com.martiansoftware.jsap.UnflaggedOption var82 = var36.setListSeparator(var81);
    com.martiansoftware.jsap.FlaggedOption var83 = var1.setListSeparator(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "hi!"+ "'", var13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);

  }

  public void test9() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testSimpleDefault();
    var0.setUp();
    var0.tearDown();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testRequired();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test10() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var16 = var15.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var17 = var3.setScreenWidth(var16);
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    java.lang.String var20 = var18.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var21 = new com.martiansoftware.jsap.SimpleJSAP(var20);
    boolean var22 = var21.messagePrinted();
    java.lang.String var23 = var21.getHelp();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    boolean var28 = var27.messagePrinted();
    java.lang.String var29 = var27.getHelp();
    com.martiansoftware.jsap.ParseException var30 = new com.martiansoftware.jsap.ParseException(var29);
    java.lang.String[] var31 = new java.lang.String[] { var29};
    com.martiansoftware.jsap.JSAPResult var32 = var21.parse(var31);
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var42 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var43 = var32.getClass("hi!");
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var55 = var44.getHelp((-1), "hi!");
    double var57 = var32.getDouble(var55, 0.0d);
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    java.lang.String var60 = var58.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    boolean var62 = var61.messagePrinted();
    java.lang.String var63 = var61.getHelp();
    com.martiansoftware.jsap.ParseException var64 = new com.martiansoftware.jsap.ParseException(var63);
    java.util.Iterator var65 = var32.getExceptionIterator(var63);
    java.lang.String[] var66 = new java.lang.String[] { var63};
    com.martiansoftware.jsap.JSAPResult var67 = var17.parse(var66);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var76 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var77 = var76.getShortFlag();
    char var78 = var76.getShortFlag();
    java.lang.Character var79 = var76.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var83 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var86 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var87 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var88 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var89 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var92 = var76.setDefault("hi!");
    java.lang.String var93 = var76.getHelp();
    var17.registerParameter((com.martiansoftware.jsap.Parameter)var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var23.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var29.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var63.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + '4'+ "'", var79.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + "hi!"+ "'", var93.equals("hi!"));

  }

  public void test11() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.JSAPResult var43 = var0.parse(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var53 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var56 = new com.martiansoftware.jsap.TestOption();
    int var57 = var56.countTestCases();
    int var58 = var56.countTestCases();
    java.lang.String var59 = com.martiansoftware.util.StringUtils.padRight("hi!", var58);
    com.martiansoftware.jsap.JSAPResult var60 = var0.parse(var59);
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var62 = var61.getHelp();
    java.lang.String var63 = var61.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var64 = new com.martiansoftware.jsap.SimpleJSAP(var63);
    boolean var65 = var64.messagePrinted();
    java.lang.String var66 = var64.getHelp();
    java.lang.String var69 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var69, 10.0f, 10.0f, 1.0f);
    var64.setHelp(var69);
    byte[] var81 = var60.getByteArray(var69);
    java.util.Iterator var82 = var60.getBadParameterIDIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi! "+ "'", var59.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var66.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "hi!"+ "'", var69.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);

  }

  public void test12() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    java.lang.String var4 = var1.getID();
    java.lang.String[] var5 = var1.getDefault();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    var7.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var14 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var31 = var20.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    com.martiansoftware.jsap.UnflaggedOption var33 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var14, var19, var31);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var43 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var51 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var43, "hi!", true, '4', "", var50);
    com.martiansoftware.jsap.UnflaggedOption var52 = var33.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var53 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var54 = var52.setStringParser((com.martiansoftware.jsap.StringParser)var53);
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var62 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var63 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var64 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var70 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var71 = var70.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var72 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var64, "hi!", true, '4', "", var71);
    java.lang.String var73 = var72.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var73);
    com.martiansoftware.jsap.UnflaggedOption var75 = var52.setUsageName(var73);
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var80 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var81 = var77.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var82 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var83 = var77.setStringParser((com.martiansoftware.jsap.StringParser)var82);
    com.martiansoftware.jsap.ant.SwitchConfiguration var84 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var85 = var84.getLongflag();
    var84.setShortflag('#');
    java.lang.String var88 = var84.getLongflag();
    var84.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var91 = var77.setListSeparator('#');
    com.martiansoftware.jsap.UnflaggedOption var92 = var52.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var93 = var1.setShortFlag('#');
    char var94 = var93.getListSeparator();
    java.lang.String var95 = var93.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var73.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "hi!"+ "'", var80.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "[-# <hi!>]"+ "'", var95.equals("[-# <hi!>]"));

  }

  public void test13() throws Throwable {

    com.martiansoftware.jsap.TestParser var0 = new com.martiansoftware.jsap.TestParser();
    var0.testParser();
    var0.testParser();
    var0.testParser();
    var0.testMultipleDeclarations();
    junit.framework.TestResult var5 = var0.run();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);

  }

  public void test14() throws Throwable {

    com.martiansoftware.jsap.ParseException var0 = new com.martiansoftware.jsap.ParseException();
    com.martiansoftware.jsap.JSAPException var1 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var0);
    com.martiansoftware.jsap.JSAPException var2 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var0);

  }

  public void test15() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.tearDown();
    var0.tearDown();
    var0.setUp();
    var0.testOneLevelDefaults();
    junit.framework.TestResult var6 = var0.run();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);

  }

  public void test16() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.IntSizeStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    float[] var20 = var15.getFloatArray(var18);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var30 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var33 = var15.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var38 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var39 = var35.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var40 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var41 = var40.getID();
    boolean[] var42 = var15.getBooleanArray(var41);
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var47 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var48 = var44.setHelp("hi!");
    java.lang.String[] var49 = var15.getStringArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var53 = var51.setRequired(false);
    java.lang.String var54 = var51.getID();
    java.lang.String[] var55 = var51.getDefault();
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    java.lang.String var58 = var57.getFlag();
    com.martiansoftware.jsap.FlaggedOption var59 = var51.setDefault(var58);
    float[] var60 = var15.getFloatArray(var58);
    java.lang.Object var61 = var0.parse(var58);
    com.martiansoftware.jsap.JSAP var62 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var63 = var62.getHelp();
    java.lang.String var64 = var62.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var65 = new com.martiansoftware.jsap.SimpleJSAP(var64);
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var65.unregisterParameter((com.martiansoftware.jsap.Parameter)var67);
    java.lang.String var69 = var67.getSyntax();
    com.martiansoftware.jsap.JSAP var70 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var71 = var70.getHelp();
    java.lang.String var72 = var70.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var73 = new com.martiansoftware.jsap.SimpleJSAP(var72);
    boolean var74 = var73.messagePrinted();
    java.lang.String var75 = var73.getHelp();
    com.martiansoftware.jsap.ParseException var76 = new com.martiansoftware.jsap.ParseException(var75);
    com.martiansoftware.jsap.FlaggedOption var77 = var67.setUsageName(var75);
    java.lang.String var78 = com.martiansoftware.util.StringUtils.noNull(var75);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var79 = var0.parse(var75);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "hi!"+ "'", var38.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "hi!"+ "'", var41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "hi!"+ "'", var47.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "hi!"+ "'", var54.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "4"+ "'", var58.equals("4"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + 4+ "'", var61.equals(4));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "[<hi!>]"+ "'", var69.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var75.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var78.equals("  [--help]\n        Prints this help message.\n"));

  }

  public void test17() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    boolean var47 = var27.isList();
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var57 = var56.getShortFlag();
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var68 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var69 = var58.getHelp((-1), "hi!");
    java.lang.String[] var70 = new java.lang.String[] { var69};
    com.martiansoftware.jsap.Switch var71 = var56.setDefault(var70);
    char var72 = var71.getShortFlag();
    com.martiansoftware.jsap.UnflaggedOption var73 = var27.setListSeparator(var72);
    boolean var74 = var73.isList();
    junit.framework.Assert.assertNotNull((java.lang.Object)var74);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var74);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);

  }

  public void test18() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var32 = var30.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var33 = var27.setList(false);
    java.lang.String var34 = var33.getUsageName();
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption(var34);
    var35.testLongFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));

  }

  public void test19() throws Throwable {

    com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource var0 = new com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource();
    var0.testUnexpectedProperties();
    var0.testUnexpectedProperties();

  }

  public void test20() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var45 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var46 = var45.countTestCases();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var50.unregisterParameter((com.martiansoftware.jsap.Parameter)var52);
    com.martiansoftware.jsap.TestOption var54 = new com.martiansoftware.jsap.TestOption();
    int var55 = var54.countTestCases();
    int var56 = var54.countTestCases();
    int var57 = var54.countTestCases();
    java.lang.String var58 = var50.getHelp(var57);
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    java.lang.String var61 = var59.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var62 = new com.martiansoftware.jsap.SimpleJSAP(var61);
    boolean var63 = var62.messagePrinted();
    java.lang.String var64 = var62.getHelp();
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var74 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var75 = var74.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var76 = var62.setScreenWidth(var75);
    junit.framework.Assert.assertEquals(var57, var75);
    junit.framework.Assert.assertEquals(var46, var75);
    java.lang.String var79 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var58.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var64.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "hi!"+ "'", var79.equals("hi!"));

  }

  public void test21() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("");
    com.martiansoftware.jsap.stringparsers.DateStringParser var19 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var19.setUp();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    java.lang.String var39 = var19.getProperty("");
    java.lang.String[] var41 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var51 = var19.getProperty("", "hi!");
    var19.tearDown();
    com.martiansoftware.jsap.FlaggedOption var53 = var18.setStringParser((com.martiansoftware.jsap.StringParser)var19);
    var19.setUp();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "hi!"+ "'", var51.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);

  }

  public void test22() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    com.martiansoftware.jsap.stringparsers.DateStringParser var4 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var9 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var10 = var6.setHelp("hi!");
    var6.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var13 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var15 = var14.getHelp();
    java.lang.String var16 = var14.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var17 = new com.martiansoftware.jsap.SimpleJSAP(var16);
    boolean var18 = var17.messagePrinted();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var30 = var19.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    com.martiansoftware.jsap.UnflaggedOption var32 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var13, var18, var30);
    com.martiansoftware.jsap.ant.SwitchConfiguration var33 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var34 = var33.getLongflag();
    var33.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.Switch var55 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var4.setProperty("", "hi!");
    boolean var66 = var3.idExists("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var67 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var68 = var67.getParameter();
    boolean var69 = var67.declaredListSeparator();
    char var70 = var67.getShortflag();
    java.lang.String[] var71 = var67.getDefaults();
    boolean var72 = var67.hasProperties();
    junit.framework.Assert.assertNotNull("hi!", (java.lang.Object)var67);
    boolean var74 = var67.hasProperties();
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var79 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var83 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var84 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var85 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var91 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var92 = var91.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var93 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var85, "hi!", true, '4', "", var92);
    java.lang.Character var94 = var93.getShortFlagCharacter();
    com.martiansoftware.jsap.Flagged var95 = var75.getByShortFlag(var94);
    var67.setListseparator((char)var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + ""+ "'", var92.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + '4'+ "'", var94.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == null);

  }

  public void test23() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    boolean var1 = var0.getIslist();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var11 = var10.getShortFlag();
    char var12 = var10.getShortFlag();
    java.lang.Character var13 = var10.getShortFlagCharacter();
    com.martiansoftware.jsap.UnknownFlagException var14 = new com.martiansoftware.jsap.UnknownFlagException(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var24 = var23.getShortFlag();
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var36 = var25.getHelp((-1), "hi!");
    java.lang.String[] var37 = new java.lang.String[] { var36};
    com.martiansoftware.jsap.Switch var38 = var23.setDefault(var37);
    java.lang.Character var39 = var38.getShortFlagCharacter();
    char var40 = var38.getShortFlag();
    junit.framework.Assert.assertEquals((char)var13, var40);
    var0.setShortflag((char)var13);
    char var43 = var0.getShortflag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + '4'+ "'", var13.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + '4'+ "'", var39.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == '4');

  }

  public void test24() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    java.lang.String var47 = var27.getID();
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var49 = var48.getHelp();
    java.lang.String var50 = var48.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var51 = new com.martiansoftware.jsap.SimpleJSAP(var50);
    com.martiansoftware.jsap.IDMap var52 = var51.getIDMap();
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var62 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var63 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var64 = var53.getHelp((-1), "hi!");
    java.lang.String var65 = var52.getIDByLongFlag(var64);
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var69 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var73 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var74 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var75 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var81 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var82 = var81.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var83 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var75, "hi!", true, '4', "", var82);
    java.util.List var85 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var86 = var52.getIDByLongFlag("");
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var90 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var93 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var94 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var95 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var96 = var95.getShortFlag();
    char var97 = var95.getShortFlag();
    java.lang.String var98 = var52.getIDByShortFlag(var97);
    com.martiansoftware.jsap.UnflaggedOption var99 = var27.setListSeparator(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + ""+ "'", var82.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var99 == null);

  }

  public void test25() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test3();
    var0.test7();
    var0.test2();
    var0.test5();

  }

  public void test26() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.String var18 = var17.getSyntax();
    java.lang.Character var19 = var17.getShortFlagCharacter();
    boolean var20 = var17.required();
    java.lang.String var21 = var17.getSyntax();
    com.martiansoftware.jsap.ant.SwitchConfiguration var22 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var23 = var22.getLongflag();
    var22.setShortflag('#');
    java.lang.String var26 = var22.getLongflag();
    var22.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var22.setShortflag('4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var41 = var40.getShortFlag();
    var22.setShortflag(var41);
    java.lang.String var43 = var22.getLongflag();
    char var44 = var22.getShortflag();
    char var45 = var22.getShortflag();
    com.martiansoftware.jsap.FlaggedOption var46 = var17.setShortFlag(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var18.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + '4'+ "'", var19.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var21.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);

  }

  public void test27() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigDecimalStringParser var0 = new com.martiansoftware.jsap.stringparsers.BigDecimalStringParser();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var1 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var2 = var1.getParameter();
    java.lang.String var3 = var1.getStringparser();
    char var4 = var1.getListseparator();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var8 = new com.martiansoftware.jsap.SimpleJSAP(var7);
    boolean var9 = var8.messagePrinted();
    java.lang.String var10 = var8.getHelp();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    java.lang.String var16 = var14.getHelp();
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException(var16);
    java.lang.String[] var18 = new java.lang.String[] { var16};
    com.martiansoftware.jsap.JSAPResult var19 = var8.parse(var18);
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    boolean var24 = var23.messagePrinted();
    boolean var25 = var23.messagePrinted();
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var38 = var27.getHelp((-1), "hi!");
    java.lang.String var39 = var23.getHelp(100, "hi!");
    java.util.Date[] var40 = var19.getDateArray(var39);
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var44.unregisterParameter((com.martiansoftware.jsap.Parameter)var46);
    java.lang.String var48 = var44.getUsage();
    java.lang.String var49 = var44.getUsage();
    com.martiansoftware.jsap.TestUsageString var50 = new com.martiansoftware.jsap.TestUsageString(var49);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var60 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    short var64 = var19.getShort(var49, (short)1);
    var1.setLongflag(var49);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var66 = var0.parse(var49);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var10.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var16.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var39.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "[--help]"+ "'", var48.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "[--help]"+ "'", var49.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == (short)1);

  }

  public void test28() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.Character var18 = var17.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = var17.setLongFlag("hi!");
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var40 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var48 = var46.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var50 = var46.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var40, var43, false, '4', "hi!");
    com.martiansoftware.jsap.FlaggedOption var57 = var17.setLongFlag("hi!");
    java.lang.String var58 = var17.getSyntax();
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    java.lang.String var61 = var59.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var62 = new com.martiansoftware.jsap.SimpleJSAP(var61);
    boolean var63 = var62.messagePrinted();
    var62.finalize();
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    java.lang.String var67 = var65.getUsage();
    java.util.Iterator var68 = var65.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    java.lang.String var71 = var69.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var72 = new com.martiansoftware.jsap.SimpleJSAP(var71);
    boolean var73 = var72.messagePrinted();
    boolean var74 = var72.messagePrinted();
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var81 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var85 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var86 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var87 = var76.getHelp((-1), "hi!");
    java.lang.String var88 = var72.getHelp(100, "hi!");
    java.lang.String var89 = var65.getHelp(100);
    com.martiansoftware.jsap.Flagged var90 = var62.getByLongFlag(var89);
    boolean var91 = var62.messagePrinted();
    java.lang.String var92 = var62.getHelp();
    java.lang.String[] var93 = new java.lang.String[] { var92};
    com.martiansoftware.jsap.FlaggedOption var94 = var17.setDefault(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + '4'+ "'", var18.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "(-4|--hi!)[:<hi!>]"+ "'", var58.equals("(-4|--hi!)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + ""+ "'", var87.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var88.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + ""+ "'", var89.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + ""+ "'", var92.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);

  }

  public void test29() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser("hi!");
    var51.testFloatRGB();
    var51.testHexRGB();
    var51.testIntegerRGB();
    var51.testByName();
    var51.testByName();
    var51.testByName();
    var51.testIntegerRGB();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);

  }

  public void test30() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigIntegerStringParser var0 = new com.martiansoftware.jsap.stringparsers.BigIntegerStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var26 = var15.getClass("hi!");
    java.lang.String var29 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var30 = var15.getURLArray(var29);
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    java.util.Iterator var33 = var31.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var34 = var31.getIDMap();
    java.lang.String var35 = var31.getHelp();
    java.lang.String var36 = var31.toString();
    java.lang.Object[] var37 = var15.getObjectArray(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var47 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var55 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var47, "hi!", true, '4', "", var54);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var56 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    java.lang.String var59 = var57.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var60 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var64 = var62.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var66 = var62.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var71 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var72 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var56, var59, false, '4', "hi!");
    java.lang.String var75 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var76 = com.martiansoftware.util.StringUtils.wrapToList(var59, 1);
    java.lang.String var77 = var15.getString(var59);
    com.martiansoftware.jsap.TestFlaggedOption var78 = new com.martiansoftware.jsap.TestFlaggedOption(var59);
    java.lang.String var79 = var78.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var80 = var0.parse(var79);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "hi!"+ "'", var29.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "hi!"+ "'", var75.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "(com.martiansoftware.jsap.TestFlaggedOption)"+ "'", var79.equals("(com.martiansoftware.jsap.TestFlaggedOption)"));

  }

  public void test31() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var3 = new com.martiansoftware.jsap.ant.ParserProperty();
    var0.addConfiguredProperty(var3);
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var8 = new com.martiansoftware.jsap.SimpleJSAP(var7);
    boolean var9 = var8.messagePrinted();
    java.lang.String var10 = var8.getHelp();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    java.lang.String var16 = var14.getHelp();
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException(var16);
    java.lang.String[] var18 = new java.lang.String[] { var16};
    com.martiansoftware.jsap.JSAPResult var19 = var8.parse(var18);
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.util.Iterator var22 = var20.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var23 = var20.getIDMap();
    java.lang.String var24 = var20.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var28 = var19.getByte(var24, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var29 = new com.martiansoftware.jsap.QualifiedSwitch(var24);
    var3.setValue(var24);
    java.lang.String var31 = var3.getValue();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.lang.String var34 = var32.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    boolean var36 = var35.messagePrinted();
    java.lang.String var37 = var35.getHelp();
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    java.lang.String var40 = var38.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var41 = new com.martiansoftware.jsap.SimpleJSAP(var40);
    boolean var42 = var41.messagePrinted();
    java.lang.String var43 = var41.getHelp();
    com.martiansoftware.jsap.ParseException var44 = new com.martiansoftware.jsap.ParseException(var43);
    java.lang.String[] var45 = new java.lang.String[] { var43};
    com.martiansoftware.jsap.JSAPResult var46 = var35.parse(var45);
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.util.Iterator var49 = var47.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var50 = var47.getIDMap();
    java.lang.String var51 = var47.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var55 = var46.getByte(var51, (byte)(-1));
    com.martiansoftware.jsap.SimpleJSAP var56 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    java.lang.String var57 = com.martiansoftware.util.StringUtils.noNull(var51);
    var3.setValue(var57);
    java.lang.String var59 = var3.getValue();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var10.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var16.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var37.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var43.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));

  }

  public void test32() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    java.util.Iterator var3 = var0.getUnflaggedOptionsIterator();
    var0.finalize();
    java.lang.String var5 = var0.toString();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.IDMap var9 = var6.getIDMap();
    java.lang.String var10 = var6.toString();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    java.lang.String var16 = var14.getHelp();
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    java.lang.String var19 = var17.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var20 = new com.martiansoftware.jsap.SimpleJSAP(var19);
    boolean var21 = var20.messagePrinted();
    java.lang.String var22 = var20.getHelp();
    com.martiansoftware.jsap.ParseException var23 = new com.martiansoftware.jsap.ParseException(var22);
    java.lang.String[] var24 = new java.lang.String[] { var22};
    com.martiansoftware.jsap.JSAPResult var25 = var14.parse(var24);
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var29 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var34 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var35 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var43 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var35, "hi!", true, '4', "", var42);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var44 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var45 = new java.lang.Object[] { var44};
    java.lang.Object[] var46 = var25.getObjectArray(var42, var45);
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    boolean var51 = var50.messagePrinted();
    java.lang.String var52 = var50.getHelp();
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    java.lang.String var55 = var53.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var56 = new com.martiansoftware.jsap.SimpleJSAP(var55);
    boolean var57 = var56.messagePrinted();
    java.lang.String var58 = var56.getHelp();
    com.martiansoftware.jsap.ParseException var59 = new com.martiansoftware.jsap.ParseException(var58);
    java.lang.String[] var60 = new java.lang.String[] { var58};
    com.martiansoftware.jsap.JSAPResult var61 = var50.parse(var60);
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var65 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var69 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var70 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var71 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var77 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var78 = var77.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var79 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var71, "hi!", true, '4', "", var78);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var80 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var81 = new java.lang.Object[] { var80};
    java.lang.Object[] var82 = var61.getObjectArray(var78, var81);
    boolean var83 = var25.userSpecified(var78);
    com.martiansoftware.jsap.defaultsources.PropertyDefaultSource var84 = new com.martiansoftware.jsap.defaultsources.PropertyDefaultSource(var10, var83);
    com.martiansoftware.jsap.Parameter var85 = var0.getByID(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var16.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var22.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var52.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var58.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == null);

  }

  public void test33() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.tearDown();
    junit.framework.TestResult var2 = var0.run();
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      var0.testOneLevelDefaults();
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test34() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.util.Iterator var17 = var15.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var18 = var15.getIDMap();
    java.lang.String var19 = var15.getHelp();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    java.util.Iterator var23 = var20.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    boolean var28 = var27.messagePrinted();
    boolean var29 = var27.messagePrinted();
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var42 = var31.getHelp((-1), "hi!");
    java.lang.String var43 = var27.getHelp(100, "hi!");
    java.lang.String var44 = var20.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var54 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, "hi!", true, '4', "", var61);
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var64 = var15.getHelp(100, "");
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    java.lang.String var67 = var65.getUsage();
    java.util.Iterator var68 = var65.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    java.lang.String var71 = var69.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var72 = new com.martiansoftware.jsap.SimpleJSAP(var71);
    boolean var73 = var72.messagePrinted();
    boolean var74 = var72.messagePrinted();
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var81 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var85 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var86 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var87 = var76.getHelp((-1), "hi!");
    java.lang.String var88 = var72.getHelp(100, "hi!");
    java.lang.String var89 = var65.getHelp(100);
    java.lang.String var90 = var15.getHelp(100);
    boolean[] var91 = var14.getBooleanArray(var90);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      long var92 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.parseSize((java.lang.CharSequence)var90);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var43.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + ""+ "'", var87.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var88.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + ""+ "'", var89.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + ""+ "'", var90.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);

  }

  public void test35() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test5();
    var0.test7();
    var0.test1();

  }

  public void test36() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test3();
    var0.test4();
    var0.test3();

  }

  public void test37() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    boolean var3 = var0.getIslist();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var8 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var9 = var5.setHelp("hi!");
    var5.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var12 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var14 = var13.getHelp();
    java.lang.String var15 = var13.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var16 = new com.martiansoftware.jsap.SimpleJSAP(var15);
    boolean var17 = var16.messagePrinted();
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var29 = var18.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var30 = new com.martiansoftware.jsap.SimpleJSAP(var29);
    com.martiansoftware.jsap.UnflaggedOption var31 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var12, var17, var29);
    com.martiansoftware.jsap.ant.SwitchConfiguration var32 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var33 = var32.getLongflag();
    var32.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var0.setListseparator('#');
    com.martiansoftware.jsap.ant.DefaultValue var56 = new com.martiansoftware.jsap.ant.DefaultValue();
    java.lang.String var57 = var56.getValue();
    var0.addConfiguredDefault(var56);
    boolean var59 = var0.declaredListSeparator();
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var68 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var69 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var69.testID();
    var69.testShortFlag();
    var69.testID();
    var69.testLongFlag();
    java.lang.String var74 = var69.toString();
    var0.setLongflag(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "hi!(com.martiansoftware.jsap.TestSwitch)"+ "'", var74.equals("hi!(com.martiansoftware.jsap.TestSwitch)"));

  }

  public void test38() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var30 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var43 = var0.getProperty("hi!", "hi!");
    com.martiansoftware.jsap.ParseException var44 = new com.martiansoftware.jsap.ParseException("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));

  }

  public void test39() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.tearDown();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testSimpleDefault();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test40() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test3();
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    var0.setName(var4);
    var0.test7();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));

  }

  public void test41() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    java.lang.String var47 = var27.getID();
    com.martiansoftware.jsap.TestCommandLineTokenizer var48 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var48.test3();
    var48.test7();
    var48.test2();
    var48.test8();
    var48.test4();
    java.lang.String var54 = var48.toString();
    junit.framework.Assert.assertNotNull(var47, (java.lang.Object)var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "null(com.martiansoftware.jsap.TestCommandLineTokenizer)"+ "'", var54.equals("null(com.martiansoftware.jsap.TestCommandLineTokenizer)"));

  }

  public void test42() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    var0.tearDown();
    com.martiansoftware.jsap.TestOption var3 = new com.martiansoftware.jsap.TestOption();
    int var4 = var3.countTestCases();
    var3.testParsing();
    java.lang.String var6 = var3.toString();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var14 = var13.getHelp();
    java.lang.String var15 = var13.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var16 = new com.martiansoftware.jsap.SimpleJSAP(var15);
    boolean var17 = var16.messagePrinted();
    java.lang.String var18 = var16.getHelp();
    com.martiansoftware.jsap.ParseException var19 = new com.martiansoftware.jsap.ParseException(var18);
    java.lang.String[] var20 = new java.lang.String[] { var18};
    com.martiansoftware.jsap.JSAPResult var21 = var10.parse(var20);
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var23 = var22.getHelp();
    java.lang.String var24 = var22.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var25 = new com.martiansoftware.jsap.SimpleJSAP(var24);
    boolean var26 = var25.messagePrinted();
    boolean var27 = var25.messagePrinted();
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var40 = var29.getHelp((-1), "hi!");
    java.lang.String var41 = var25.getHelp(100, "hi!");
    java.util.Date[] var42 = var21.getDateArray(var41);
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var46 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var50 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var52 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var60 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var52, "hi!", true, '4', "", var59);
    java.lang.Class[] var61 = var21.getClassArray("");
    com.martiansoftware.jsap.JSAPException var62 = new com.martiansoftware.jsap.JSAPException("");
    var0.setProperty(var6, "");
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null(com.martiansoftware.jsap.TestOption)"+ "'", var6.equals("null(com.martiansoftware.jsap.TestOption)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var18.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var41.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);

  }

  public void test43() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var12 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = var7.setStringParser((com.martiansoftware.jsap.StringParser)var12);
    com.martiansoftware.jsap.ant.SwitchConfiguration var14 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var15 = var14.getLongflag();
    var14.setShortflag('#');
    java.lang.String var18 = var14.getLongflag();
    var14.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var21 = var7.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    java.lang.String[] var40 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.FlaggedOption var41 = var21.setDefault(var40);
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var41);
    com.martiansoftware.jsap.stringparsers.URLStringParser var43 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var44 = var41.setStringParser((com.martiansoftware.jsap.StringParser)var43);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var46 = var43.parse("");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);

  }

  public void test44() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FloatStringParser var0 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    java.lang.String var19 = var18.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var19);
    com.martiansoftware.jsap.TestFlaggedOption var21 = new com.martiansoftware.jsap.TestFlaggedOption(var19);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var22 = var0.parse(var19);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var19.equals("(-4|--)[:<hi!>]"));

  }

  public void test45() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    com.martiansoftware.jsap.Switch var15 = var8.setDefault(var13);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = var17.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var21 = var17.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var31 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var21.addDefault("hi!");
    java.lang.String var35 = var21.getSyntax();
    boolean var36 = var21.isList();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var46 = var45.getShortFlag();
    char var47 = var45.getShortFlag();
    java.lang.Character var48 = var45.getShortFlagCharacter();
    java.lang.String var49 = var45.getSyntax();
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    java.lang.String var52 = var50.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var52);
    boolean var54 = var53.messagePrinted();
    java.lang.String var55 = var53.getHelp();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    boolean var60 = var59.messagePrinted();
    java.lang.String var61 = var59.getHelp();
    com.martiansoftware.jsap.ParseException var62 = new com.martiansoftware.jsap.ParseException(var61);
    java.lang.String[] var63 = new java.lang.String[] { var61};
    com.martiansoftware.jsap.JSAPResult var64 = var53.parse(var63);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var74 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var75 = var64.getClass("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var76 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var77 = var76.getID();
    com.martiansoftware.jsap.Switch var78 = var45.setLongFlag(var77);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var13, (java.lang.Object)var21, (java.lang.Object)var78);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "[<hi!>]"+ "'", var35.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + '4'+ "'", var48.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "[-4|--hi!]"+ "'", var49.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var55.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var61.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "hi!"+ "'", var77.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);

  }

  public void test46() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getShortflag();
    char var4 = var0.getShortflag();
    boolean var5 = var0.hasProperties();
    com.martiansoftware.jsap.Parameter var6 = var0.getParameter();
    java.lang.String var7 = var6.getHelp();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));

  }

  public void test47() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getHelp();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    java.util.Iterator var8 = var5.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    boolean var14 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    java.lang.String var28 = var12.getHelp(100, "hi!");
    java.lang.String var29 = var5.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var49 = var0.getHelp(100, "");
    java.lang.String var50 = var0.toString();
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    java.lang.String var54 = var52.getUsage();
    java.util.Iterator var55 = var52.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    boolean var60 = var59.messagePrinted();
    boolean var61 = var59.messagePrinted();
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var74 = var63.getHelp((-1), "hi!");
    java.lang.String var75 = var59.getHelp(100, "hi!");
    java.lang.String var76 = var52.getHelp(100);
    java.lang.String var77 = var0.getHelp(1, var76);
    java.lang.String var78 = var0.getHelp();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var28.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var75.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));

  }

  public void test48() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    java.lang.Class[] var54 = var14.getClassArray("");
    com.martiansoftware.jsap.JSAPException var55 = new com.martiansoftware.jsap.JSAPException("");
    com.martiansoftware.jsap.JSAPException var56 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);

  }

  public void test49() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var54 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    java.lang.String var57 = var55.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var58 = new com.martiansoftware.jsap.SimpleJSAP(var57);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var62 = var60.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var64 = var60.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var69 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var70 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, var57, false, '4', "hi!");
    java.lang.Exception[] var71 = var14.getExceptionArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var75 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var79 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var80 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var81 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var84 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var85 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var86 = var85.getSyntax();
    com.martiansoftware.jsap.ant.SwitchConfiguration var87 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var88 = var87.getLongflag();
    var87.setShortflag('#');
    java.lang.String var91 = var87.getLongflag();
    com.martiansoftware.jsap.UnknownFlagException var93 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var87.setShortflag('4');
    char var95 = var87.getShortflag();
    char var96 = var14.getChar(var86, var95);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      long var97 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.parseSize((java.lang.CharSequence)var86);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + "[[:<hi!>]]"+ "'", var86.equals("[[:<hi!>]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == '4');

  }

  public void test50() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var9.testSwitchParse();
    var9.testLongFlag();
    var9.testSwitchParse();
    var9.testShortFlag();
    var9.testShortFlag();

  }

  public void test51() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getUsage();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAPResult var7 = var0.parse("hi!");
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var12 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var13 = var9.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var14 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.math.BigInteger[] var15 = var7.getBigIntegerArray("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    com.martiansoftware.jsap.IDMap var20 = var19.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var39 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var47 = var45.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var49 = var45.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var54 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var55 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, var42, false, '4', "hi!");
    var19.setUsage(var42);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var60 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var64 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var65 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var66 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var73 = var72.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var74 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var66, "hi!", true, '4', "", var73);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var75 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    java.lang.String var78 = var76.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var79 = new com.martiansoftware.jsap.SimpleJSAP(var78);
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var83 = var81.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var85 = var81.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var87 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var90 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var91 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var75, var78, false, '4', "hi!");
    java.lang.String var94 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var95 = com.martiansoftware.util.StringUtils.wrapToList(var78, 1);
    java.util.List var97 = com.martiansoftware.util.StringUtils.wrapToList(var78, 1);
    java.lang.String var98 = var19.getHelp(1);
    java.lang.String var99 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!"+ "'", var12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "hi!"+ "'", var94.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var97 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var98 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var98.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var99 + "' != '" + "hi!"+ "'", var99.equals("hi!"));

  }

  public void test52() throws Throwable {

    com.martiansoftware.jsap.ant.ParserProperty var0 = new com.martiansoftware.jsap.ant.ParserProperty();
    java.lang.String var1 = var0.getValue();
    java.lang.String var2 = var0.getName();
    java.lang.String var3 = var0.getValue();
    java.lang.String var4 = var0.getValue();
    com.martiansoftware.jsap.ant.SwitchConfiguration var5 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var6 = var5.getLongflag();
    var5.setShortflag('#');
    java.lang.String var9 = var5.getLongflag();
    var5.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var5.setShortflag('4');
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    java.lang.String var20 = var18.getHelp();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    boolean var25 = var24.messagePrinted();
    java.lang.String var26 = var24.getHelp();
    com.martiansoftware.jsap.ParseException var27 = new com.martiansoftware.jsap.ParseException(var26);
    java.lang.String[] var28 = new java.lang.String[] { var26};
    com.martiansoftware.jsap.JSAPResult var29 = var18.parse(var28);
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.util.Iterator var32 = var30.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var33 = var30.getIDMap();
    java.lang.String var34 = var30.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var38 = var29.getByte(var34, (byte)(-1));
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    java.lang.String var40 = com.martiansoftware.util.StringUtils.noNull(var34);
    var5.setLongflag(var40);
    var0.setValue(var40);
    com.martiansoftware.jsap.TestOption var43 = new com.martiansoftware.jsap.TestOption();
    int var44 = var43.countTestCases();
    java.lang.String var45 = var43.toString();
    com.martiansoftware.jsap.TestOption var46 = new com.martiansoftware.jsap.TestOption();
    int var47 = var46.countTestCases();
    int var48 = var46.countTestCases();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var58 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var66 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var58, "hi!", true, '4', "", var65);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var67 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var68 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var69 = var68.getHelp();
    java.lang.String var70 = var68.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var71 = new com.martiansoftware.jsap.SimpleJSAP(var70);
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var75 = var73.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var77 = var73.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var79 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var82 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var83 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var67, var70, false, '4', "hi!");
    java.lang.String var86 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var87 = com.martiansoftware.util.StringUtils.wrapToList(var70, 1);
    junit.framework.Assert.assertNotSame((java.lang.Object)var48, (java.lang.Object)var87);
    java.lang.String var89 = com.martiansoftware.util.StringUtils.padRight(var45, var48);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var40, var45);
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var20.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var26.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "null(com.martiansoftware.jsap.TestOption)"+ "'", var45.equals("null(com.martiansoftware.jsap.TestOption)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + "hi!"+ "'", var86.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + "null(com.martiansoftware.jsap.TestOption) "+ "'", var89.equals("null(com.martiansoftware.jsap.TestOption) "));

  }

  public void test53() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    char var2 = var1.getShortFlag();
    boolean var3 = var1.allowMultipleDeclarations();
    java.lang.String var4 = var1.getSyntax();
    com.martiansoftware.jsap.TestFlaggedOption var5 = new com.martiansoftware.jsap.TestFlaggedOption(var4);
    var5.testShortFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "[<hi!>]"+ "'", var4.equals("[<hi!>]"));

  }

  public void test54() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    java.lang.String[] var22 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var32 = var0.getProperty("", "hi!");
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var33 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser("");
    com.martiansoftware.jsap.UnflaggedOption var34 = new com.martiansoftware.jsap.UnflaggedOption("");
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var35 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var36 = var35.hasProperties();
    java.lang.String var37 = var35.getStringparser();
    boolean var38 = var35.getIslist();
    com.martiansoftware.jsap.UnflaggedOption var39 = var34.setRequired(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);

  }

  public void test55() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.JSAPResult var43 = var0.parse(var42);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var44 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var42);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);

  }

  public void test56() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.tearDown();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testRequired();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test57() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test7();
    var0.test9();
    var0.test8();

  }

  public void test58() throws Throwable {

    com.martiansoftware.jsap.stringparsers.CharacterStringParser var0 = new com.martiansoftware.jsap.stringparsers.CharacterStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.util.Iterator var3 = var1.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var4 = var1.getIDMap();
    java.lang.String var5 = var1.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    java.util.Iterator var9 = var6.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    boolean var15 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var28 = var17.getHelp((-1), "hi!");
    java.lang.String var29 = var13.getHelp(100, "hi!");
    java.lang.String var30 = var6.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var40 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var48 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var40, "hi!", true, '4', "", var47);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var50 = var1.getHelp(100, "");
    java.lang.String var51 = var1.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var52 = var0.parse(var51);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var29.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));

  }

  public void test59() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var30 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var43 = var0.getProperty("hi!", "hi!");
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var45 = var44.getLongFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == null);

  }

  public void test60() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    java.lang.String var12 = var8.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame(var12);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "[-4|--hi!]"+ "'", var12.equals("[-4|--hi!]"));

  }

  public void test61() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.TestFlaggedOption var18 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    var18.testShortFlag();
    var18.testLongFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));

  }

  public void test62() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser("hi!");
    var51.testFloatRGB();
    var51.testHexRGB();
    var51.testIntegerRGB();
    var51.testByName();
    var51.testFloatRGB();
    var51.testHexRGB();
    var51.testByName();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);

  }

  public void test63() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    java.lang.String var28 = var26.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var29 = new com.martiansoftware.jsap.SimpleJSAP(var28);
    com.martiansoftware.jsap.IDMap var30 = var29.getIDMap();
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var42 = var31.getHelp((-1), "hi!");
    java.lang.String var43 = var30.getIDByLongFlag(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var53 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var61 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var53, "hi!", true, '4', "", var60);
    java.util.List var63 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var64 = var30.getIDByLongFlag("");
    long[] var65 = var14.getLongArray("");
    boolean var66 = var14.success();
    boolean var67 = var14.success();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var67);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);

  }

  public void test64() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    java.lang.String[] var22 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var32 = var0.getProperty("", "hi!");
    var0.tearDown();
    var0.tearDown();
    var0.setUp();
    var0.tearDown();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));

  }

  public void test65() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var32 = var30.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var33 = var27.setList(false);
    java.lang.String var34 = var33.getUsageName();
    java.lang.String var35 = var33.getHelp();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));

  }

  public void test66() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.UnspecifiedParameterException var18 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    com.martiansoftware.jsap.TestCommandLineTokenizer var19 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var19.test7();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull("", (java.lang.Object)var19);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));

  }

  public void test67() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getShortflag();
    boolean var4 = var0.getIslist();
    boolean var5 = var0.hasProperties();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.JSAP var12 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var13 = var12.getHelp();
    java.lang.String var14 = var12.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var15 = new com.martiansoftware.jsap.SimpleJSAP(var14);
    boolean var16 = var15.messagePrinted();
    java.lang.String var17 = var15.getHelp();
    com.martiansoftware.jsap.ParseException var18 = new com.martiansoftware.jsap.ParseException(var17);
    java.lang.String[] var19 = new java.lang.String[] { var17};
    com.martiansoftware.jsap.JSAPResult var20 = var9.parse(var19);
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.util.Iterator var23 = var21.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var24 = var21.getIDMap();
    java.lang.String var25 = var21.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var29 = var20.getByte(var25, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var30 = new com.martiansoftware.jsap.QualifiedSwitch(var25);
    boolean var31 = var30.required();
    char var32 = var30.getShortFlag();
    var0.setListseparator(var32);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var34 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var35 = var34.getParameter();
    java.lang.String var36 = var34.getStringparser();
    java.lang.String var37 = var34.getId();
    char var38 = var34.getListseparator();
    var0.setShortflag(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var17.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == ':');

  }

  public void test68() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ClassStringParser var0 = new com.martiansoftware.jsap.stringparsers.ClassStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var26 = var15.getClass("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var27 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var28 = var27.getID();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var29 = var0.parse(var28);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));

  }

  public void test69() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    java.lang.String var17 = var4.getIDByLongFlag(var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    char var20 = var19.getShortFlag();
    boolean var21 = var19.allowMultipleDeclarations();
    java.lang.String var22 = var19.getSyntax();
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption(var22);
    boolean var24 = var4.idExists(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "[<hi!>]"+ "'", var22.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);

  }

  public void test70() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    java.lang.String var7 = var3.getUsage();
    boolean var8 = var3.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var18 = var17.getShortFlag();
    char var19 = var17.getShortFlag();
    java.lang.String var20 = var17.getSyntax();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var30 = var29.getShortFlag();
    char var31 = var29.getShortFlag();
    char var32 = var29.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var38 = var34.setHelp("hi!");
    var34.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var41 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    boolean var46 = var45.messagePrinted();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var58 = var47.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    com.martiansoftware.jsap.UnflaggedOption var60 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var41, var46, var58);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var70 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var78 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, "hi!", true, '4', "", var77);
    com.martiansoftware.jsap.UnflaggedOption var79 = var60.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var80 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var81 = var79.setStringParser((com.martiansoftware.jsap.StringParser)var80);
    char var82 = var79.getListSeparator();
    com.martiansoftware.jsap.Switch var83 = var29.setShortFlag(var82);
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var86 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var87 = var29.setLongFlag("hi!");
    com.martiansoftware.jsap.Switch var88 = new com.martiansoftware.jsap.Switch("hi!");
    junit.framework.Assert.assertEquals("hi!", 0L, 0L);
    com.martiansoftware.jsap.RequiredParameterMissingException var92 = new com.martiansoftware.jsap.RequiredParameterMissingException("hi!");
    com.martiansoftware.jsap.Switch var93 = var17.setDefault("hi!");
    var3.registerParameter((com.martiansoftware.jsap.Parameter)var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "[--help]"+ "'", var7.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "[-4|--hi!]"+ "'", var20.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);

  }

  public void test71() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    java.lang.String var4 = var1.getID();
    java.lang.String[] var5 = var1.getDefault();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    var7.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var14 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var31 = var20.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    com.martiansoftware.jsap.UnflaggedOption var33 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var14, var19, var31);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var43 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var51 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var43, "hi!", true, '4', "", var50);
    com.martiansoftware.jsap.UnflaggedOption var52 = var33.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var53 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var54 = var52.setStringParser((com.martiansoftware.jsap.StringParser)var53);
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var62 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var63 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var64 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var70 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var71 = var70.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var72 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var64, "hi!", true, '4', "", var71);
    java.lang.String var73 = var72.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var73);
    com.martiansoftware.jsap.UnflaggedOption var75 = var52.setUsageName(var73);
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var80 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var81 = var77.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var82 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var83 = var77.setStringParser((com.martiansoftware.jsap.StringParser)var82);
    com.martiansoftware.jsap.ant.SwitchConfiguration var84 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var85 = var84.getLongflag();
    var84.setShortflag('#');
    java.lang.String var88 = var84.getLongflag();
    var84.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var91 = var77.setListSeparator('#');
    com.martiansoftware.jsap.UnflaggedOption var92 = var52.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var93 = var1.setShortFlag('#');
    boolean var94 = var1.required();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var73.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "hi!"+ "'", var80.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == false);

  }

  public void test72() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var40 = var34.setRequired(var39);
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var47 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var48 = var47.getParameter();
    boolean var49 = var47.declaredListSeparator();
    char var50 = var47.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var51 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var52 = var51.hasProperties();
    var47.setRequired(var52);
    junit.framework.Assert.assertFalse(var46, var52);
    com.martiansoftware.jsap.FlaggedOption var55 = var40.setList(var52);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var65 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var65, "hi!", true, '4', "", var72);
    java.lang.Character var74 = var73.getShortFlagCharacter();
    char var75 = var73.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var76 = var55.setListSeparator(var75);
    java.lang.String var77 = var55.getLongFlag();
    java.lang.String var78 = var55.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + '4'+ "'", var74.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "hi!"+ "'", var77.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var78.equals("[(-4|--hi!)[:<hi!>]]"));

  }

  public void test73() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    var35.setUsage(var38);
    java.lang.String var41 = var35.toString();
    com.martiansoftware.jsap.SimpleJSAP var43 = var35.setScreenWidth(1);
    java.lang.String var44 = var43.getUsage();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));

  }

  public void test74() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.ant.SwitchConfiguration var28 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var29 = var28.getLongflag();
    var28.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    java.lang.String var51 = var50.getLongFlag();
    com.martiansoftware.jsap.SyntaxException var52 = new com.martiansoftware.jsap.SyntaxException(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "hi!"+ "'", var51.equals("hi!"));

  }

  public void test75() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var40 = var34.setRequired(var39);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var41 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var42 = var41.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var43 = var34.setAllowMultipleDeclarations(var42);
    boolean var44 = var43.required();
    java.lang.String var45 = var43.getLongFlag();
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    boolean var50 = var49.messagePrinted();
    java.lang.String var51 = var49.getHelp();
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    java.lang.String var54 = var52.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var55 = new com.martiansoftware.jsap.SimpleJSAP(var54);
    boolean var56 = var55.messagePrinted();
    java.lang.String var57 = var55.getHelp();
    com.martiansoftware.jsap.ParseException var58 = new com.martiansoftware.jsap.ParseException(var57);
    java.lang.String[] var59 = new java.lang.String[] { var57};
    com.martiansoftware.jsap.JSAPResult var60 = var49.parse(var59);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var70 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var78 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, "hi!", true, '4', "", var77);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var79 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var80 = new java.lang.Object[] { var79};
    java.lang.Object[] var81 = var60.getObjectArray(var77, var80);
    com.martiansoftware.jsap.FlaggedOption var82 = var43.setLongFlag(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "hi!"+ "'", var45.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var51.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var57.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);

  }

  public void test76() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntegerStringParser var0 = com.martiansoftware.jsap.stringparsers.IntegerStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var16 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var17 = var16.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var18 = var4.setScreenWidth(var17);
    java.lang.String var19 = var4.getUsage();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var20 = var0.parse(var19);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "[--help]"+ "'", var19.equals("[--help]"));

  }

  public void test77() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testSimpleDefault();
    var0.setUp();
    java.lang.String var4 = var0.getName();
    var0.testRequired();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);

  }

  public void test78() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.IntSizeStringParser.getParser();
    var0.tearDown();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var11 = var10.getShortFlag();
    char var12 = var10.getShortFlag();
    java.lang.Character var13 = var10.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var17 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var21 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var22 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var23 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var26 = var10.setDefault("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var27 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + '4'+ "'", var13.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);

  }

  public void test79() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var2 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var3 = var2.getLongflag();
    var2.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var6 = var1.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var16 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var23 = var22.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var24 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var16, "hi!", true, '4', "", var23);
    java.lang.Character var25 = var24.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var26 = var1.setShortFlag((char)var25);
    java.lang.String[] var27 = var26.getDefault();
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    java.lang.String var30 = var28.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    boolean var32 = var31.messagePrinted();
    java.lang.String var33 = var31.getHelp();
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var35 = var34.getHelp();
    java.lang.String var36 = var34.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var37 = new com.martiansoftware.jsap.SimpleJSAP(var36);
    boolean var38 = var37.messagePrinted();
    java.lang.String var39 = var37.getHelp();
    com.martiansoftware.jsap.ParseException var40 = new com.martiansoftware.jsap.ParseException(var39);
    java.lang.String[] var41 = new java.lang.String[] { var39};
    com.martiansoftware.jsap.JSAPResult var42 = var31.parse(var41);
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    java.util.Iterator var45 = var43.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var46 = var43.getIDMap();
    java.lang.String var47 = var43.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var51 = var42.getByte(var47, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var52 = new com.martiansoftware.jsap.QualifiedSwitch(var47);
    boolean var53 = var52.required();
    com.martiansoftware.jsap.FlaggedOption var54 = var26.setAllowMultipleDeclarations(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + '4'+ "'", var25.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var33.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var39.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);

  }

  public void test80() throws Throwable {

    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((byte)10, (byte)100);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test81() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    boolean var3 = var0.mustExist();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var13 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var21 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var13, "hi!", true, '4', "", var20);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var27 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var28 = var24.setHelp("hi!");
    var24.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var31 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.lang.String var34 = var32.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    boolean var36 = var35.messagePrinted();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var48 = var37.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    com.martiansoftware.jsap.UnflaggedOption var50 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var31, var36, var48);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.UnflaggedOption var69 = var50.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var70 = var22.setList(true);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var75 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var76 = var72.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var77 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var78 = var72.setStringParser((com.martiansoftware.jsap.StringParser)var77);
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var86 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var87 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var88 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var91 = var78.setHelp("hi!");
    com.martiansoftware.jsap.FlaggedOption var92 = var22.setUsageName("hi!");
    com.martiansoftware.jsap.FlaggedOption var94 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var95 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    java.lang.String var96 = var0.getProperty("hi!", "hi!");
    com.martiansoftware.jsap.UnknownFlagException var97 = new com.martiansoftware.jsap.UnknownFlagException("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi!"+ "'", var27.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "hi!"+ "'", var75.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "hi!"+ "'", var96.equals("hi!"));

  }

  public void test82() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    java.lang.String var4 = var1.getID();
    char var5 = var1.getShortFlag();
    boolean var6 = var1.required();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);

  }

  public void test83() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.IntSizeStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.IDMap var4 = var1.getIDMap();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var6 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var7 = var6.idIterator();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var19 = var8.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var29 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var37 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var29, "hi!", true, '4', "", var36);
    java.lang.String[] var38 = new java.lang.String[] { var36};
    var6.addDefault(var19, var38);
    java.lang.String[] var40 = new java.lang.String[] { var19};
    com.martiansoftware.jsap.JSAPResult var41 = var5.parse(var40);
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var51 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var54 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var55 = var41.contains("hi!");
    java.math.BigInteger[] var57 = var41.getBigIntegerArray("");
    boolean var58 = var4.idExists("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var59 = var0.parse("");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);

  }

  public void test84() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    java.lang.String var5 = var0.getId();
    char var6 = var0.getShortflag();
    com.martiansoftware.jsap.Parameter var7 = var0.getParameter();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);

  }

  public void test85() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var11 = var0.getHelp((-1), "hi!");
    com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource var12 = new com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource();
    int var13 = var12.countTestCases();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((-1), var13);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);

  }

  public void test86() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    boolean var3 = var0.mustExist();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var13 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var21 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var13, "hi!", true, '4', "", var20);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var27 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var28 = var24.setHelp("hi!");
    var24.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var31 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.lang.String var34 = var32.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    boolean var36 = var35.messagePrinted();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var48 = var37.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    com.martiansoftware.jsap.UnflaggedOption var50 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var31, var36, var48);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.UnflaggedOption var69 = var50.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var70 = var22.setList(true);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var75 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var76 = var72.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var77 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var78 = var72.setStringParser((com.martiansoftware.jsap.StringParser)var77);
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var86 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var87 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var88 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var91 = var78.setHelp("hi!");
    com.martiansoftware.jsap.FlaggedOption var92 = var22.setUsageName("hi!");
    com.martiansoftware.jsap.FlaggedOption var94 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var95 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    java.lang.String var96 = var0.getProperty("hi!", "hi!");
    boolean var97 = var0.mustBeDirectory();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi!"+ "'", var27.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "hi!"+ "'", var75.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "hi!"+ "'", var96.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);

  }

  public void test87() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.ant.ParserProperty var26 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var31 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var32 = var28.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var33 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var26.setValue("hi!");
    java.io.File[] var35 = var14.getFileArray("hi!");
    com.martiansoftware.jsap.TestOption var36 = new com.martiansoftware.jsap.TestOption();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var36.setName("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      short var47 = var14.getShort("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "hi!"+ "'", var31.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);

  }

  public void test88() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.UnspecifiedParameterException var18 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var22 = var20.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var24 = var20.setRequired(false);
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var26 = var25.getHelp();
    java.lang.String var27 = var25.getUsage();
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setUsageName(var27);
    junit.framework.Assert.assertNotNull("", (java.lang.Object)var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);

  }

  public void test89() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    var7.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var14 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var31 = var20.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    com.martiansoftware.jsap.UnflaggedOption var33 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var14, var19, var31);
    boolean var34 = var33.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var38 = var36.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var39 = var33.setList(false);
    java.lang.String var40 = var39.getUsageName();
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    boolean var51 = var50.messagePrinted();
    java.lang.String var52 = var50.getHelp();
    com.martiansoftware.jsap.ParseException var53 = new com.martiansoftware.jsap.ParseException(var52);
    java.lang.String[] var54 = new java.lang.String[] { var52};
    com.martiansoftware.jsap.JSAPResult var55 = var44.parse(var54);
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    float[] var60 = var55.getFloatArray(var58);
    boolean var61 = var55.success();
    com.martiansoftware.jsap.UnflaggedOption var62 = var39.setList(var61);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var63 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var5, var61);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var52.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);

  }

  public void test90() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var38 = var34.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var39 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var40 = var39.getID();
    boolean[] var41 = var14.getBooleanArray(var40);
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var46 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var47 = var43.setHelp("hi!");
    java.lang.String[] var48 = var14.getStringArray("hi!");
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var49 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser("hi!");
    var49.testBasicParse();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!"+ "'", var40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "hi!"+ "'", var46.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);

  }

  public void test91() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var5.addDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var23 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var24 = var20.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var25 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = var20.setStringParser((com.martiansoftware.jsap.StringParser)var25);
    com.martiansoftware.jsap.FlaggedOption var27 = var5.setStringParser((com.martiansoftware.jsap.StringParser)var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var37 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var40 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var41 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var42 = var41.getSyntax();
    java.lang.Object var43 = var25.parse(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!"+ "'", var23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "[[:<hi!>]]"+ "'", var42.equals("[[:<hi!>]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "[[:<hi!>]]"+ "'", var43.equals("[[:<hi!>]]"));

  }

  public void test92() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    java.lang.String var17 = var4.getIDByLongFlag(var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.util.List var37 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var38 = var4.getIDByLongFlag("");
    java.util.Iterator var39 = var4.idIterator();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)var39);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);

  }

  public void test93() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    boolean var48 = var14.success();
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    java.lang.String var51 = var49.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    boolean var53 = var52.messagePrinted();
    java.lang.String var54 = var52.getHelp();
    java.lang.String var57 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var57, 10.0f, 10.0f, 1.0f);
    var52.setHelp(var57);
    java.util.Date[] var69 = var14.getDateArray(var57);
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var73 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var77 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var78 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var79 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var85 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var86 = var85.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var87 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var79, "hi!", true, '4', "", var86);
    java.lang.Character var88 = var87.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var90 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var91 = var87.setLongFlag("hi!");
    java.math.BigDecimal[] var92 = var14.getBigDecimalArray("hi!");
    com.martiansoftware.jsap.TestSwitch var93 = new com.martiansoftware.jsap.TestSwitch("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var54.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "hi!"+ "'", var57.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + ""+ "'", var86.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + '4'+ "'", var88.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);

  }

  public void test94() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var2 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var3 = var2.getLongflag();
    var2.setShortflag('#');
    java.lang.String var6 = var2.getLongflag();
    char var7 = var2.getShortflag();
    var0.setShortflag(var7);
    boolean var9 = var0.declaredListSeparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var10 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var11 = var10.hasProperties();
    java.lang.String var12 = var10.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var13 = new com.martiansoftware.jsap.ant.ParserProperty();
    var10.addConfiguredProperty(var13);
    var0.addConfiguredProperty(var13);
    java.lang.String var16 = var13.getValue();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == null);

  }

  public void test95() throws Throwable {

    com.martiansoftware.jsap.stringparsers.CharacterStringParser var0 = new com.martiansoftware.jsap.stringparsers.CharacterStringParser();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var1 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    java.lang.String[] var2 = var1.getDefaults();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var4 = var3.getHelp();
    java.lang.String var5 = var3.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var6 = new com.martiansoftware.jsap.SimpleJSAP(var5);
    com.martiansoftware.jsap.IDMap var7 = var6.getIDMap();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var19 = var8.getHelp((-1), "hi!");
    java.lang.String var20 = var7.getIDByLongFlag(var19);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var39 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var47 = var45.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var49 = var45.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var54 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var55 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, var42, false, '4', "hi!");
    java.lang.String var58 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var59 = com.martiansoftware.util.StringUtils.wrapToList(var42, 1);
    java.util.List var61 = com.martiansoftware.util.StringUtils.wrapToList(var42, 1);
    com.martiansoftware.jsap.SyntaxException var62 = new com.martiansoftware.jsap.SyntaxException(var42);
    boolean var63 = var7.idExists(var42);
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var71 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var72 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var73 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var79 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var80 = var79.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var81 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var73, "hi!", true, '4', "", var80);
    java.lang.String var82 = var81.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var82);
    boolean var84 = var7.idExists(var82);
    var1.setDefault(var82);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var86 = var0.parse(var82);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "hi!"+ "'", var58.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + ""+ "'", var80.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var82.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == false);

  }

  public void test96() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    boolean var47 = var27.isList();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var48 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var49 = var48.getParameter();
    boolean var50 = var48.declaredListSeparator();
    char var51 = var48.getShortflag();
    boolean var52 = var48.getIslist();
    boolean var53 = var48.hasProperties();
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    java.lang.String var56 = var54.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var57 = new com.martiansoftware.jsap.SimpleJSAP(var56);
    boolean var58 = var57.messagePrinted();
    java.lang.String var59 = var57.getHelp();
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    java.lang.String var62 = var60.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var63 = new com.martiansoftware.jsap.SimpleJSAP(var62);
    boolean var64 = var63.messagePrinted();
    java.lang.String var65 = var63.getHelp();
    com.martiansoftware.jsap.ParseException var66 = new com.martiansoftware.jsap.ParseException(var65);
    java.lang.String[] var67 = new java.lang.String[] { var65};
    com.martiansoftware.jsap.JSAPResult var68 = var57.parse(var67);
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    java.util.Iterator var71 = var69.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var72 = var69.getIDMap();
    java.lang.String var73 = var69.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var77 = var68.getByte(var73, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var78 = new com.martiansoftware.jsap.QualifiedSwitch(var73);
    boolean var79 = var78.required();
    char var80 = var78.getShortFlag();
    var48.setListseparator(var80);
    com.martiansoftware.jsap.UnflaggedOption var82 = var27.setListSeparator(var80);
    java.lang.String var83 = var82.getID();
    java.lang.String var84 = var82.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var59.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var65.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + ""+ "'", var83.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + "<>"+ "'", var84.equals("<>"));

  }

  public void test97() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var36 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var44 = var42.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var46 = var42.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var52 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var36, var39, false, '4', "hi!");
    java.lang.String var55 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var56 = com.martiansoftware.util.StringUtils.wrapToList(var39, 1);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    junit.framework.Assert.assertEquals(var39, (short)0, (short)0);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var68 = var9.parse(var39);
      fail("Expected exception of type java.lang.StringIndexOutOfBoundsException");
    } catch (java.lang.StringIndexOutOfBoundsException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!"+ "'", var55.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);

  }

  public void test98() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    com.martiansoftware.jsap.TestOption var7 = new com.martiansoftware.jsap.TestOption();
    int var8 = var7.countTestCases();
    int var9 = var7.countTestCases();
    int var10 = var7.countTestCases();
    java.lang.String var11 = var3.getHelp(var10);
    com.martiansoftware.jsap.TestUsageString var12 = new com.martiansoftware.jsap.TestUsageString(var11);
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException();
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException((java.lang.Throwable)var13);
    com.martiansoftware.jsap.JSAPException var15 = new com.martiansoftware.jsap.JSAPException(var11, (java.lang.Throwable)var13);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    java.util.Iterator var19 = var16.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    boolean var24 = var23.messagePrinted();
    boolean var25 = var23.messagePrinted();
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var38 = var27.getHelp((-1), "hi!");
    java.lang.String var39 = var23.getHelp(100, "hi!");
    java.lang.String var40 = var16.getHelp(100);
    java.util.List var41 = com.martiansoftware.util.StringUtils.wrapToList(var11, 100);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var11.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var39.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);

  }

  public void test99() throws Throwable {

    com.martiansoftware.jsap.QualifiedSwitch var1 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var20 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var28 = var26.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var30 = var26.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var36 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var20, var23, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var42 = var36.setRequired(var41);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var43 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var44 = var43.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var45 = var36.setAllowMultipleDeclarations(var44);
    boolean var46 = var45.required();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var47 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var48 = var47.hasProperties();
    java.lang.String var49 = var47.getStringparser();
    boolean var50 = var47.getIslist();
    com.martiansoftware.jsap.ant.ParserProperty[] var51 = var47.getParserProperties();
    java.lang.String var52 = var47.getId();
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    java.lang.String var55 = var53.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var56 = new com.martiansoftware.jsap.SimpleJSAP(var55);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var56.unregisterParameter((com.martiansoftware.jsap.Parameter)var58);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var68 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var69 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var77 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var69, "hi!", true, '4', "", var76);
    java.lang.String var78 = var77.getSyntax();
    java.lang.Character var79 = var77.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var80 = var58.setListSeparator((char)var79);
    boolean var81 = var58.isList();
    var47.setRequired(var81);
    com.martiansoftware.jsap.FlaggedOption var83 = var45.setAllowMultipleDeclarations(var81);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var84 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser("hi!", var81);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var78.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + '4'+ "'", var79.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);

  }

  public void test100() throws Throwable {

    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var10, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    junit.framework.Assert.assertEquals(var10, 100.0d, 10.0d, 100.0d);
    junit.framework.Assert.assertEquals(100.0d, 100.0d, 10.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));

  }

  public void test101() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BooleanStringParser var0 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var7 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var8 = var2.setStringParser((com.martiansoftware.jsap.StringParser)var7);
    java.lang.String var9 = var8.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var10 = var0.parse(var9);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "[<hi!>]"+ "'", var9.equals("[<hi!>]"));

  }

  public void test102() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.tearDown();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = var0.getProperty("hi!");
    var0.setUp();
    var0.setUp();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);

  }

  public void test103() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.ColorStringParser var18 = com.martiansoftware.jsap.stringparsers.ColorStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var28 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var35 = var34.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var36 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var28, "hi!", true, '4', "", var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var55 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var63 = var61.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var65 = var61.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var71 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var55, var58, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var73 = var72.getHelp();
    java.lang.String var74 = var72.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var75 = new com.martiansoftware.jsap.SimpleJSAP(var74);
    boolean var76 = var75.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var80 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var84 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var85 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var86 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var92 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var93 = var92.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var94 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var86, "hi!", true, '4', "", var93);
    com.martiansoftware.jsap.UnflaggedOption var95 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var18, "hi!", false, var76, "hi!");
    boolean var96 = var95.isGreedy();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var96);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ""+ "'", var93.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == false);

  }

  public void test104() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch(var21);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    com.martiansoftware.jsap.UnspecifiedParameterException var54 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var57 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var56);
    com.martiansoftware.jsap.ParseException var58 = new com.martiansoftware.jsap.ParseException("", (java.lang.Throwable)var57);
    com.martiansoftware.jsap.Switch var59 = var35.setDefault("");
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var62 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var63 = var62.getLongflag();
    var62.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var66 = var61.setListSeparator('#');
    char var67 = var66.getShortFlag();
    com.martiansoftware.jsap.Switch var68 = var59.setShortFlag(var67);
    java.lang.String var69 = var59.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "[]"+ "'", var69.equals("[]"));

  }

  public void test105() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var7 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var8 = var4.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var9 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var10 = var9.getID();
    java.lang.String var11 = var9.getID();
    var0.setLongflag(var11);
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var15 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var16 = var15.getLongflag();
    var15.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var19 = var14.setListSeparator('#');
    boolean var20 = var19.isList();
    var0.setAllowmultipledeclarations(var20);
    char var22 = var0.getShortflag();
    boolean var23 = var0.hasProperties();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);

  }

  public void test106() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String[] var19 = var18.getDefault();
    char var20 = var18.getShortFlag();
    java.lang.Character var21 = var18.getShortFlagCharacter();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == null);

  }

  public void test107() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    boolean var5 = var3.messagePrinted();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var6 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var7 = var6.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var8 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var9 = var8.getLongflag();
    var8.setShortflag('#');
    java.lang.String var12 = var8.getLongflag();
    char var13 = var8.getShortflag();
    var6.setShortflag(var13);
    java.lang.String[] var15 = var6.getDefaults();
    boolean var16 = var6.getIslist();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var26 = var25.getShortFlag();
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var38 = var27.getHelp((-1), "hi!");
    java.lang.String[] var39 = new java.lang.String[] { var38};
    com.martiansoftware.jsap.Switch var40 = var25.setDefault(var39);
    char var41 = var40.getShortFlag();
    var6.setListseparator(var41);
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var47 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var48 = var44.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var49 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var50 = var44.setStringParser((com.martiansoftware.jsap.StringParser)var49);
    com.martiansoftware.jsap.ant.SwitchConfiguration var51 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var52 = var51.getLongflag();
    var51.setShortflag('#');
    java.lang.String var55 = var51.getLongflag();
    var51.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var58 = var44.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var62 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var66 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var67 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var68 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var74 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var75 = var74.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var76 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var68, "hi!", true, '4', "", var75);
    java.lang.String[] var77 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.FlaggedOption var78 = var58.setDefault(var77);
    com.martiansoftware.jsap.ant.SwitchConfiguration var79 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    boolean var80 = var79.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var81 = var78.setList(var80);
    var6.setAllowmultipledeclarations(var80);
    com.martiansoftware.jsap.Parameter var83 = var6.getParameter();
    var3.registerParameter(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "hi!"+ "'", var47.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);

  }

  public void test108() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser("hi!");
    var51.testFloatRGB();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var51.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);

  }

  public void test109() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test3();
    var0.test9();
    var0.test7();

  }

  public void test110() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var6 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var5);
    java.lang.String var7 = var5.toString();
    var0.setLongflag(var7);
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    java.lang.String var14 = var12.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var15 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var16 = var15.hasProperties();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var17 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var18 = var17.hasProperties();
    java.lang.String var19 = var17.getStringparser();
    boolean var20 = var17.getIslist();
    com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var21 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var14, var16, var20);
    var0.setRequired(var16);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var27 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var28 = var24.setHelp("hi!");
    var24.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var31 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.lang.String var34 = var32.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    boolean var36 = var35.messagePrinted();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var48 = var37.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    com.martiansoftware.jsap.UnflaggedOption var50 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var31, var36, var48);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.UnflaggedOption var69 = var50.setRequired(true);
    boolean var70 = var50.isList();
    var0.setAllowmultipledeclarations(var70);
    java.lang.String var72 = var0.getLongflag();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var7.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var14.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi!"+ "'", var27.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var72.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));

  }

  public void test111() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var47 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var48 = var46.setStringParser((com.martiansoftware.jsap.StringParser)var47);
    boolean var49 = var46.isGreedy();
    java.lang.String var50 = var46.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "<>"+ "'", var50.equals("<>"));

  }

  public void test112() throws Throwable {

    com.martiansoftware.jsap.TestOption var0 = new com.martiansoftware.jsap.TestOption();
    int var1 = var0.countTestCases();
    var0.testParsing();
    java.lang.String var3 = var0.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail(var3);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "null(com.martiansoftware.jsap.TestOption)"+ "'", var3.equals("null(com.martiansoftware.jsap.TestOption)"));

  }

  public void test113() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.JSAPResult var43 = var0.parse(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var53 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var56 = new com.martiansoftware.jsap.TestOption();
    int var57 = var56.countTestCases();
    int var58 = var56.countTestCases();
    java.lang.String var59 = com.martiansoftware.util.StringUtils.padRight("hi!", var58);
    com.martiansoftware.jsap.JSAPResult var60 = var0.parse(var59);
    boolean var61 = var60.success();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi! "+ "'", var59.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);

  }

  public void test114() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    boolean var5 = var3.messagePrinted();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var18 = var7.getHelp((-1), "hi!");
    java.lang.String var19 = var3.getHelp(100, "hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var24 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var25 = var21.setHelp("hi!");
    var21.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var28 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var30 = var29.getHelp();
    java.lang.String var31 = var29.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    boolean var33 = var32.messagePrinted();
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var45 = var34.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var46 = new com.martiansoftware.jsap.SimpleJSAP(var45);
    com.martiansoftware.jsap.UnflaggedOption var47 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var28, var33, var45);
    com.martiansoftware.jsap.ant.SwitchConfiguration var48 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var49 = var48.getLongflag();
    var48.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var61 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var69 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var61, "hi!", true, '4', "", var68);
    com.martiansoftware.jsap.Switch var70 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var71 = new com.martiansoftware.jsap.UnflaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var72 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var73 = var72.getLongflag();
    var72.setShortflag('#');
    java.lang.String var76 = var72.getLongflag();
    var72.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var80 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var72.setShortflag('4');
    com.martiansoftware.jsap.UnflaggedOption var82 = var71.setListSeparator('4');
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var71);
    var3.finalize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var19.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "hi!"+ "'", var24.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);

  }

  public void test115() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    com.martiansoftware.jsap.UnflaggedOption var21 = new com.martiansoftware.jsap.UnflaggedOption("");
    java.lang.String var22 = var21.getSyntax();
    boolean var23 = var21.isList();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "[<>]"+ "'", var22.equals("[<>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);

  }

  public void test116() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.tearDown();
    var0.tearDown();
    var0.setUp();
    var0.testDefaults2();
    var0.setUp();

  }

  public void test117() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    char var5 = var0.getShortflag();
    com.martiansoftware.jsap.ant.SwitchConfiguration var6 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var7 = var6.getLongflag();
    var6.setShortflag('#');
    java.lang.String var10 = var6.getLongflag();
    var6.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var14 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var6.setShortflag('4');
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var25 = var24.getShortFlag();
    var6.setShortflag(var25);
    java.lang.String var27 = var6.getLongflag();
    char var28 = var6.getShortflag();
    char var29 = var6.getShortflag();
    var0.setShortflag(var29);
    java.lang.String var31 = var0.getLongflag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == null);

  }

  public void test118() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    var7.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var14 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var31 = var20.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    com.martiansoftware.jsap.UnflaggedOption var33 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var14, var19, var31);
    boolean var34 = var33.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var39 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var40 = var36.setHelp("hi!");
    var36.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var43 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    java.lang.String var46 = var44.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var47 = new com.martiansoftware.jsap.SimpleJSAP(var46);
    boolean var48 = var47.messagePrinted();
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var60 = var49.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    com.martiansoftware.jsap.UnflaggedOption var62 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var43, var48, var60);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var72 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var78 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var79 = var78.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var80 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var72, "hi!", true, '4', "", var79);
    com.martiansoftware.jsap.UnflaggedOption var81 = var62.setRequired(true);
    com.martiansoftware.jsap.UnflaggedOption var82 = var33.setRequired(true);
    var3.registerParameter((com.martiansoftware.jsap.Parameter)var33);
    com.martiansoftware.jsap.TestOption var84 = new com.martiansoftware.jsap.TestOption();
    int var85 = var84.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var86 = var3.setScreenWidth(var85);
    java.lang.String var87 = var86.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "hi!"+ "'", var39.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + "<>"+ "'", var87.equals("<>"));

  }

  public void test119() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var2 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var3 = var2.getLongflag();
    var2.setShortflag('#');
    java.lang.String var6 = var2.getLongflag();
    char var7 = var2.getShortflag();
    var0.setShortflag(var7);
    java.lang.String[] var9 = var0.getDefaults();
    boolean var10 = var0.getIslist();
    java.lang.String var11 = var0.getLongflag();
    com.martiansoftware.jsap.Parameter var12 = var0.getParameter();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);

  }

  public void test120() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var2 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var3 = var2.getLongflag();
    var2.setShortflag('#');
    java.lang.String var6 = var2.getLongflag();
    char var7 = var2.getShortflag();
    var0.setShortflag(var7);
    java.lang.String[] var9 = var0.getDefaults();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var14 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var30 = var28.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var40 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var48 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var40, "hi!", true, '4', "", var47);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var58 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var66 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var58, "hi!", true, '4', "", var65);
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption(var12, (com.martiansoftware.jsap.StringParser)var14, var26, false, '4', "hi!");
    var0.setListseparator('4');
    boolean var69 = var0.hasProperties();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var69);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == false);

  }

  public void test121() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getShortflag();
    char var4 = var0.getShortflag();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var7 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var8 = var7.getLongflag();
    var7.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var11 = var6.setListSeparator('#');
    boolean var12 = var11.isList();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var17 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var18 = var14.setHelp("hi!");
    var14.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var21 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var23 = var22.getHelp();
    java.lang.String var24 = var22.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var25 = new com.martiansoftware.jsap.SimpleJSAP(var24);
    boolean var26 = var25.messagePrinted();
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var38 = var27.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    com.martiansoftware.jsap.UnflaggedOption var40 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var21, var26, var38);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.UnflaggedOption var59 = var40.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var63 = var61.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var64 = var40.setList(false);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var74 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var80 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var81 = var80.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var74, "hi!", true, '4', "", var81);
    com.martiansoftware.jsap.UnflaggedOption var83 = var64.setStringParser((com.martiansoftware.jsap.StringParser)var74);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var84 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var85 = var84.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var86 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var87 = var86.getLongflag();
    var86.setShortflag('#');
    java.lang.String var90 = var86.getLongflag();
    char var91 = var86.getShortflag();
    var84.setShortflag(var91);
    com.martiansoftware.jsap.UnflaggedOption var93 = var64.setListSeparator(var91);
    com.martiansoftware.jsap.FlaggedOption var94 = var11.setShortFlag(var91);
    var0.setShortflag(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "hi!"+ "'", var17.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);

  }

  public void test122() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.toString();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var5 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var6 = var5.getParameter();
    boolean var7 = var5.declaredListSeparator();
    char var8 = var5.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var11 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var10);
    java.lang.String var12 = var10.toString();
    var5.setLongflag(var12);
    java.lang.String[] var14 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize(var12);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.util.Iterator var17 = var15.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var18 = var15.getIDMap();
    java.lang.String var19 = var15.getHelp();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    java.util.Iterator var23 = var20.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    boolean var28 = var27.messagePrinted();
    boolean var29 = var27.messagePrinted();
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var42 = var31.getHelp((-1), "hi!");
    java.lang.String var43 = var27.getHelp(100, "hi!");
    java.lang.String var44 = var20.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var54 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, "hi!", true, '4', "", var61);
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var64 = var15.getHelp(100, "");
    java.lang.String var65 = com.martiansoftware.util.StringUtils.padRightToWidth(var12, 100);
    java.lang.String[] var66 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var67 = var0.parse(var66);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var76 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var77 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var80 = new com.martiansoftware.jsap.TestOption();
    int var81 = var80.countTestCases();
    int var82 = var80.countTestCases();
    java.lang.String var83 = com.martiansoftware.util.StringUtils.padRight("hi!", var82);
    com.martiansoftware.jsap.TestUsageString var84 = new com.martiansoftware.jsap.TestUsageString(var83);
    java.lang.Object[] var85 = var67.getObjectArray(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var12.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var43.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'.                                    "+ "'", var65.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'.                                    "));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + "hi! "+ "'", var83.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);

  }

  public void test123() throws Throwable {

    java.lang.String var2 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var7 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var8 = var4.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var9 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var10 = var9.getID();
    java.lang.String var11 = var9.getID();
    com.martiansoftware.jsap.JSAPException var12 = new com.martiansoftware.jsap.JSAPException(var2, (java.lang.Throwable)var9);
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var22 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var30 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var22, "hi!", true, '4', "", var29);
    com.martiansoftware.jsap.UnspecifiedParameterException var31 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    java.lang.String var32 = var31.getID();
    com.martiansoftware.jsap.JSAPException var33 = new com.martiansoftware.jsap.JSAPException(var32);
    com.martiansoftware.jsap.JSAPException var34 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var33);
    com.martiansoftware.jsap.JSAPException var35 = new com.martiansoftware.jsap.JSAPException(var2, (java.lang.Throwable)var33);
    com.martiansoftware.jsap.JSAPException var36 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "hi!"+ "'", var2.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));

  }

  public void test124() throws Throwable {

    com.martiansoftware.jsap.Defaults var0 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var1 = var0.idIterator();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var11 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.Character var33 = var32.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var36 = var32.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var37 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var38 = new java.lang.String[] { "hi!"};
    var0.addDefault("hi!", var38);
    java.util.Iterator var40 = var0.idIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + '4'+ "'", var33.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);

  }

  public void test125() throws Throwable {

    com.martiansoftware.jsap.Defaults var0 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var1 = var0.idIterator();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var13 = var2.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var17 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var21 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var22 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var23 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var30 = var29.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var31 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var23, "hi!", true, '4', "", var30);
    java.lang.String[] var32 = new java.lang.String[] { var30};
    var0.addDefault(var13, var32);
    java.util.Iterator var34 = var0.idIterator();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var44 = var43.getShortFlag();
    char var45 = var43.getShortFlag();
    java.lang.Character var46 = var43.getShortFlagCharacter();
    java.lang.String var47 = var43.getSyntax();
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestOption var50 = new com.martiansoftware.jsap.TestOption();
    int var51 = var50.countTestCases();
    int var52 = var50.countTestCases();
    int var53 = var50.countTestCases();
    junit.framework.Assert.assertNotNull("hi!", (java.lang.Object)var53);
    java.lang.String[] var55 = new java.lang.String[] { "hi!"};
    var0.setDefault(var47, var55);
    java.util.Iterator var57 = var0.idIterator();
    java.util.Iterator var58 = var0.idIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + '4'+ "'", var46.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "[-4|--hi!]"+ "'", var47.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);

  }

  public void test126() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    boolean var47 = var27.isList();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var48 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var49 = var48.getParameter();
    boolean var50 = var48.declaredListSeparator();
    char var51 = var48.getShortflag();
    boolean var52 = var48.getIslist();
    boolean var53 = var48.hasProperties();
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    java.lang.String var56 = var54.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var57 = new com.martiansoftware.jsap.SimpleJSAP(var56);
    boolean var58 = var57.messagePrinted();
    java.lang.String var59 = var57.getHelp();
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    java.lang.String var62 = var60.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var63 = new com.martiansoftware.jsap.SimpleJSAP(var62);
    boolean var64 = var63.messagePrinted();
    java.lang.String var65 = var63.getHelp();
    com.martiansoftware.jsap.ParseException var66 = new com.martiansoftware.jsap.ParseException(var65);
    java.lang.String[] var67 = new java.lang.String[] { var65};
    com.martiansoftware.jsap.JSAPResult var68 = var57.parse(var67);
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    java.util.Iterator var71 = var69.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var72 = var69.getIDMap();
    java.lang.String var73 = var69.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var77 = var68.getByte(var73, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var78 = new com.martiansoftware.jsap.QualifiedSwitch(var73);
    boolean var79 = var78.required();
    char var80 = var78.getShortFlag();
    var48.setListseparator(var80);
    com.martiansoftware.jsap.UnflaggedOption var82 = var27.setListSeparator(var80);
    java.lang.String var83 = var82.getUsageName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var59.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var65.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + ""+ "'", var83.equals(""));

  }

  public void test127() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test3();
    var0.test7();
    java.lang.String var3 = var0.toString();
    var0.test6();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "null(com.martiansoftware.jsap.TestCommandLineTokenizer)"+ "'", var3.equals("null(com.martiansoftware.jsap.TestCommandLineTokenizer)"));

  }

  public void test128() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser("hi!");
    var51.testFloatRGB();
    var51.testHexRGB();
    var51.testIntegerRGB();
    var51.testHexRGB();
    junit.framework.TestResult var56 = var51.run();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);

  }

  public void test129() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    java.lang.String var28 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var29 = var14.getURLArray(var28);
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.lang.String var32 = var30.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var33 = new com.martiansoftware.jsap.SimpleJSAP(var32);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var34 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var46 = var35.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var72 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var76 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var77 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var78 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var84 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var85 = var84.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var86 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var78, "hi!", true, '4', "", var85);
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption(var32, (com.martiansoftware.jsap.StringParser)var34, var46, false, '4', "hi!");
    java.math.BigDecimal[] var88 = var14.getBigDecimalArray(var32);
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var89 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + ""+ "'", var85.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);

  }

  public void test130() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    var35.setUsage(var38);
    java.lang.String var41 = var35.toString();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var45.unregisterParameter((com.martiansoftware.jsap.Parameter)var47);
    var35.unregisterParameter((com.martiansoftware.jsap.Parameter)var47);
    java.lang.String var50 = var47.getUsageName();
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "hi!"+ "'", var50.equals("hi!"));

  }

  public void test131() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var7 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var8 = var4.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var9 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var10 = var9.getID();
    java.lang.String var11 = var9.getID();
    var0.setLongflag(var11);
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var15 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var16 = var15.getLongflag();
    var15.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var19 = var14.setListSeparator('#');
    boolean var20 = var19.isList();
    var0.setAllowmultipledeclarations(var20);
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var23 = var22.getHelp();
    java.lang.String var24 = var22.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var25 = new com.martiansoftware.jsap.SimpleJSAP(var24);
    boolean var26 = var25.messagePrinted();
    java.lang.String var27 = var25.getHelp();
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    java.lang.String var30 = var28.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    boolean var32 = var31.messagePrinted();
    java.lang.String var33 = var31.getHelp();
    com.martiansoftware.jsap.ParseException var34 = new com.martiansoftware.jsap.ParseException(var33);
    java.lang.String[] var35 = new java.lang.String[] { var33};
    com.martiansoftware.jsap.JSAPResult var36 = var25.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var47 = var36.getClass("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var48 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    char var49 = var48.getShortFlag();
    var0.setShortflag(var49);
    java.lang.String[] var51 = var0.getDefaults();
    char var52 = var0.getShortflag();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var27.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var33.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == '\u0000');

  }

  public void test132() throws Throwable {

    com.martiansoftware.jsap.ant.ParserProperty var0 = new com.martiansoftware.jsap.ant.ParserProperty();
    java.lang.String var1 = var0.getValue();
    java.lang.String var2 = var0.getName();
    java.lang.String var3 = var0.getValue();
    java.lang.String var4 = var0.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);

  }

  public void test133() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigIntegerStringParser var0 = new com.martiansoftware.jsap.stringparsers.BigIntegerStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var10 = var9.getShortFlag();
    char var11 = var9.getShortFlag();
    java.lang.Character var12 = var9.getShortFlagCharacter();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var14 = var13.getHelp();
    java.lang.String var15 = var13.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var16 = new com.martiansoftware.jsap.SimpleJSAP(var15);
    com.martiansoftware.jsap.IDMap var17 = var16.getIDMap();
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var29 = var18.getHelp((-1), "hi!");
    java.lang.String var30 = var17.getIDByLongFlag(var29);
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var40 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var48 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var40, "hi!", true, '4', "", var47);
    java.util.List var50 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var51 = var17.getIDByLongFlag("");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    java.lang.String var54 = var52.getUsage();
    com.martiansoftware.jsap.IDMap var55 = var52.getIDMap();
    java.lang.String var56 = var52.toString();
    boolean var57 = var17.idExists(var56);
    java.lang.String[] var58 = new java.lang.String[] { var56};
    com.martiansoftware.jsap.Switch var59 = var9.setDefault(var58);
    java.lang.String var60 = var9.getSyntax();
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption(var60);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var62 = var0.parse(var60);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + '4'+ "'", var12.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "[-4|--hi!]"+ "'", var60.equals("[-4|--hi!]"));

  }

  public void test134() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String[] var9 = var8.getDefault();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    java.lang.String var15 = var13.getHelp();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var25 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var26 = var25.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var27 = var13.setScreenWidth(var26);
    java.lang.String var28 = var13.getUsage();
    com.martiansoftware.jsap.Switch var29 = var8.setDefault(var28);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var48 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    java.lang.String var51 = var49.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var56 = var54.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var58 = var54.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var60 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var64 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var48, var51, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var65 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    java.lang.String var68 = var66.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var69 = new com.martiansoftware.jsap.SimpleJSAP(var68);
    var65.setUsage(var68);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull(var28, (java.lang.Object)var65);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var15.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "[--help]"+ "'", var28.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));

  }

  public void test135() throws Throwable {

    com.martiansoftware.jsap.UnflaggedOption var1 = new com.martiansoftware.jsap.UnflaggedOption("hi!");

  }

  public void test136() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.getRequired();
    boolean var2 = var0.hasProperties();
    boolean var3 = var0.hasProperties();
    boolean var4 = var0.hasProperties();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var8 = new com.martiansoftware.jsap.SimpleJSAP(var7);
    boolean var9 = var8.messagePrinted();
    java.lang.String var10 = var8.getHelp();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    java.lang.String var16 = var14.getHelp();
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException(var16);
    java.lang.String[] var18 = new java.lang.String[] { var16};
    com.martiansoftware.jsap.JSAPResult var19 = var8.parse(var18);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var29 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var30 = var19.getClass("hi!");
    java.lang.String var33 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var34 = var19.getURLArray(var33);
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.util.Iterator var37 = var35.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var38 = var35.getIDMap();
    java.lang.String var39 = var35.getHelp();
    java.lang.String var40 = var35.toString();
    java.lang.Object[] var41 = var19.getObjectArray(var40);
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var59 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var51, "hi!", true, '4', "", var58);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var60 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var62 = var61.getHelp();
    java.lang.String var63 = var61.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var64 = new com.martiansoftware.jsap.SimpleJSAP(var63);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var68 = var66.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var70 = var66.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var72 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var76 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, var63, false, '4', "hi!");
    java.lang.String var79 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var80 = com.martiansoftware.util.StringUtils.wrapToList(var63, 1);
    java.lang.String var81 = var19.getString(var63);
    com.martiansoftware.jsap.JSAP var82 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var87 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var90 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var91 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var92 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var93 = var82.getHelp((-1), "hi!");
    long[] var94 = var19.getLongArray("hi!");
    java.lang.String var95 = com.martiansoftware.util.StringUtils.noNull("hi!");
    var0.setId("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var10.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var16.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "hi!"+ "'", var33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "hi!"+ "'", var79.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ""+ "'", var93.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "hi!"+ "'", var95.equals("hi!"));

  }

  public void test137() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    var0.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var0.setShortflag('4');
    java.lang.String var10 = var0.getId();
    com.martiansoftware.jsap.Parameter var11 = var0.getParameter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var21 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var28 = var27.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var29 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var21, "hi!", true, '4', "", var28);
    var0.setDefault("hi!");
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    java.util.Iterator var33 = var31.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var34 = var31.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var44 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var52 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var44, "hi!", true, '4', "", var51);
    java.lang.String var53 = var52.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var53);
    boolean var55 = var34.idExists(var53);
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var56 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser(var53);
    com.martiansoftware.jsap.SimpleJSAP var57 = new com.martiansoftware.jsap.SimpleJSAP("hi!", var53);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var58 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var53);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var53.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);

  }

  public void test138() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var51 = var49.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var53 = var49.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var62 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var63 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var53.addDefault("hi!");
    java.lang.String var70 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var70, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(1.0f, 1.0f, 1.0f);
    float var83 = var14.getFloat("hi!", 1.0f);
    java.util.Iterator var84 = var14.getErrorMessageIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "hi!"+ "'", var70.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1.0f);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);

  }

  public void test139() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test1();
    var0.test7();
    java.lang.String var6 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null(com.martiansoftware.jsap.TestCommandLineTokenizer)"+ "'", var6.equals("null(com.martiansoftware.jsap.TestCommandLineTokenizer)"));

  }

  public void test140() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var34 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var42 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var34, "hi!", true, '4', "", var41);
    com.martiansoftware.jsap.Parameter var43 = var8.setHelp("hi!");
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var45 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var46 = var45.idIterator();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var58 = var47.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var62 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var66 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var67 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var68 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var74 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var75 = var74.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var76 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var68, "hi!", true, '4', "", var75);
    java.lang.String[] var77 = new java.lang.String[] { var75};
    var45.addDefault(var58, var77);
    java.lang.String[] var79 = new java.lang.String[] { var58};
    com.martiansoftware.jsap.JSAPResult var80 = var44.parse(var79);
    com.martiansoftware.jsap.JSAP var81 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var82 = var81.getHelp();
    java.lang.String var83 = var81.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var84 = new com.martiansoftware.jsap.SimpleJSAP(var83);
    boolean var85 = var84.messagePrinted();
    java.lang.String var86 = var84.getHelp();
    com.martiansoftware.jsap.JSAPResult var87 = var44.parse(var86);
    com.martiansoftware.jsap.Switch var88 = var8.setDefault(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + ""+ "'", var82.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + ""+ "'", var83.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var86.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);

  }

  public void test141() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    java.lang.String var35 = var33.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var36 = new com.martiansoftware.jsap.SimpleJSAP(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var36.unregisterParameter((com.martiansoftware.jsap.Parameter)var38);
    com.martiansoftware.jsap.TestOption var40 = new com.martiansoftware.jsap.TestOption();
    int var41 = var40.countTestCases();
    int var42 = var40.countTestCases();
    int var43 = var40.countTestCases();
    java.lang.String var44 = var36.getHelp(var43);
    char[] var45 = var14.getCharArray(var44);
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    boolean var50 = var49.messagePrinted();
    java.lang.String var51 = var49.getHelp();
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    java.lang.String var54 = var52.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var55 = new com.martiansoftware.jsap.SimpleJSAP(var54);
    boolean var56 = var55.messagePrinted();
    java.lang.String var57 = var55.getHelp();
    com.martiansoftware.jsap.ParseException var58 = new com.martiansoftware.jsap.ParseException(var57);
    java.lang.String[] var59 = new java.lang.String[] { var57};
    com.martiansoftware.jsap.JSAPResult var60 = var49.parse(var59);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var70 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var71 = var60.getClass("hi!");
    int[] var72 = var14.getIntArray("hi!");
    com.martiansoftware.jsap.JSAP var73 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var74 = var73.getHelp();
    java.util.Iterator var75 = var73.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var76 = var73.getIDMap();
    java.lang.String var77 = var73.getHelp();
    int[] var78 = var14.getIntArray(var77);
    java.util.Iterator var79 = var14.getBadParameterIDIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var44.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var51.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var57.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);

  }

  public void test142() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    java.lang.String var10 = var9.getName();
    var9.testID();
    com.martiansoftware.jsap.TestParser var12 = new com.martiansoftware.jsap.TestParser();
    var12.testParser();
    var12.testParser();
    var12.testMultipleDeclarations();
    junit.framework.TestResult var16 = var12.run();
    var9.run(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);

  }

  public void test143() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var34 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var42 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var34, "hi!", true, '4', "", var41);
    com.martiansoftware.jsap.Parameter var43 = var8.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.FileStringParser var44 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    boolean var45 = var44.mustBeFile();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue("hi!", var45);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);

  }

  public void test144() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var6 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var7 = var1.setStringParser((com.martiansoftware.jsap.StringParser)var6);
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var17 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var20 = var7.setHelp("hi!");
    java.lang.String var21 = var20.getUsageName();
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var22 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser(var21);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var23 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var21);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "hi!"+ "'", var21.equals("hi!"));

  }

  public void test145() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    java.lang.String var25 = var8.getHelp();
    com.martiansoftware.jsap.RequiredParameterMissingException var26 = new com.martiansoftware.jsap.RequiredParameterMissingException(var25);
    java.lang.String var27 = var26.getID();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "hi!"+ "'", var25.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi!"+ "'", var27.equals("hi!"));

  }

  public void test146() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var21 = var10.getHelp((-1), "hi!");
    java.lang.String[] var22 = new java.lang.String[] { var21};
    com.martiansoftware.jsap.Switch var23 = var8.setDefault(var22);
    char var24 = var23.getShortFlag();
    java.lang.String var25 = var23.getSyntax();
    java.lang.Character var26 = var23.getShortFlagCharacter();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "[-4|--hi!]"+ "'", var25.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + '4'+ "'", var26.equals('4'));

  }

  public void test147() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getHelp();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    java.util.Iterator var8 = var5.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    boolean var14 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    java.lang.String var28 = var12.getHelp(100, "hi!");
    java.lang.String var29 = var5.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var49 = var0.getHelp(100, "");
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    java.lang.String var52 = var50.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var52);
    boolean var54 = var53.messagePrinted();
    java.lang.String var55 = var53.getHelp();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    boolean var60 = var59.messagePrinted();
    java.lang.String var61 = var59.getHelp();
    com.martiansoftware.jsap.ParseException var62 = new com.martiansoftware.jsap.ParseException(var61);
    java.lang.String[] var63 = new java.lang.String[] { var61};
    com.martiansoftware.jsap.JSAPResult var64 = var53.parse(var63);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var74 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var75 = var64.getClass("hi!");
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var79 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var83 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var84 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var85 = var84.getShortFlag();
    char var86 = var84.getShortFlag();
    com.martiansoftware.jsap.JSAP var87 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var88 = var87.getHelp();
    java.lang.String var89 = var87.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var90 = new com.martiansoftware.jsap.SimpleJSAP(var89);
    com.martiansoftware.jsap.Switch var91 = var84.setDefault(var89);
    com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource var92 = new com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource();
    int var93 = var92.countTestCases();
    int var94 = var64.getInt(var89, var93);
    java.util.List var95 = com.martiansoftware.util.StringUtils.wrapToList("", var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var28.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var55.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var61.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + ""+ "'", var88.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + ""+ "'", var89.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);

  }

  public void test148() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.tearDown();
    var0.setUp();
    var0.tearDown();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);

  }

  public void test149() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var6 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);

  }

  public void test150() throws Throwable {

    com.martiansoftware.jsap.UnknownFlagException var1 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var2 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var1);
    java.lang.String var3 = var1.toString();
    com.martiansoftware.jsap.TestSwitch var4 = new com.martiansoftware.jsap.TestSwitch(var3);
    com.martiansoftware.jsap.ant.ParserProperty var5 = new com.martiansoftware.jsap.ant.ParserProperty();
    java.lang.String var6 = var5.getValue();
    java.lang.String var7 = var5.getName();
    java.lang.String var8 = var5.getValue();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var9 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var10 = var9.getParameter();
    java.lang.String var11 = var9.getStringparser();
    char var12 = var9.getListseparator();
    boolean var13 = var9.hasProperties();
    com.martiansoftware.jsap.ant.ParserProperty[] var14 = var9.getParserProperties();
    com.martiansoftware.jsap.stringparsers.FileStringParser var15 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var15.tearDown();
    var15.setUp();
    boolean var18 = var15.mustExist();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var19 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var20 = var19.hasProperties();
    java.lang.String var21 = var19.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var22 = new com.martiansoftware.jsap.ant.ParserProperty();
    var19.addConfiguredProperty(var22);
    boolean var24 = var19.getGreedy();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var34 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var42 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var34, "hi!", true, '4', "", var41);
    java.lang.Character var43 = var42.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var46 = var42.setLongFlag("hi!");
    boolean var47 = var42.isList();
    var19.setGreedy(var47);
    com.martiansoftware.jsap.stringparsers.FileStringParser var49 = var15.setMustBeDirectory(var47);
    var9.setRequired(var47);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals(var3, (java.lang.Object)var5, (java.lang.Object)var9);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var3.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + '4'+ "'", var43.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);

  }

  public void test151() throws Throwable {

    com.martiansoftware.jsap.TestParser var0 = new com.martiansoftware.jsap.TestParser();
    var0.testParser();
    var0.testParser();
    var0.testMultipleDeclarations();
    junit.framework.TestResult var4 = var0.run();
    var0.testParser();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);

  }

  public void test152() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.Defaults var3 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var4 = var3.idIterator();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var14 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.lang.Character var36 = var35.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var39 = var35.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var40 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var41 = new java.lang.String[] { "hi!"};
    var3.addDefault("hi!", var41);
    java.lang.String var43 = com.martiansoftware.util.StringUtils.noNull("hi!");
    var0.setId("hi!");
    char var45 = var0.getShortflag();
    char var46 = var0.getListseparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + '4'+ "'", var36.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == ':');

  }

  public void test153() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var16 = var15.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var17 = var3.setScreenWidth(var16);
    boolean var18 = var17.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var22 = var20.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var24 = var20.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var34 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var24.addDefault("hi!");
    com.martiansoftware.jsap.JSAPResult var38 = var17.parse("hi!");
    java.lang.String var39 = var17.toString();
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var43.unregisterParameter((com.martiansoftware.jsap.Parameter)var45);
    java.lang.String var47 = var43.getUsage();
    java.lang.String[] var48 = new java.lang.String[] { var47};
    com.martiansoftware.jsap.JSAPResult var49 = var17.parse(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "[--help]"+ "'", var39.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "[--help]"+ "'", var47.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);

  }

  public void test154() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    java.util.Iterator var37 = var36.getBadParameterIDIterator();
    boolean var38 = var36.success();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);

  }

  public void test155() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.TestOption var33 = new com.martiansoftware.jsap.TestOption();
    int var34 = var33.countTestCases();
    java.lang.String var35 = var33.toString();
    java.lang.Exception var36 = var14.getException(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var40.unregisterParameter((com.martiansoftware.jsap.Parameter)var42);
    com.martiansoftware.jsap.TestOption var44 = new com.martiansoftware.jsap.TestOption();
    int var45 = var44.countTestCases();
    int var46 = var44.countTestCases();
    int var47 = var44.countTestCases();
    java.lang.String var48 = var40.getHelp(var47);
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    java.lang.String var51 = var49.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    boolean var53 = var52.messagePrinted();
    java.lang.String var54 = var52.getHelp();
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    java.lang.String var57 = var55.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var58 = new com.martiansoftware.jsap.SimpleJSAP(var57);
    boolean var59 = var58.messagePrinted();
    java.lang.String var60 = var58.getHelp();
    com.martiansoftware.jsap.ParseException var61 = new com.martiansoftware.jsap.ParseException(var60);
    java.lang.String[] var62 = new java.lang.String[] { var60};
    com.martiansoftware.jsap.JSAPResult var63 = var52.parse(var62);
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var71 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var72 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var73 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var74 = var63.getClass("hi!");
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var80 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var84 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var85 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var86 = var75.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var87 = new com.martiansoftware.jsap.SimpleJSAP(var86);
    com.martiansoftware.jsap.JSAPException var88 = new com.martiansoftware.jsap.JSAPException(var86);
    java.util.Date var89 = var63.getDate(var86);
    com.martiansoftware.jsap.ParseException var90 = new com.martiansoftware.jsap.ParseException(var86);
    com.martiansoftware.jsap.TestSwitch var91 = new com.martiansoftware.jsap.TestSwitch(var86);
    com.martiansoftware.jsap.Flagged var92 = var40.getByLongFlag(var86);
    java.lang.String var93 = var14.getString(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "null(com.martiansoftware.jsap.TestOption)"+ "'", var35.equals("null(com.martiansoftware.jsap.TestOption)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var48.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var54.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var60.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + ""+ "'", var86.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == null);

  }

  public void test156() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    com.martiansoftware.jsap.ant.DefaultValue var2 = new com.martiansoftware.jsap.ant.DefaultValue();
    var0.addConfiguredDefault(var2);
    java.lang.String var4 = var0.getLongflag();
    com.martiansoftware.jsap.Parameter var5 = var0.getParameter();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var7 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var8 = var7.idIterator();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var14 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var18 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var19 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var20 = var9.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    java.lang.String[] var39 = new java.lang.String[] { var37};
    var7.addDefault(var20, var39);
    java.lang.String[] var41 = new java.lang.String[] { var20};
    com.martiansoftware.jsap.JSAPResult var42 = var6.parse(var41);
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    java.lang.String var45 = var43.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var46 = new com.martiansoftware.jsap.SimpleJSAP(var45);
    boolean var47 = var46.messagePrinted();
    java.lang.String var48 = var46.getHelp();
    com.martiansoftware.jsap.JSAPResult var49 = var6.parse(var48);
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var59 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var62 = new com.martiansoftware.jsap.TestOption();
    int var63 = var62.countTestCases();
    int var64 = var62.countTestCases();
    java.lang.String var65 = com.martiansoftware.util.StringUtils.padRight("hi!", var64);
    com.martiansoftware.jsap.JSAPResult var66 = var6.parse(var65);
    com.martiansoftware.jsap.ParseException var67 = new com.martiansoftware.jsap.ParseException(var65);
    var0.setLongflag(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var48.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "hi! "+ "'", var65.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);

  }

  public void test157() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var21 = var10.getHelp((-1), "hi!");
    java.lang.String[] var22 = new java.lang.String[] { var21};
    com.martiansoftware.jsap.Switch var23 = var8.setDefault(var22);
    char var24 = var23.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var34 = var33.getShortFlag();
    char var35 = var33.getShortFlag();
    java.lang.Character var36 = var33.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var49 = var33.setDefault("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var50 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var51 = var50.getParameter();
    boolean var52 = var50.declaredListSeparator();
    char var53 = var50.getShortflag();
    char var54 = var50.getShortflag();
    com.martiansoftware.jsap.Switch var55 = var33.setShortFlag(var54);
    junit.framework.Assert.assertNotNull((java.lang.Object)var54);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var24, var54);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + '4'+ "'", var36.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);

  }

  public void test158() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    com.martiansoftware.jsap.Parameter var2 = var0.getParameter();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var3 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var4 = var3.hasProperties();
    java.lang.String var5 = var3.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var6 = new com.martiansoftware.jsap.ant.ParserProperty();
    var3.addConfiguredProperty(var6);
    boolean var8 = var3.getGreedy();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var18 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var26 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, "hi!", true, '4', "", var25);
    java.lang.Character var27 = var26.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var30 = var26.setLongFlag("hi!");
    boolean var31 = var26.isList();
    var3.setGreedy(var31);
    var0.setGreedy(var31);
    com.martiansoftware.jsap.Parameter var34 = var0.getParameter();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + '4'+ "'", var27.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);

  }

  public void test159() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigDecimalStringParser var0 = new com.martiansoftware.jsap.stringparsers.BigDecimalStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    char var3 = var2.getShortFlag();
    boolean var4 = var2.allowMultipleDeclarations();
    java.lang.String var5 = var2.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var6 = var0.parse(var5);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "[<hi!>]"+ "'", var5.equals("[<hi!>]"));

  }

  public void test160() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    char var11 = var8.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var16 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var17 = var13.setHelp("hi!");
    var13.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var20 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    boolean var25 = var24.messagePrinted();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.UnflaggedOption var39 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var20, var25, var37);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    com.martiansoftware.jsap.UnflaggedOption var58 = var39.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var59 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var60 = var58.setStringParser((com.martiansoftware.jsap.StringParser)var59);
    char var61 = var58.getListSeparator();
    com.martiansoftware.jsap.Switch var62 = var8.setShortFlag(var61);
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!"+ "'", var16.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);

  }

  public void test161() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.String var18 = var17.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var18);
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption(var18);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var25 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var26 = var22.setHelp("hi!");
    var22.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var29 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.lang.String var32 = var30.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var33 = new com.martiansoftware.jsap.SimpleJSAP(var32);
    boolean var34 = var33.messagePrinted();
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var46 = var35.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var47 = new com.martiansoftware.jsap.SimpleJSAP(var46);
    com.martiansoftware.jsap.UnflaggedOption var48 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var29, var34, var46);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var58 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var66 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var58, "hi!", true, '4', "", var65);
    com.martiansoftware.jsap.UnflaggedOption var67 = var48.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var68 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var69 = var67.setStringParser((com.martiansoftware.jsap.StringParser)var68);
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var73 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var77 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var78 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var79 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var85 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var86 = var85.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var87 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var79, "hi!", true, '4', "", var86);
    java.lang.String var88 = var87.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var88);
    com.martiansoftware.jsap.UnflaggedOption var90 = var67.setUsageName(var88);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var91 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var92 = var91.getRequired();
    com.martiansoftware.jsap.UnflaggedOption var93 = var90.setList(var92);
    boolean var94 = var90.isGreedy();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var18, var94);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var18.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "hi!"+ "'", var25.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + ""+ "'", var86.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var88.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == false);

  }

  public void test162() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var5.addDefault("hi!");
    java.lang.String var19 = var5.getSyntax();
    java.lang.String var20 = var5.getSyntax();
    com.martiansoftware.jsap.stringparsers.DateStringParser var21 = new com.martiansoftware.jsap.stringparsers.DateStringParser();
    com.martiansoftware.jsap.Defaults var22 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var23 = var22.idIterator();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var33 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var36 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    java.lang.Character var55 = var54.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var58 = var54.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var59 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var60 = new java.lang.String[] { "hi!"};
    var22.addDefault("hi!", var60);
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var65 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var69 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var70 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var71 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var77 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var78 = var77.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var79 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var71, "hi!", true, '4', "", var78);
    java.lang.String[] var80 = var22.getDefault("hi!");
    java.lang.String var81 = var21.getProperty("hi!");
    com.martiansoftware.jsap.UnspecifiedParameterException var82 = new com.martiansoftware.jsap.UnspecifiedParameterException("hi!");
    com.martiansoftware.jsap.FlaggedOption var83 = var5.setDefault("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "[<hi!>]"+ "'", var19.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "[<hi!>]"+ "'", var20.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + '4'+ "'", var55.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);

  }

  public void test163() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test3();
    var0.test7();
    var0.test7();
    var0.test3();

  }

  public void test164() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ByteStringParser var0 = new com.martiansoftware.jsap.stringparsers.ByteStringParser();
    var0.tearDown();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var5 = var3.setRequired(false);
    java.lang.String var6 = var3.getID();
    boolean var7 = var3.allowMultipleDeclarations();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var10 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var11 = var10.getLongflag();
    var10.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var14 = var9.setListSeparator('#');
    char var15 = var14.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var16 = var3.setShortFlag(var15);
    java.lang.String var17 = var16.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var18 = var0.parse(var17);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "hi!"+ "'", var6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "[<hi!>]"+ "'", var17.equals("[<hi!>]"));

  }

  public void test165() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.IDMap var5 = var3.getIDMap();
    var3.finalize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);

  }

  public void test166() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var16 = var15.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var17 = var3.setScreenWidth(var16);
    java.lang.String var18 = var17.getUsage();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var23 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var24 = var20.setHelp("hi!");
    var20.addDefault("");
    junit.framework.Assert.assertNotNull((java.lang.Object)var20);
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    java.lang.String var30 = var28.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    com.martiansoftware.jsap.IDMap var32 = var31.getIDMap();
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var44 = var33.getHelp((-1), "hi!");
    java.lang.String var45 = var32.getIDByLongFlag(var44);
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var55 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var62 = var61.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var63 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var55, "hi!", true, '4', "", var62);
    java.util.List var65 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var66 = var32.getIDByLongFlag("");
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var70 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var74 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var75 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var76 = var75.getShortFlag();
    char var77 = var75.getShortFlag();
    java.lang.String var78 = var32.getIDByShortFlag(var77);
    com.martiansoftware.jsap.FlaggedOption var79 = var20.setListSeparator(var77);
    com.martiansoftware.jsap.Flagged var80 = var17.getByShortFlag((java.lang.Character)var77);
    int var81 = var17.getScreenWidth();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "[--help]"+ "'", var18.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!"+ "'", var23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);

  }

  public void test167() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.ParseException var6 = new com.martiansoftware.jsap.ParseException(var5);
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var7 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser(var5);
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var8 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));

  }

  public void test168() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    boolean var3 = var0.mustExist();
    var0.tearDown();
    boolean var5 = var0.mustBeFile();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var6 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var7 = var6.getParameter();
    boolean var8 = var6.declaredListSeparator();
    boolean var9 = var6.getIslist();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var14 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var15 = var11.setHelp("hi!");
    var11.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var18 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    boolean var23 = var22.messagePrinted();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var29 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var34 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var35 = var24.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var36 = new com.martiansoftware.jsap.SimpleJSAP(var35);
    com.martiansoftware.jsap.UnflaggedOption var37 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var18, var23, var35);
    com.martiansoftware.jsap.ant.SwitchConfiguration var38 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var39 = var38.getLongflag();
    var38.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var59 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var51, "hi!", true, '4', "", var58);
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var6.setListseparator('#');
    com.martiansoftware.jsap.ant.DefaultValue var62 = new com.martiansoftware.jsap.ant.DefaultValue();
    java.lang.String var63 = var62.getValue();
    var6.addConfiguredDefault(var62);
    boolean var65 = var6.getRequired();
    com.martiansoftware.jsap.stringparsers.FileStringParser var66 = var0.setMustBeDirectory(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!"+ "'", var14.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);

  }

  public void test169() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.stringparsers.DateStringParser var1 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var6 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var7 = var3.setHelp("hi!");
    var3.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var10 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var28 = new com.martiansoftware.jsap.SimpleJSAP(var27);
    com.martiansoftware.jsap.UnflaggedOption var29 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var10, var15, var27);
    com.martiansoftware.jsap.ant.SwitchConfiguration var30 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var31 = var30.getLongflag();
    var30.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var43 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var51 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var43, "hi!", true, '4', "", var50);
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var1.setProperty("", "hi!");
    java.lang.String[] var63 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("hi!");
    java.lang.String var64 = var0.getProperty("hi!");
    var0.tearDown();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "hi!"+ "'", var6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);

  }

  public void test170() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test7();
    com.martiansoftware.jsap.TestDefaults var5 = new com.martiansoftware.jsap.TestDefaults();
    var5.tearDown();
    junit.framework.TestResult var7 = var5.run();
    var0.run(var7);
    var0.test2();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);

  }

  public void test171() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.stringparsers.DateStringParser var15 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var15.setUp();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var26 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var26, "hi!", true, '4', "", var33);
    java.lang.String var35 = var15.getProperty("");
    java.lang.String[] var36 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.JSAPResult var37 = var3.parse(var36);
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    java.lang.String var40 = var38.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var41 = new com.martiansoftware.jsap.SimpleJSAP(var40);
    boolean var42 = var41.messagePrinted();
    java.lang.String var43 = var41.getHelp();
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    java.lang.String var46 = var44.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var47 = new com.martiansoftware.jsap.SimpleJSAP(var46);
    boolean var48 = var47.messagePrinted();
    java.lang.String var49 = var47.getHelp();
    com.martiansoftware.jsap.ParseException var50 = new com.martiansoftware.jsap.ParseException(var49);
    java.lang.String[] var51 = new java.lang.String[] { var49};
    com.martiansoftware.jsap.JSAPResult var52 = var41.parse(var51);
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var62 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var68 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var69 = var68.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var70 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var62, "hi!", true, '4', "", var69);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var71 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var72 = new java.lang.Object[] { var71};
    java.lang.Object[] var73 = var52.getObjectArray(var69, var72);
    java.lang.String var76 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var81 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var82 = var78.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var83 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var84 = var83.getID();
    java.lang.String var85 = var83.getID();
    com.martiansoftware.jsap.JSAPException var86 = new com.martiansoftware.jsap.JSAPException(var76, (java.lang.Throwable)var83);
    java.math.BigInteger[] var87 = var52.getBigIntegerArray(var76);
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var90 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    java.lang.String var91 = var52.getString("hi!");
    char[] var92 = var37.getCharArray("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var43.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var49.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "hi!"+ "'", var76.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "hi!"+ "'", var81.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + "hi!"+ "'", var84.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi!"+ "'", var85.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);

  }

  public void test172() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var4 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = var18.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var48 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var48, "hi!", true, '4', "", var55);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption(var2, (com.martiansoftware.jsap.StringParser)var4, var16, false, '4', "hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch(var2);
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    java.lang.String var61 = var59.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var62 = new com.martiansoftware.jsap.SimpleJSAP(var61);
    boolean var63 = var62.messagePrinted();
    java.lang.String var64 = var62.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var65 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var66 = var65.hasProperties();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var67 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var68 = var67.hasProperties();
    java.lang.String var69 = var67.getStringparser();
    boolean var70 = var67.getIslist();
    com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var71 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var64, var66, var70);
    com.martiansoftware.jsap.Switch var72 = var58.setDefault(var64);
    char var73 = var58.getShortFlag();
    java.lang.String var74 = var58.getUsage();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var64.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "[]"+ "'", var74.equals("[]"));

  }

  public void test173() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var33 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var34 = new java.lang.Object[] { var33};
    java.lang.Object[] var35 = var14.getObjectArray(var31, var34);
    com.martiansoftware.jsap.stringparsers.DateStringParser var36 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var36.setUp();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var47 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var55 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var47, "hi!", true, '4', "", var54);
    java.lang.String var56 = var36.getProperty("");
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var60 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var64 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var65 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var66 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var73 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var77 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var78 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var79 = var36.getProperty("hi!", "hi!");
    com.martiansoftware.jsap.UnflaggedOption var80 = new com.martiansoftware.jsap.UnflaggedOption(var79);
    java.lang.Object[] var81 = var14.getObjectArray(var79);
    com.martiansoftware.jsap.JSAP var82 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var87 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var90 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var91 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var92 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var93 = var82.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var94 = new com.martiansoftware.jsap.SimpleJSAP(var93);
    short[] var95 = var14.getShortArray(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "hi!"+ "'", var79.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ""+ "'", var93.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);

  }

  public void test174() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    com.martiansoftware.jsap.stringparsers.FileStringParser var3 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var3.tearDown();
    var3.setUp();
    boolean var6 = var3.mustExist();
    com.martiansoftware.jsap.stringparsers.FileStringParser var7 = var0.setMustExist(var6);
    var7.tearDown();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);

  }

  public void test175() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ByteStringParser var0 = new com.martiansoftware.jsap.stringparsers.ByteStringParser();
    var0.tearDown();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var3 = var2.getHelp();
    java.lang.String var4 = var2.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var5 = new com.martiansoftware.jsap.SimpleJSAP(var4);
    boolean var6 = var5.messagePrinted();
    java.lang.String var7 = var5.getHelp();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var9 = var8.getHelp();
    java.lang.String var10 = var8.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var11 = new com.martiansoftware.jsap.SimpleJSAP(var10);
    boolean var12 = var11.messagePrinted();
    java.lang.String var13 = var11.getHelp();
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException(var13);
    java.lang.String[] var15 = new java.lang.String[] { var13};
    com.martiansoftware.jsap.JSAPResult var16 = var5.parse(var15);
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    java.lang.String var19 = var17.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var20 = new com.martiansoftware.jsap.SimpleJSAP(var19);
    boolean var21 = var20.messagePrinted();
    boolean var22 = var20.messagePrinted();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var29 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var34 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var35 = var24.getHelp((-1), "hi!");
    java.lang.String var36 = var20.getHelp(100, "hi!");
    java.util.Date[] var37 = var16.getDateArray(var36);
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    java.lang.String var40 = var38.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var41 = new com.martiansoftware.jsap.SimpleJSAP(var40);
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var41.unregisterParameter((com.martiansoftware.jsap.Parameter)var43);
    java.lang.String var45 = var41.getUsage();
    java.lang.String var46 = var41.getUsage();
    com.martiansoftware.jsap.TestUsageString var47 = new com.martiansoftware.jsap.TestUsageString(var46);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var57 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    short var61 = var16.getShort(var46, (short)1);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var62 = var0.parse(var46);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var7.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var13.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var36.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "[--help]"+ "'", var45.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "[--help]"+ "'", var46.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == (short)1);

  }

  public void test176() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    java.lang.String[] var22 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var32 = var0.getProperty("", "hi!");
    var0.tearDown();
    var0.tearDown();
    var0.setUp();
    com.martiansoftware.jsap.stringparsers.DateStringParser var36 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var36.tearDown();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var40 = var36.getProperty("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var41 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == null);

  }

  public void test177() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch(var21);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    com.martiansoftware.jsap.UnspecifiedParameterException var54 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var57 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var56);
    com.martiansoftware.jsap.ParseException var58 = new com.martiansoftware.jsap.ParseException("", (java.lang.Throwable)var57);
    com.martiansoftware.jsap.Switch var59 = var35.setDefault("");
    com.martiansoftware.jsap.RequiredParameterMissingException var60 = new com.martiansoftware.jsap.RequiredParameterMissingException("");
    java.lang.String var61 = var60.getID();
    java.lang.String var62 = var60.getID();
    java.lang.String var63 = var60.getID();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));

  }

  public void test178() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    java.lang.String var5 = var0.getId();
    com.martiansoftware.jsap.Parameter var6 = var0.getParameter();
    java.lang.String var7 = var0.getId();
    java.lang.String var8 = var0.getLongflag();
    java.lang.String var9 = var0.getLongflag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);

  }

  public void test179() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    java.lang.String var28 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var29 = var14.getURLArray(var28);
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.util.Iterator var32 = var30.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var33 = var30.getIDMap();
    java.lang.String var34 = var30.getHelp();
    java.lang.String var35 = var30.toString();
    java.lang.Object[] var36 = var14.getObjectArray(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var46 = var45.getShortFlag();
    char var47 = var45.getShortFlag();
    java.lang.Character var48 = var45.getShortFlagCharacter();
    java.lang.String var49 = var45.getSyntax();
    long var51 = var14.getLong(var49, (-1L));
    boolean var52 = var14.success();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var53 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var54 = var53.getParameter();
    boolean var55 = var53.getIslist();
    java.lang.String var58 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var58, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    junit.framework.Assert.assertEquals(var58, 100.0d, 10.0d, 100.0d);
    var53.setStringparser(var58);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      byte var77 = var14.getByte(var58);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + '4'+ "'", var48.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "[-4|--hi!]"+ "'", var49.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == (-1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "hi!"+ "'", var58.equals("hi!"));

  }

  public void test180() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    boolean var1 = var0.mustExist();
    var0.setUp();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var4 = var3.getHelp();
    java.lang.String var5 = var3.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var6 = new com.martiansoftware.jsap.SimpleJSAP(var5);
    boolean var7 = var6.messagePrinted();
    java.lang.String var8 = var6.getHelp();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    java.lang.String var14 = var12.getHelp();
    com.martiansoftware.jsap.ParseException var15 = new com.martiansoftware.jsap.ParseException(var14);
    java.lang.String[] var16 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var17 = var6.parse(var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var27 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var28 = var17.getClass("hi!");
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var40 = var29.getHelp((-1), "hi!");
    double var42 = var17.getDouble(var40, 0.0d);
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    java.lang.String var45 = var43.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var46 = new com.martiansoftware.jsap.SimpleJSAP(var45);
    boolean var47 = var46.messagePrinted();
    java.lang.String var48 = var46.getHelp();
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException(var48);
    java.util.Iterator var50 = var17.getExceptionIterator(var48);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var54 = var52.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var56 = var52.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var60 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var64 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var65 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var66 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var56.addDefault("hi!");
    boolean var70 = var17.contains("hi!");
    com.martiansoftware.jsap.stringparsers.FileStringParser var71 = var0.setMustExist(var70);
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var73 = var72.getHelp();
    java.lang.String var74 = var72.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var75 = new com.martiansoftware.jsap.SimpleJSAP(var74);
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var75.unregisterParameter((com.martiansoftware.jsap.Parameter)var77);
    java.lang.String var79 = var75.getUsage();
    boolean var80 = var75.messagePrinted();
    boolean var81 = var75.messagePrinted();
    com.martiansoftware.jsap.stringparsers.FileStringParser var82 = var71.setMustExist(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var8.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var14.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var48.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "[--help]"+ "'", var79.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);

  }

  public void test181() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getShortflag();
    char var4 = var0.getShortflag();
    boolean var5 = var0.hasProperties();
    com.martiansoftware.jsap.Parameter var6 = var0.getParameter();
    java.lang.String[] var7 = var0.getDefaults();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var9 = var8.getHelp();
    java.lang.String var10 = var8.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var11 = new com.martiansoftware.jsap.SimpleJSAP(var10);
    com.martiansoftware.jsap.IDMap var12 = var11.getIDMap();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var24 = var13.getHelp((-1), "hi!");
    java.lang.String var25 = var12.getIDByLongFlag(var24);
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var29 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var34 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var35 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var43 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var35, "hi!", true, '4', "", var42);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var44 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    java.lang.String var47 = var45.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var48 = new com.martiansoftware.jsap.SimpleJSAP(var47);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var52 = var50.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var54 = var50.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var60 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var44, var47, false, '4', "hi!");
    java.lang.String var63 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var64 = com.martiansoftware.util.StringUtils.wrapToList(var47, 1);
    java.util.List var66 = com.martiansoftware.util.StringUtils.wrapToList(var47, 1);
    com.martiansoftware.jsap.SyntaxException var67 = new com.martiansoftware.jsap.SyntaxException(var47);
    boolean var68 = var12.idExists(var47);
    java.lang.String var70 = var12.getIDByShortFlag((java.lang.Character)'a');
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'a');
    var0.setListseparator('a');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "hi!"+ "'", var63.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == null);

  }

  public void test182() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var38 = com.martiansoftware.util.StringUtils.wrapToList(var21, 1);
    java.util.List var40 = com.martiansoftware.util.StringUtils.wrapToList(var21, 1);
    com.martiansoftware.jsap.SyntaxException var41 = new com.martiansoftware.jsap.SyntaxException(var21);
    com.martiansoftware.jsap.JSAPException var42 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var41);
    java.lang.String var43 = var41.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "com.martiansoftware.jsap.SyntaxException: "+ "'", var43.equals("com.martiansoftware.jsap.SyntaxException: "));

  }

  public void test183() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    com.martiansoftware.jsap.UnknownFlagException var6 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var0.setShortflag('4');
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var8 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var9 = var8.getParameter();
    java.lang.String var10 = var8.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var15 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var16 = var12.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var17 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var18 = var17.getID();
    java.lang.String var19 = var17.getID();
    var8.setLongflag(var19);
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var21 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException(var19);
    java.lang.String var22 = var21.getID();
    var0.setLongflag(var22);
    java.lang.String var24 = com.martiansoftware.util.StringUtils.noNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi!"+ "'", var15.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "hi!"+ "'", var18.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "hi!"+ "'", var19.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "hi!"+ "'", var22.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "hi!"+ "'", var24.equals("hi!"));

  }

  public void test184() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testSimpleDefault();
    var0.testDefaults2();
    var0.testSimpleDefault();

  }

  public void test185() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.stringparsers.DateStringParser var15 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var15.setUp();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var26 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var26, "hi!", true, '4', "", var33);
    java.lang.String var35 = var15.getProperty("");
    java.lang.String[] var36 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.JSAPResult var37 = var3.parse(var36);
    var3.finalize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);

  }

  public void test186() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var5.addDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var23 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var24 = var20.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var25 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = var20.setStringParser((com.martiansoftware.jsap.StringParser)var25);
    com.martiansoftware.jsap.FlaggedOption var27 = var5.setStringParser((com.martiansoftware.jsap.StringParser)var25);
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    com.martiansoftware.jsap.FlaggedOption var30 = var27.setLongFlag(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!"+ "'", var23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);

  }

  public void test187() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.JSAP var12 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var13 = var12.getHelp();
    java.lang.String var14 = var12.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var15 = new com.martiansoftware.jsap.SimpleJSAP(var14);
    com.martiansoftware.jsap.IDMap var16 = var15.getIDMap();
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var28 = var17.getHelp((-1), "hi!");
    java.lang.String var29 = var16.getIDByLongFlag(var28);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    java.util.List var49 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var50 = var16.getIDByLongFlag("");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    java.lang.String var53 = var51.getUsage();
    com.martiansoftware.jsap.IDMap var54 = var51.getIDMap();
    java.lang.String var55 = var51.toString();
    boolean var56 = var16.idExists(var55);
    java.lang.String[] var57 = new java.lang.String[] { var55};
    com.martiansoftware.jsap.Switch var58 = var8.setDefault(var57);
    java.lang.String var59 = var58.getID();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi!"+ "'", var59.equals("hi!"));

  }

  public void test188() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testSimpleDefault();
    var0.setUp();
    var0.testDefaults2();
    var0.testSimpleDefault();
    var0.testConfig();
    var0.testSimpleDefault();

  }

  public void test189() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var26 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var27 = var26.getID();
    java.lang.String[] var28 = var26.getDefault();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi!"+ "'", var27.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == null);

  }

  public void test190() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    var7.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var14 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var31 = var20.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    com.martiansoftware.jsap.UnflaggedOption var33 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var14, var19, var31);
    boolean var34 = var33.required();
    java.lang.String[] var35 = var33.getDefault();
    boolean var36 = var33.isList();
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);

  }

  public void test191() throws Throwable {

    com.martiansoftware.jsap.xml.JSAPConfig var0 = new com.martiansoftware.jsap.xml.JSAPConfig();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var26 = var15.getClass("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var28 = var27.getHelp();
    java.lang.String var29 = var27.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var30 = new com.martiansoftware.jsap.SimpleJSAP(var29);
    com.martiansoftware.jsap.IDMap var31 = var30.getIDMap();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var43 = var32.getHelp((-1), "hi!");
    java.lang.String var44 = var31.getIDByLongFlag(var43);
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var54 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, "hi!", true, '4', "", var61);
    java.util.List var64 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var65 = var31.getIDByLongFlag("");
    long[] var66 = var15.getLongArray("");
    boolean var67 = var15.success();
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var76 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var77 = new com.martiansoftware.jsap.TestSwitch("hi!");
    java.awt.Color[] var78 = var15.getColorArray("hi!");
    var0.setUsage("hi!");
    com.martiansoftware.jsap.TestSwitch var80 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var80.testID();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);

  }

  public void test192() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    java.lang.Class[] var54 = var14.getClassArray("");
    java.lang.String var57 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var62 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var63 = var59.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var64 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var65 = var64.getID();
    java.lang.String var66 = var64.getID();
    com.martiansoftware.jsap.JSAPException var67 = new com.martiansoftware.jsap.JSAPException(var57, (java.lang.Throwable)var64);
    java.io.File var68 = var14.getFile(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "hi!"+ "'", var57.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "hi!"+ "'", var62.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "hi!"+ "'", var65.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + "hi!"+ "'", var66.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == null);

  }

  public void test193() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    com.martiansoftware.jsap.ant.SwitchConfiguration var29 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var30 = var29.getLongflag();
    var29.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var42 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var49 = var48.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var50 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var42, "hi!", true, '4', "", var49);
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var0.setProperty("", "hi!");
    var0.setUp();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));

  }

  public void test194() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test5();
    var0.test7();
    var0.test10();
    var0.test7();

  }

  public void test195() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.TestOption var33 = new com.martiansoftware.jsap.TestOption();
    int var34 = var33.countTestCases();
    java.lang.String var35 = var33.toString();
    java.lang.Exception var36 = var14.getException(var35);
    com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource var37 = new com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource();
    var37.testUnexpectedProperties();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var48 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var48, "hi!", true, '4', "", var55);
    java.lang.String var57 = var56.getSyntax();
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption(var57);
    var37.setName(var57);
    com.martiansoftware.jsap.UnspecifiedParameterException var60 = new com.martiansoftware.jsap.UnspecifiedParameterException(var57);
    boolean[] var61 = var14.getBooleanArray(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "null(com.martiansoftware.jsap.TestOption)"+ "'", var35.equals("null(com.martiansoftware.jsap.TestOption)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var57.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);

  }

  public void test196() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var3 = var2.getHelp();
    java.lang.String var4 = var2.getUsage();
    com.martiansoftware.jsap.IDMap var5 = var2.getIDMap();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var7 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var8 = var7.idIterator();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var14 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var18 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var19 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var20 = var9.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    java.lang.String[] var39 = new java.lang.String[] { var37};
    var7.addDefault(var20, var39);
    java.lang.String[] var41 = new java.lang.String[] { var20};
    com.martiansoftware.jsap.JSAPResult var42 = var6.parse(var41);
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var46 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var50 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var52 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var55 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var56 = var42.contains("hi!");
    java.math.BigInteger[] var58 = var42.getBigIntegerArray("");
    boolean var59 = var5.idExists("");
    var0.setId("");
    boolean var61 = var0.getGreedy();
    boolean var62 = var0.getRequired();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);

  }

  public void test197() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var4 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var5 = var4.hasProperties();
    var0.setRequired(var5);
    java.lang.String var7 = var0.getStringparser();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == null);

  }

  public void test198() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser("hi!");
    var51.testFloatRGB();
    var51.testHexRGB();
    var51.testIntegerRGB();
    var51.testByName();
    var51.testByName();
    var51.testByName();
    var51.testFloatRGB();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);

  }

  public void test199() throws Throwable {

    com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource var0 = new com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource();
    java.lang.String var1 = var0.getName();
    var0.testUnexpectedProperties();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);

  }

  public void test200() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    com.martiansoftware.jsap.ant.DefaultValue var2 = new com.martiansoftware.jsap.ant.DefaultValue();
    var0.addConfiguredDefault(var2);
    com.martiansoftware.jsap.stringparsers.FileStringParser var4 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var4.tearDown();
    var4.setUp();
    var4.setUp();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var12 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var13 = var9.setHelp("hi!");
    boolean var14 = var9.allowMultipleDeclarations();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var15 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    junit.framework.Assert.assertNotSame((java.lang.Object)var14, (java.lang.Object)var15);
    com.martiansoftware.jsap.stringparsers.FileStringParser var17 = var4.setMustBeFile(var14);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var27 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var40 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var48 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var40, "hi!", true, '4', "", var47);
    var4.setProperty("hi!", var47);
    var2.addText("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    java.lang.String var53 = var51.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var54 = new com.martiansoftware.jsap.SimpleJSAP(var53);
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var54.unregisterParameter((com.martiansoftware.jsap.Parameter)var56);
    java.lang.String var58 = var56.getSyntax();
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    java.lang.String var61 = var59.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var62 = new com.martiansoftware.jsap.SimpleJSAP(var61);
    boolean var63 = var62.messagePrinted();
    java.lang.String var64 = var62.getHelp();
    com.martiansoftware.jsap.ParseException var65 = new com.martiansoftware.jsap.ParseException(var64);
    com.martiansoftware.jsap.FlaggedOption var66 = var56.setUsageName(var64);
    java.lang.String var67 = com.martiansoftware.util.StringUtils.noNull(var64);
    var2.addText(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!"+ "'", var12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "[<hi!>]"+ "'", var58.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var64.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var67.equals("  [--help]\n        Prints this help message.\n"));

  }

  public void test201() throws Throwable {

    com.martiansoftware.jsap.xml.JSAPConfig var0 = new com.martiansoftware.jsap.xml.JSAPConfig();
    java.lang.String var1 = var0.getHelp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var4 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var6 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var7 = var6.idIterator();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var19 = var8.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var29 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var37 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var29, "hi!", true, '4', "", var36);
    java.lang.String[] var38 = new java.lang.String[] { var36};
    var6.addDefault(var19, var38);
    java.lang.String[] var40 = new java.lang.String[] { var19};
    com.martiansoftware.jsap.JSAPResult var41 = var5.parse(var40);
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    boolean var46 = var45.messagePrinted();
    java.lang.String var47 = var45.getHelp();
    com.martiansoftware.jsap.JSAPResult var48 = var5.parse(var47);
    var4.setName(var47);
    var0.setHelp(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var47.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);

  }

  public void test202() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testRequired();
    com.martiansoftware.jsap.TestCommandLineTokenizer var3 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var3.test7();
    var3.test2();
    var3.test6();
    var3.test7();
    junit.framework.TestResult var8 = var3.run();
    var0.run(var8);
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var19 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var26 = var25.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var27 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var19, "hi!", true, '4', "", var26);
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String[] var29 = var28.getDefault();
    com.martiansoftware.jsap.StringParser var30 = var28.getStringParser();
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    java.lang.String var33 = var31.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var34 = new com.martiansoftware.jsap.SimpleJSAP(var33);
    boolean var35 = var34.messagePrinted();
    java.lang.String var36 = var34.getHelp();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.ParseException var43 = new com.martiansoftware.jsap.ParseException(var42);
    java.lang.String[] var44 = new java.lang.String[] { var42};
    com.martiansoftware.jsap.JSAPResult var45 = var34.parse(var44);
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    float[] var50 = var45.getFloatArray(var48);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var60 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var63 = var45.getCharArray("hi!");
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    java.lang.String var66 = var64.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var67 = new com.martiansoftware.jsap.SimpleJSAP(var66);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var67.unregisterParameter((com.martiansoftware.jsap.Parameter)var69);
    com.martiansoftware.jsap.TestOption var71 = new com.martiansoftware.jsap.TestOption();
    int var72 = var71.countTestCases();
    int var73 = var71.countTestCases();
    int var74 = var71.countTestCases();
    java.lang.String var75 = var67.getHelp(var74);
    char[] var76 = var45.getCharArray(var75);
    com.martiansoftware.jsap.Parameter var77 = var28.setHelp(var75);
    char var78 = var28.getShortFlag();
    java.lang.String var79 = var28.getSyntax();
    var0.setName(var79);
    com.martiansoftware.jsap.UnspecifiedParameterException var81 = new com.martiansoftware.jsap.UnspecifiedParameterException(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var36.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var75.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "[<>]"+ "'", var79.equals("[<>]"));

  }

  public void test203() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var51 = var27.setList(false);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var55 = var53.setRequired(false);
    java.lang.String var56 = var53.getID();
    boolean var57 = var53.allowMultipleDeclarations();
    com.martiansoftware.jsap.UnflaggedOption var58 = var51.setList(var57);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var62 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var66 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var67 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var68 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var71 = new com.martiansoftware.jsap.ParseException();
    com.martiansoftware.jsap.JSAPException var72 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var71);
    junit.framework.Assert.assertNotNull("hi!", (java.lang.Object)var71);
    com.martiansoftware.jsap.UnflaggedOption var74 = var51.setUsageName("hi!");
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP("hi!");
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test204() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var16 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var23 = var22.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var24 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var16, "hi!", true, '4', "", var23);
    java.lang.String var25 = var24.getSyntax();
    java.lang.Character var26 = var24.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var27 = var5.setListSeparator((char)var26);
    boolean var28 = var5.isList();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var29 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var30 = var29.getParameter();
    boolean var31 = var29.declaredListSeparator();
    boolean var32 = var29.getIslist();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var38 = var34.setHelp("hi!");
    var34.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var41 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    boolean var46 = var45.messagePrinted();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var58 = var47.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    com.martiansoftware.jsap.UnflaggedOption var60 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var41, var46, var58);
    com.martiansoftware.jsap.ant.SwitchConfiguration var61 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var62 = var61.getLongflag();
    var61.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var74 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var80 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var81 = var80.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var74, "hi!", true, '4', "", var81);
    com.martiansoftware.jsap.Switch var83 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var29.setListseparator('#');
    com.martiansoftware.jsap.FlaggedOption var85 = var5.setListSeparator('#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var25.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + '4'+ "'", var26.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);

  }

  public void test205() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    boolean var5 = var3.messagePrinted();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var18 = var7.getHelp((-1), "hi!");
    java.lang.String var19 = var3.getHelp(100, "hi!");
    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    junit.framework.Assert.assertEquals(0.0d, 1.0d, 100.0d);
    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    junit.framework.Assert.assertNotNull((java.lang.Object)0.0d);
    junit.framework.Assert.assertEquals(var19, 100.0d, 100.0d, 0.0d);
    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    junit.framework.Assert.assertEquals(100.0d, 100.0d, 100.0d);
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    boolean var50 = var49.messagePrinted();
    java.lang.String var51 = var49.getHelp();
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    java.lang.String var54 = var52.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var55 = new com.martiansoftware.jsap.SimpleJSAP(var54);
    boolean var56 = var55.messagePrinted();
    java.lang.String var57 = var55.getHelp();
    com.martiansoftware.jsap.ParseException var58 = new com.martiansoftware.jsap.ParseException(var57);
    java.lang.String[] var59 = new java.lang.String[] { var57};
    com.martiansoftware.jsap.JSAPResult var60 = var49.parse(var59);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var70 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var71 = var60.getClass("hi!");
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var77 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var81 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var82 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var83 = var72.getHelp((-1), "hi!");
    double var85 = var60.getDouble(var83, 0.0d);
    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    junit.framework.Assert.assertEquals(0.0d, 1.0d, 100.0d);
    junit.framework.Assert.assertEquals(100.0d, 0.0d, 100.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var19.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var51.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var57.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + ""+ "'", var83.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 0.0d);

  }

  public void test206() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var2 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var3 = var2.getLongflag();
    var2.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var6 = var1.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var11 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var12 = var8.setHelp("hi!");
    var8.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var15 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var32 = var21.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var33 = new com.martiansoftware.jsap.SimpleJSAP(var32);
    com.martiansoftware.jsap.UnflaggedOption var34 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var15, var20, var32);
    boolean var35 = var34.isGreedy();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var36 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var37 = var36.getParameter();
    boolean var38 = var36.declaredListSeparator();
    char var39 = var36.getShortflag();
    boolean var40 = var36.getIslist();
    com.martiansoftware.jsap.UnflaggedOption var41 = var34.setRequired(var40);
    com.martiansoftware.jsap.FlaggedOption var42 = var6.setAllowMultipleDeclarations(var40);
    java.lang.String var43 = var6.getUsage();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "[<hi!>]"+ "'", var43.equals("[<hi!>]"));

  }

  public void test207() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var39.unregisterParameter((com.martiansoftware.jsap.Parameter)var41);
    java.lang.String var43 = var39.getUsage();
    java.lang.String var44 = var39.getUsage();
    com.martiansoftware.jsap.TestUsageString var45 = new com.martiansoftware.jsap.TestUsageString(var44);
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var55 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    short var59 = var14.getShort(var44, (short)1);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)var59);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "[--help]"+ "'", var43.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "[--help]"+ "'", var44.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == (short)1);

  }

  public void test208() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var25 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var26 = var25.getParameter();
    boolean var27 = var25.declaredListSeparator();
    char var28 = var25.getShortflag();
    char var29 = var25.getShortflag();
    com.martiansoftware.jsap.Switch var30 = var8.setShortFlag(var29);
    java.lang.String var31 = var30.getSyntax();
    java.lang.String var32 = var30.getSyntax();
    java.lang.String var33 = var30.getSyntax();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var34 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    java.lang.String[] var35 = var34.getDefaults();
    boolean var36 = var34.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var39 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var40 = var39.getLongflag();
    var39.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var43 = var38.setListSeparator('#');
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var44 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var45 = var44.hasProperties();
    boolean var46 = var44.getIslist();
    com.martiansoftware.jsap.FlaggedOption var47 = var38.setAllowMultipleDeclarations(var46);
    com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var48 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser(var33, var36, var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "[--hi!]"+ "'", var31.equals("[--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "[--hi!]"+ "'", var32.equals("[--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "[--hi!]"+ "'", var33.equals("[--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);

  }

  public void test209() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser("hi!");
    var51.testFloatRGB();
    var51.testHexRGB();
    var51.testIntegerRGB();
    var51.testHexRGB();
    var51.testIntegerRGB();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);

  }

  public void test210() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FloatStringParser var0 = com.martiansoftware.jsap.stringparsers.FloatStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    float[] var20 = var15.getFloatArray(var18);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var30 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var33 = var15.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var38 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var39 = var35.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var40 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var41 = var40.getID();
    boolean[] var42 = var15.getBooleanArray(var41);
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    java.lang.String var45 = var43.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var46 = new com.martiansoftware.jsap.SimpleJSAP(var45);
    boolean var47 = var46.messagePrinted();
    java.lang.String var48 = var46.getHelp();
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    java.lang.String var51 = var49.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    boolean var53 = var52.messagePrinted();
    java.lang.String var54 = var52.getHelp();
    com.martiansoftware.jsap.ParseException var55 = new com.martiansoftware.jsap.ParseException(var54);
    java.lang.String[] var56 = new java.lang.String[] { var54};
    com.martiansoftware.jsap.JSAPResult var57 = var46.parse(var56);
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    java.lang.String var60 = var58.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    float[] var62 = var57.getFloatArray(var60);
    java.math.BigInteger[] var63 = var15.getBigIntegerArray(var60);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var64 = var0.parse(var60);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "hi!"+ "'", var38.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "hi!"+ "'", var41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var48.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var54.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);

  }

  public void test211() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.ant.SwitchConfiguration var28 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var29 = var28.getLongflag();
    var28.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var51 = new com.martiansoftware.jsap.UnflaggedOption("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var52 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var53 = var52.getParameter();
    java.lang.String var54 = var52.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var59 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var60 = var56.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var61 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var62 = var61.getID();
    java.lang.String var63 = var61.getID();
    var52.setLongflag(var63);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var67 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var68 = var67.getLongflag();
    var67.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var71 = var66.setListSeparator('#');
    boolean var72 = var71.isList();
    var52.setAllowmultipledeclarations(var72);
    com.martiansoftware.jsap.UnflaggedOption var74 = var51.setList(var72);
    boolean var75 = var74.isGreedy();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi!"+ "'", var59.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "hi!"+ "'", var62.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "hi!"+ "'", var63.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);

  }

  public void test212() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.Exception var70 = var36.getException("");
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var75 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var76 = var72.setHelp("hi!");
    double[] var77 = var36.getDoubleArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var79 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "hi!"+ "'", var75.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);

  }

  public void test213() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    java.lang.String var3 = var0.getId();
    com.martiansoftware.jsap.JSAP var4 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var5 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var6 = var5.idIterator();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var18 = var7.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var28 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var35 = var34.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var36 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var28, "hi!", true, '4', "", var35);
    java.lang.String[] var37 = new java.lang.String[] { var35};
    var5.addDefault(var18, var37);
    java.lang.String[] var39 = new java.lang.String[] { var18};
    com.martiansoftware.jsap.JSAPResult var40 = var4.parse(var39);
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.JSAPResult var47 = var4.parse(var46);
    com.martiansoftware.jsap.stringparsers.FileStringParser var48 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    var48.setUp();
    boolean var50 = var48.mustBeFile();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var55 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var56 = var52.setHelp("hi!");
    var52.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var59 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    java.lang.String var62 = var60.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var63 = new com.martiansoftware.jsap.SimpleJSAP(var62);
    boolean var64 = var63.messagePrinted();
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var70 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var74 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var75 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var76 = var65.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var77 = new com.martiansoftware.jsap.SimpleJSAP(var76);
    com.martiansoftware.jsap.UnflaggedOption var78 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var59, var64, var76);
    boolean var79 = var78.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var83 = var81.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var84 = var78.setList(false);
    com.martiansoftware.jsap.stringparsers.FileStringParser var85 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var85.tearDown();
    boolean var87 = var85.mustBeDirectory();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var88 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var89 = var88.getRequired();
    boolean var90 = var88.getGreedy();
    boolean var91 = var88.declaredListSeparator();
    com.martiansoftware.jsap.stringparsers.FileStringParser var92 = var85.setMustExist(var91);
    com.martiansoftware.jsap.UnflaggedOption var93 = var78.setGreedy(var91);
    junit.framework.Assert.assertEquals(var46, var50, var91);
    var0.setAllowmultipledeclarations(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!"+ "'", var55.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);

  }

  public void test214() throws Throwable {

    com.martiansoftware.jsap.Defaults var0 = new com.martiansoftware.jsap.Defaults();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String[] var3 = var0.getDefault("hi!");
    java.util.Iterator var4 = var0.idIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);

  }

  public void test215() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.JSAP var4 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var5 = var4.getHelp();
    java.lang.String var6 = var4.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var7 = new com.martiansoftware.jsap.SimpleJSAP(var6);
    boolean var8 = var7.messagePrinted();
    java.lang.String var9 = var7.getHelp();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    java.lang.String var15 = var13.getHelp();
    com.martiansoftware.jsap.ParseException var16 = new com.martiansoftware.jsap.ParseException(var15);
    java.lang.String[] var17 = new java.lang.String[] { var15};
    com.martiansoftware.jsap.JSAPResult var18 = var7.parse(var17);
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var28 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var29 = var18.getClass("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var41 = var30.getHelp((-1), "hi!");
    double var43 = var18.getDouble(var41, 0.0d);
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    java.lang.String var46 = var44.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var47 = new com.martiansoftware.jsap.SimpleJSAP(var46);
    boolean var48 = var47.messagePrinted();
    java.lang.String var49 = var47.getHelp();
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    java.lang.String var52 = var50.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var52);
    boolean var54 = var53.messagePrinted();
    java.lang.String var55 = var53.getHelp();
    com.martiansoftware.jsap.ParseException var56 = new com.martiansoftware.jsap.ParseException(var55);
    java.lang.String[] var57 = new java.lang.String[] { var55};
    com.martiansoftware.jsap.JSAPResult var58 = var47.parse(var57);
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    java.util.Iterator var61 = var59.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var62 = var59.getIDMap();
    java.lang.String var63 = var59.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var67 = var58.getByte(var63, (byte)(-1));
    java.math.BigDecimal var68 = var18.getBigDecimal(var63);
    boolean var69 = var18.success();
    com.martiansoftware.jsap.JSAP var70 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var71 = var70.getHelp();
    java.util.Iterator var72 = var70.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var73 = var70.getIDMap();
    java.lang.String var74 = var70.getUsage();
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var79 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var80 = var76.setHelp("hi!");
    java.lang.String var81 = var18.getString(var74, "hi!");
    var3.setHelp(var81);
    var3.finalize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var9.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var15.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var49.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var55.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "hi!"+ "'", var79.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "hi!"+ "'", var81.equals("hi!"));

  }

  public void test216() throws Throwable {

    com.martiansoftware.jsap.ant.DefaultValue var0 = new com.martiansoftware.jsap.ant.DefaultValue();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var26 = var15.getClass("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var38 = var27.getHelp((-1), "hi!");
    double var40 = var15.getDouble(var38, 0.0d);
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.ParseException var47 = new com.martiansoftware.jsap.ParseException(var46);
    java.util.Iterator var48 = var15.getExceptionIterator(var46);
    boolean var49 = var15.success();
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    java.lang.String var52 = var50.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var52);
    boolean var54 = var53.messagePrinted();
    java.lang.String var55 = var53.getHelp();
    java.lang.String var58 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var58, 10.0f, 10.0f, 1.0f);
    var53.setHelp(var58);
    java.util.Date[] var70 = var15.getDateArray(var58);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var74 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var78 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var79 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var80 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var86 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var87 = var86.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var88 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var80, "hi!", true, '4', "", var87);
    java.lang.Character var89 = var88.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var91 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var92 = var88.setLongFlag("hi!");
    java.math.BigDecimal[] var93 = var15.getBigDecimalArray("hi!");
    var0.addText("hi!");
    java.lang.String var95 = var0.getValue();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var55.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "hi!"+ "'", var58.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + ""+ "'", var87.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + '4'+ "'", var89.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "hi!"+ "'", var95.equals("hi!"));

  }

  public void test217() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var33 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var34 = var30.setHelp("hi!");
    var30.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var37 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    java.lang.String var40 = var38.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var41 = new com.martiansoftware.jsap.SimpleJSAP(var40);
    boolean var42 = var41.messagePrinted();
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var54 = var43.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var55 = new com.martiansoftware.jsap.SimpleJSAP(var54);
    com.martiansoftware.jsap.UnflaggedOption var56 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var37, var42, var54);
    com.martiansoftware.jsap.ant.SwitchConfiguration var57 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var58 = var57.getLongflag();
    var57.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var70 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var78 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, "hi!", true, '4', "", var77);
    com.martiansoftware.jsap.Switch var79 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var80 = var27.setUsageName("hi!");
    java.lang.String var81 = var80.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "hi!"+ "'", var33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "[<hi!>]"+ "'", var81.equals("[<hi!>]"));

  }

  public void test218() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    var7.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var14 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var31 = var20.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    com.martiansoftware.jsap.UnflaggedOption var33 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var14, var19, var31);
    boolean var34 = var33.isGreedy();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var35 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var36 = var35.getParameter();
    boolean var37 = var35.declaredListSeparator();
    char var38 = var35.getShortflag();
    boolean var39 = var35.getIslist();
    com.martiansoftware.jsap.UnflaggedOption var40 = var33.setRequired(var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.UnflaggedOption var60 = var40.setUsageName("hi!");
    var3.setUsage("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail("hi!");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);

  }

  public void test219() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var12 = new com.martiansoftware.jsap.TestOption();
    int var13 = var12.countTestCases();
    int var14 = var12.countTestCases();
    java.lang.String var15 = com.martiansoftware.util.StringUtils.padRight("hi!", var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    java.lang.String var21 = var19.getHelp();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var23 = var22.getHelp();
    java.lang.String var24 = var22.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var25 = new com.martiansoftware.jsap.SimpleJSAP(var24);
    boolean var26 = var25.messagePrinted();
    java.lang.String var27 = var25.getHelp();
    com.martiansoftware.jsap.ParseException var28 = new com.martiansoftware.jsap.ParseException(var27);
    java.lang.String[] var29 = new java.lang.String[] { var27};
    com.martiansoftware.jsap.JSAPResult var30 = var19.parse(var29);
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var40 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var41 = var30.getClass("hi!");
    java.lang.String var44 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var45 = var30.getURLArray(var44);
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.util.Iterator var48 = var46.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var49 = var46.getIDMap();
    java.lang.String var50 = var46.getHelp();
    java.lang.String var51 = var46.toString();
    java.lang.Object[] var52 = var30.getObjectArray(var51);
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var15, var51);
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    java.lang.String var56 = var54.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var57 = new com.martiansoftware.jsap.SimpleJSAP(var56);
    boolean var58 = var57.messagePrinted();
    java.lang.String var59 = var57.getHelp();
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var68 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var69 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var70 = var69.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var71 = var57.setScreenWidth(var70);
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var73 = var72.getHelp();
    java.lang.String var74 = var72.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var75 = new com.martiansoftware.jsap.SimpleJSAP(var74);
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var75.unregisterParameter((com.martiansoftware.jsap.Parameter)var77);
    com.martiansoftware.jsap.TestOption var79 = new com.martiansoftware.jsap.TestOption();
    int var80 = var79.countTestCases();
    int var81 = var79.countTestCases();
    int var82 = var79.countTestCases();
    java.lang.String var83 = var75.getHelp(var82);
    junit.framework.Assert.assertEquals(var70, var82);
    java.lang.String var85 = var53.getHelp(var70);
    var53.finalize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi! "+ "'", var15.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var21.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var27.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "hi!"+ "'", var44.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var59.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var83.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var85.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));

  }

  public void test220() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test3();
    var0.test7();
    var0.test10();
    var0.test7();
    var0.test9();

  }

  public void test221() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    com.martiansoftware.jsap.ant.SwitchConfiguration var29 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var30 = var29.getLongflag();
    var29.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var42 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var49 = var48.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var50 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var42, "hi!", true, '4', "", var49);
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var0.setProperty("", "hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var62 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("");
    java.lang.String var63 = var62.getID();
    java.lang.String var64 = var62.getID();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));

  }

  public void test222() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var6 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var7 = var6.getID();
    java.lang.String var8 = var6.getID();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    java.lang.String var14 = var12.getHelp();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    java.lang.String var20 = var18.getHelp();
    com.martiansoftware.jsap.ParseException var21 = new com.martiansoftware.jsap.ParseException(var20);
    java.lang.String[] var22 = new java.lang.String[] { var20};
    com.martiansoftware.jsap.JSAPResult var23 = var12.parse(var22);
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var33 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var34 = var23.getClass("hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.IDMap var39 = var38.getIDMap();
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var51 = var40.getHelp((-1), "hi!");
    java.lang.String var52 = var39.getIDByLongFlag(var51);
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var62 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var68 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var69 = var68.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var70 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var62, "hi!", true, '4', "", var69);
    java.util.List var72 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var73 = var39.getIDByLongFlag("");
    long[] var74 = var23.getLongArray("");
    boolean var75 = var23.success();
    boolean var76 = var23.success();
    junit.framework.Assert.assertFalse(var8, var76);
    com.martiansoftware.jsap.JSAP var78 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var79 = var78.getHelp();
    java.lang.String var80 = var78.getUsage();
    com.martiansoftware.jsap.stringparsers.DateStringParser var81 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var81.tearDown();
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var85 = var81.getProperty("hi!");
    java.lang.String[] var86 = new java.lang.String[] { "hi!"};
    com.martiansoftware.jsap.JSAPResult var87 = var78.parse(var86);
    java.util.Iterator var88 = var87.getBadParameterIDIterator();
    junit.framework.Assert.assertNotSame((java.lang.Object)var76, (java.lang.Object)var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var14.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var20.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + ""+ "'", var80.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);

  }

  public void test223() throws Throwable {

    com.martiansoftware.jsap.TestParser var0 = new com.martiansoftware.jsap.TestParser();
    var0.testParser();
    var0.testParser();
    var0.testMultipleDeclarations();
    java.lang.String var4 = var0.toString();
    var0.testMultipleDeclarations();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.martiansoftware.jsap.TestParser)"+ "'", var4.equals("null(com.martiansoftware.jsap.TestParser)"));

  }

  public void test224() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    java.lang.String[] var3 = var0.getDefaults();
    com.martiansoftware.jsap.Parameter var4 = var0.getParameter();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);

  }

  public void test225() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.Flagged var37 = var35.getByShortFlag('4');
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var38 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var48 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var48, "hi!", true, '4', "", var55);
    com.martiansoftware.jsap.UnspecifiedParameterException var57 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    java.lang.String var58 = var57.getID();
    com.martiansoftware.jsap.JSAPException var59 = new com.martiansoftware.jsap.JSAPException(var58);
    java.lang.String var60 = com.martiansoftware.util.StringUtils.noNull(var58);
    var38.setDefault(var60);
    java.lang.String[] var62 = new java.lang.String[] { var60};
    com.martiansoftware.jsap.JSAPResult var63 = var35.parse(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);

  }

  public void test226() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    boolean var48 = var14.success();
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    java.lang.String var51 = var49.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    boolean var53 = var52.messagePrinted();
    java.lang.String var54 = var52.getHelp();
    java.lang.String var57 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var57, 10.0f, 10.0f, 1.0f);
    var52.setHelp(var57);
    java.util.Date[] var69 = var14.getDateArray(var57);
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var73 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var77 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var78 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var79 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var85 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var86 = var85.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var87 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var79, "hi!", true, '4', "", var86);
    com.martiansoftware.jsap.UnspecifiedParameterException var88 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    com.martiansoftware.jsap.JSAPException var89 = new com.martiansoftware.jsap.JSAPException("");
    java.lang.String var90 = var89.toString();
    java.lang.String var91 = var89.toString();
    java.net.InetAddress var92 = var14.getInetAddress(var91);
    com.martiansoftware.jsap.TestSwitch var93 = new com.martiansoftware.jsap.TestSwitch(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var54.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "hi!"+ "'", var57.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + ""+ "'", var86.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + "com.martiansoftware.jsap.JSAPException: "+ "'", var90.equals("com.martiansoftware.jsap.JSAPException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + "com.martiansoftware.jsap.JSAPException: "+ "'", var91.equals("com.martiansoftware.jsap.JSAPException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == null);

  }

  public void test227() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    com.martiansoftware.jsap.TestOption var7 = new com.martiansoftware.jsap.TestOption();
    int var8 = var7.countTestCases();
    int var9 = var7.countTestCases();
    int var10 = var7.countTestCases();
    java.lang.String var11 = var3.getHelp(var10);
    com.martiansoftware.jsap.TestUsageString var12 = new com.martiansoftware.jsap.TestUsageString(var11);
    var12.testUsage2();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var11.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));

  }

  public void test228() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    java.lang.String var25 = var8.getHelp();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var30 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var31 = var27.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var32 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = var27.setStringParser((com.martiansoftware.jsap.StringParser)var32);
    com.martiansoftware.jsap.ant.SwitchConfiguration var34 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var35 = var34.getLongflag();
    var34.setShortflag('#');
    java.lang.String var38 = var34.getLongflag();
    var34.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var41 = var27.setListSeparator('#');
    com.martiansoftware.jsap.Switch var42 = var8.setShortFlag('#');
    java.lang.Character var43 = var42.getShortFlagCharacter();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "hi!"+ "'", var25.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "hi!"+ "'", var30.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + '#'+ "'", var43.equals('#'));

  }

  public void test229() throws Throwable {

    com.martiansoftware.jsap.JSAPException var0 = new com.martiansoftware.jsap.JSAPException();
    com.martiansoftware.jsap.ParseException var1 = new com.martiansoftware.jsap.ParseException((java.lang.Throwable)var0);

  }

  public void test230() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var6 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var7 = var6.getID();
    java.lang.String var8 = var6.getID();
    java.lang.String var9 = var6.getID();
    java.lang.String var10 = var6.getID();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var15 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var16 = var12.setHelp("hi!");
    var12.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var19 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    boolean var24 = var23.messagePrinted();
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var36 = var25.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var37 = new com.martiansoftware.jsap.SimpleJSAP(var36);
    com.martiansoftware.jsap.UnflaggedOption var38 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var19, var24, var36);
    boolean var39 = var38.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var43 = var41.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var44 = var38.setList(false);
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var49 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var50 = var49.idIterator();
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var62 = var51.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var72 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var78 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var79 = var78.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var80 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var72, "hi!", true, '4', "", var79);
    java.lang.String[] var81 = new java.lang.String[] { var79};
    var49.addDefault(var62, var81);
    java.lang.String[] var83 = new java.lang.String[] { var62};
    com.martiansoftware.jsap.JSAPResult var84 = var48.parse(var83);
    com.martiansoftware.jsap.JSAP var85 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var86 = var85.getHelp();
    java.lang.String var87 = var85.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var88 = new com.martiansoftware.jsap.SimpleJSAP(var87);
    boolean var89 = var88.messagePrinted();
    java.lang.String var90 = var88.getHelp();
    com.martiansoftware.jsap.JSAPResult var91 = var48.parse(var90);
    var47.setName(var90);
    var47.testLongFlag();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals(var10, (java.lang.Object)var38, (java.lang.Object)var47);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi!"+ "'", var15.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + ""+ "'", var86.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + ""+ "'", var87.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var90.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);

  }

  public void test231() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ByteStringParser var0 = new com.martiansoftware.jsap.stringparsers.ByteStringParser();
    var0.tearDown();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var11 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var11.testID();
    var11.testShortFlag();
    var11.testID();
    var11.testLongFlag();
    java.lang.String var16 = var11.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var17 = var0.parse(var16);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!(com.martiansoftware.jsap.TestSwitch)"+ "'", var16.equals("hi!(com.martiansoftware.jsap.TestSwitch)"));

  }

  public void test232() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    char var2 = var0.getShortflag();
    java.lang.String var3 = var0.getId();
    char var4 = var0.getShortflag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == '\u0000');

  }

  public void test233() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getStringparser();
    char var3 = var0.getListseparator();
    boolean var4 = var0.hasProperties();
    com.martiansoftware.jsap.ant.ParserProperty[] var5 = var0.getParserProperties();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var22 = var21.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var23 = var9.setScreenWidth(var22);
    boolean var24 = var23.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var29 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var30 = var26.setHelp("hi!");
    var26.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var33 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var35 = var34.getHelp();
    java.lang.String var36 = var34.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var37 = new com.martiansoftware.jsap.SimpleJSAP(var36);
    boolean var38 = var37.messagePrinted();
    com.martiansoftware.jsap.JSAP var39 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var50 = var39.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var51 = new com.martiansoftware.jsap.SimpleJSAP(var50);
    com.martiansoftware.jsap.UnflaggedOption var52 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var33, var38, var50);
    boolean var53 = var52.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var57 = var55.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var58 = var52.setList(false);
    boolean var59 = var58.isGreedy();
    junit.framework.Assert.assertEquals(var24, var59);
    var0.setIslist(var59);
    boolean var62 = var0.hasProperties();
    com.martiansoftware.jsap.ant.ParserProperty var63 = new com.martiansoftware.jsap.ant.ParserProperty();
    java.lang.String var64 = var63.getValue();
    java.lang.String var65 = var63.getName();
    java.lang.String var66 = var63.getValue();
    java.lang.String var67 = var63.getValue();
    var0.addConfiguredProperty(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "hi!"+ "'", var29.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == null);

  }

  public void test234() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getUsage();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAPResult var7 = var0.parse("hi!");
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var9 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var10 = var9.idIterator();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var22 = var11.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var32 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var40 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var32, "hi!", true, '4', "", var39);
    java.lang.String[] var41 = new java.lang.String[] { var39};
    var9.addDefault(var22, var41);
    java.lang.String[] var43 = new java.lang.String[] { var22};
    com.martiansoftware.jsap.JSAPResult var44 = var8.parse(var43);
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var54 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var57 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var58 = var44.contains("hi!");
    java.lang.Exception[] var59 = var7.getExceptionArray("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);

  }

  public void test235() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.JSAPException var39 = new com.martiansoftware.jsap.JSAPException(var37);
    java.util.Date var40 = var14.getDate(var37);
    com.martiansoftware.jsap.ParseException var41 = new com.martiansoftware.jsap.ParseException(var37);
    com.martiansoftware.jsap.TestSwitch var42 = new com.martiansoftware.jsap.TestSwitch(var37);
    int var43 = var42.countTestCases();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);

  }

  public void test236() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.UnspecifiedParameterException var18 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    java.lang.String var19 = var18.getID();
    com.martiansoftware.jsap.JSAPException var20 = new com.martiansoftware.jsap.JSAPException(var19);
    java.lang.String var21 = com.martiansoftware.util.StringUtils.noNull(var19);
    com.martiansoftware.jsap.UnflaggedOption var22 = new com.martiansoftware.jsap.UnflaggedOption(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));

  }

  public void test237() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var16 = var15.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var17 = var3.setScreenWidth(var16);
    boolean var18 = var17.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var22 = var20.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var24 = var20.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var34 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var24.addDefault("hi!");
    com.martiansoftware.jsap.JSAPResult var38 = var17.parse("hi!");
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var48 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var48, "hi!", true, '4', "", var55);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var57 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    java.lang.String var60 = var58.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var65 = var63.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var67 = var63.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var69 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var57, var60, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var74 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    java.lang.String var77 = var75.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var78 = new com.martiansoftware.jsap.SimpleJSAP(var77);
    var74.setUsage(var77);
    var17.setHelp(var77);
    boolean var81 = var17.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var85 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var89 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var90 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var91 = var90.getShortFlag();
    char var92 = var90.getShortFlag();
    java.lang.Character var93 = var90.getShortFlagCharacter();
    java.lang.String var94 = var90.getSyntax();
    java.lang.String[] var95 = new java.lang.String[] { var94};
    com.martiansoftware.jsap.JSAPResult var96 = var17.parse(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + '4'+ "'", var93.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "[-4|--hi!]"+ "'", var94.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);

  }

  public void test238() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    java.math.BigInteger[] var52 = var36.getBigIntegerArray("");
    com.martiansoftware.jsap.ParseException var53 = new com.martiansoftware.jsap.ParseException("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame("");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);

  }

  public void test239() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    com.martiansoftware.jsap.Parameter var3 = var0.getParameter();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var8 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var9 = var5.setHelp("hi!");
    var5.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var12 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var14 = var13.getHelp();
    java.lang.String var15 = var13.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var16 = new com.martiansoftware.jsap.SimpleJSAP(var15);
    boolean var17 = var16.messagePrinted();
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var29 = var18.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var30 = new com.martiansoftware.jsap.SimpleJSAP(var29);
    com.martiansoftware.jsap.UnflaggedOption var31 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var12, var17, var29);
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    com.martiansoftware.jsap.UnflaggedOption var50 = var31.setRequired(true);
    boolean var51 = var31.isList();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var61 = var60.getShortFlag();
    com.martiansoftware.jsap.JSAP var62 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var71 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var72 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var73 = var62.getHelp((-1), "hi!");
    java.lang.String[] var74 = new java.lang.String[] { var73};
    com.martiansoftware.jsap.Switch var75 = var60.setDefault(var74);
    char var76 = var75.getShortFlag();
    com.martiansoftware.jsap.UnflaggedOption var77 = var31.setListSeparator(var76);
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var81 = var79.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var83 = var79.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var84 = var31.setList(false);
    var0.setAllowmultipledeclarations(false);
    boolean var86 = var0.getIslist();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == false);

  }

  public void test240() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test4();
    int var5 = var0.countTestCases();
    var0.test7();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);

  }

  public void test241() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var2 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    var2.testLongFlag();
    var2.testShortFlag();
    var2.testShortFlag();

  }

  public void test242() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var16 = var15.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var17 = var3.setScreenWidth(var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var27 = var26.getShortFlag();
    char var28 = var26.getShortFlag();
    java.lang.Character var29 = var26.getShortFlagCharacter();
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException(var29);
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var40 = var39.getShortFlag();
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var46 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var50 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var52 = var41.getHelp((-1), "hi!");
    java.lang.String[] var53 = new java.lang.String[] { var52};
    com.martiansoftware.jsap.Switch var54 = var39.setDefault(var53);
    java.lang.Character var55 = var54.getShortFlagCharacter();
    char var56 = var54.getShortFlag();
    junit.framework.Assert.assertEquals((char)var29, var56);
    com.martiansoftware.jsap.Flagged var58 = var3.getByShortFlag((java.lang.Character)var56);
    com.martiansoftware.jsap.ant.SwitchConfiguration var59 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var60 = var59.getLongflag();
    var59.setShortflag('#');
    java.lang.String var63 = var59.getLongflag();
    var59.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var59.setShortflag('4');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var72 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var76 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var77 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var78 = var77.getShortFlag();
    var59.setShortflag(var78);
    java.lang.String var80 = var59.getLongflag();
    char var81 = var59.getShortflag();
    char var82 = var59.getShortflag();
    com.martiansoftware.jsap.Flagged var83 = var3.getByShortFlag((java.lang.Character)var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + '4'+ "'", var29.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + '4'+ "'", var55.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == null);

  }

  public void test243() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.Character var18 = var17.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = var17.setLongFlag("hi!");
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    com.martiansoftware.jsap.stringparsers.FileStringParser var47 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var47.tearDown();
    boolean var49 = var47.mustBeDirectory();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var50 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var51 = var50.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var52 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var53 = var52.getLongflag();
    var52.setShortflag('#');
    java.lang.String var56 = var52.getLongflag();
    char var57 = var52.getShortflag();
    var50.setShortflag(var57);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!", (com.martiansoftware.jsap.StringParser)var31, var45, var49, var57, "hi!");
    java.lang.String var62 = var61.getUsageName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + '4'+ "'", var18.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "hi!"+ "'", var62.equals("hi!"));

  }

  public void test244() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    java.util.Iterator var9 = var6.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    boolean var15 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var28 = var17.getHelp((-1), "hi!");
    java.lang.String var29 = var13.getHelp(100, "hi!");
    java.lang.String var30 = var6.getHelp(100);
    com.martiansoftware.jsap.Flagged var31 = var3.getByLongFlag(var30);
    boolean var32 = var3.messagePrinted();
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    java.lang.String var35 = var33.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var36 = new com.martiansoftware.jsap.SimpleJSAP(var35);
    com.martiansoftware.jsap.IDMap var37 = var36.getIDMap();
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var49 = var38.getHelp((-1), "hi!");
    java.lang.String var50 = var37.getIDByLongFlag(var49);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.JSAPResult var51 = var3.parse(var49);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var29.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == null);

  }

  public void test245() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var25 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var26 = var25.getParameter();
    boolean var27 = var25.declaredListSeparator();
    char var28 = var25.getShortflag();
    char var29 = var25.getShortflag();
    com.martiansoftware.jsap.Switch var30 = var8.setShortFlag(var29);
    com.martiansoftware.jsap.ant.SwitchConfiguration var31 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var32 = var31.getLongflag();
    char var33 = var31.getShortflag();
    com.martiansoftware.jsap.Switch var34 = var8.setShortFlag(var33);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var35 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var36 = var35.getParameter();
    boolean var37 = var35.declaredListSeparator();
    char var38 = var35.getShortflag();
    boolean var39 = var35.getIslist();
    boolean var40 = var35.hasProperties();
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    boolean var51 = var50.messagePrinted();
    java.lang.String var52 = var50.getHelp();
    com.martiansoftware.jsap.ParseException var53 = new com.martiansoftware.jsap.ParseException(var52);
    java.lang.String[] var54 = new java.lang.String[] { var52};
    com.martiansoftware.jsap.JSAPResult var55 = var44.parse(var54);
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.util.Iterator var58 = var56.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var59 = var56.getIDMap();
    java.lang.String var60 = var56.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var64 = var55.getByte(var60, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var65 = new com.martiansoftware.jsap.QualifiedSwitch(var60);
    boolean var66 = var65.required();
    char var67 = var65.getShortFlag();
    var35.setListseparator(var67);
    junit.framework.Assert.assertEquals(var33, var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var52.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == '\u0000');

  }

  public void test246() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    boolean var3 = var0.getIslist();
    com.martiansoftware.jsap.ant.ParserProperty[] var4 = var0.getParserProperties();
    java.lang.String var5 = var0.getId();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var9.unregisterParameter((com.martiansoftware.jsap.Parameter)var11);
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var22 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var30 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var22, "hi!", true, '4', "", var29);
    java.lang.String var31 = var30.getSyntax();
    java.lang.Character var32 = var30.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var33 = var11.setListSeparator((char)var32);
    boolean var34 = var11.isList();
    var0.setRequired(var34);
    boolean var36 = var0.getGreedy();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var31.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + '4'+ "'", var32.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);

  }

  public void test247() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.String var18 = var17.getSyntax();
    com.martiansoftware.jsap.StringParser var19 = var17.getStringParser();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var29 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var37 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var29, "hi!", true, '4', "", var36);
    com.martiansoftware.jsap.UnspecifiedParameterException var38 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var41 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var40);
    com.martiansoftware.jsap.ParseException var42 = new com.martiansoftware.jsap.ParseException("", (java.lang.Throwable)var41);
    com.martiansoftware.jsap.Parameter var43 = var17.setHelp("");
    java.lang.String var44 = var17.getLongFlag();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var45 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var46 = var45.getParameter();
    boolean var47 = var45.declaredListSeparator();
    char var48 = var45.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var49 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var50 = var49.hasProperties();
    var45.setRequired(var50);
    java.lang.String var52 = var45.getId();
    junit.framework.Assert.assertNotSame((java.lang.Object)var17, (java.lang.Object)var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var18.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == null);

  }

  public void test248() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var13 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var21 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var13, "hi!", true, '4', "", var20);
    java.util.List var23 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var24 = var0.getHelp(1);
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var29 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var30 = var26.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var31 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = var26.setStringParser((com.martiansoftware.jsap.StringParser)var31);
    junit.framework.Assert.assertNotNull(var24, (java.lang.Object)var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "hi!"+ "'", var29.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);

  }

  public void test249() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test7();
    junit.framework.TestResult var5 = var0.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var0);
    var0.test1();
    var0.test2();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);

  }

  public void test250() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var15 = var14.getShortFlag();
    char var16 = var14.getShortFlag();
    char var17 = var14.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var22 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var23 = var19.setHelp("hi!");
    var19.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var26 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var28 = var27.getHelp();
    java.lang.String var29 = var27.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var30 = new com.martiansoftware.jsap.SimpleJSAP(var29);
    boolean var31 = var30.messagePrinted();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var43 = var32.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    com.martiansoftware.jsap.UnflaggedOption var45 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var26, var31, var43);
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var55 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var62 = var61.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var63 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var55, "hi!", true, '4', "", var62);
    com.martiansoftware.jsap.UnflaggedOption var64 = var45.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var65 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var66 = var64.setStringParser((com.martiansoftware.jsap.StringParser)var65);
    char var67 = var64.getListSeparator();
    com.martiansoftware.jsap.Switch var68 = var14.setShortFlag(var67);
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var71 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var72 = var14.setLongFlag("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!");
    junit.framework.Assert.assertEquals("hi!", 0L, 0L);
    java.lang.String[] var77 = new java.lang.String[] { "hi!"};
    com.martiansoftware.jsap.JSAPResult var78 = var3.parse(var77);
    int var79 = var3.getScreenWidth();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "hi!"+ "'", var22.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 80);

  }

  public void test251() throws Throwable {

    com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource var0 = new com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource();
    int var1 = var0.countTestCases();
    var0.testUnexpectedProperties();
    var0.testUnexpectedProperties();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == 1);

  }

  public void test252() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.JSAPResult var43 = var0.parse(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var53 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var61 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var53, "hi!", true, '4', "", var60);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var62 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    java.lang.String var65 = var63.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var66 = new com.martiansoftware.jsap.SimpleJSAP(var65);
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var70 = var68.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var72 = var68.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var74 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var77 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var78 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var62, var65, false, '4', "hi!");
    com.martiansoftware.jsap.Switch var79 = new com.martiansoftware.jsap.Switch(var65);
    java.lang.String var80 = var79.getSyntax();
    var0.setUsage(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "[]"+ "'", var80.equals("[]"));

  }

  public void test253() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var16 = var15.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var17 = var3.setScreenWidth(var16);
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    java.lang.String var20 = var18.getUsage();
    com.martiansoftware.jsap.IDMap var21 = var18.getIDMap();
    java.lang.String var22 = var18.toString();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var24 = var23.getHelp();
    java.lang.String var25 = var23.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    boolean var27 = var26.messagePrinted();
    java.lang.String var28 = var26.getHelp();
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var30 = var29.getHelp();
    java.lang.String var31 = var29.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    boolean var33 = var32.messagePrinted();
    java.lang.String var34 = var32.getHelp();
    com.martiansoftware.jsap.ParseException var35 = new com.martiansoftware.jsap.ParseException(var34);
    java.lang.String[] var36 = new java.lang.String[] { var34};
    com.martiansoftware.jsap.JSAPResult var37 = var26.parse(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var47 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var55 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var47, "hi!", true, '4', "", var54);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var56 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var57 = new java.lang.Object[] { var56};
    java.lang.Object[] var58 = var37.getObjectArray(var54, var57);
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    java.lang.String var61 = var59.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var62 = new com.martiansoftware.jsap.SimpleJSAP(var61);
    boolean var63 = var62.messagePrinted();
    java.lang.String var64 = var62.getHelp();
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    java.lang.String var67 = var65.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var68 = new com.martiansoftware.jsap.SimpleJSAP(var67);
    boolean var69 = var68.messagePrinted();
    java.lang.String var70 = var68.getHelp();
    com.martiansoftware.jsap.ParseException var71 = new com.martiansoftware.jsap.ParseException(var70);
    java.lang.String[] var72 = new java.lang.String[] { var70};
    com.martiansoftware.jsap.JSAPResult var73 = var62.parse(var72);
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var77 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var81 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var82 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var83 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var89 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var90 = var89.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var91 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var83, "hi!", true, '4', "", var90);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var92 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var93 = new java.lang.Object[] { var92};
    java.lang.Object[] var94 = var73.getObjectArray(var90, var93);
    boolean var95 = var37.userSpecified(var90);
    com.martiansoftware.jsap.defaultsources.PropertyDefaultSource var96 = new com.martiansoftware.jsap.defaultsources.PropertyDefaultSource(var22, var95);
    var17.registerDefaultSource((com.martiansoftware.jsap.DefaultSource)var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var28.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var64.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var70.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + ""+ "'", var90.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == false);

  }

  public void test254() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var6 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var7 = var6.getID();
    java.lang.String var8 = var6.getID();
    com.martiansoftware.jsap.JSAPException var9 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var6);
    java.lang.String var10 = var9.toString();
    com.martiansoftware.jsap.Switch var11 = new com.martiansoftware.jsap.Switch(var10);
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var21 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.Switch var25 = var11.setDefault("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "com.martiansoftware.jsap.JSAPException: com.martiansoftware.jsap.IllegalMultipleDeclarationException: Parameter 'hi!' cannot be declared more than once."+ "'", var10.equals("com.martiansoftware.jsap.JSAPException: com.martiansoftware.jsap.IllegalMultipleDeclarationException: Parameter 'hi!' cannot be declared more than once."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);

  }

  public void test255() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.stringparsers.FileStringParser var2 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var2.tearDown();
    var2.setUp();
    boolean var5 = var2.mustExist();
    var2.tearDown();
    boolean var7 = var2.mustBeFile();
    com.martiansoftware.jsap.FlaggedOption var8 = var1.setList(var7);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var7);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);

  }

  public void test256() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var5.addDefault("hi!");
    char var19 = var5.getShortFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == '\u0000');

  }

  public void test257() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    char var11 = var8.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var16 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var17 = var13.setHelp("hi!");
    var13.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var20 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    boolean var25 = var24.messagePrinted();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.UnflaggedOption var39 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var20, var25, var37);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    com.martiansoftware.jsap.UnflaggedOption var58 = var39.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var59 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var60 = var58.setStringParser((com.martiansoftware.jsap.StringParser)var59);
    char var61 = var58.getListSeparator();
    com.martiansoftware.jsap.Switch var62 = var8.setShortFlag(var61);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = var8.setLongFlag("hi!");
    com.martiansoftware.jsap.Switch var67 = new com.martiansoftware.jsap.Switch("hi!");
    com.martiansoftware.jsap.ParseException var68 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.ParseException var69 = new com.martiansoftware.jsap.ParseException((java.lang.Throwable)var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!"+ "'", var16.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);

  }

  public void test258() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    java.lang.String var4 = var1.getID();
    char var5 = var1.getShortFlag();
    java.lang.String var6 = var1.getUsage();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "[<hi!>]"+ "'", var6.equals("[<hi!>]"));

  }

  public void test259() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    char var11 = var8.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var16 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var17 = var13.setHelp("hi!");
    var13.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var20 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    boolean var25 = var24.messagePrinted();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.UnflaggedOption var39 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var20, var25, var37);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    com.martiansoftware.jsap.UnflaggedOption var58 = var39.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var59 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var60 = var58.setStringParser((com.martiansoftware.jsap.StringParser)var59);
    char var61 = var58.getListSeparator();
    com.martiansoftware.jsap.Switch var62 = var8.setShortFlag(var61);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = var8.setLongFlag("hi!");
    com.martiansoftware.jsap.Switch var67 = new com.martiansoftware.jsap.Switch("hi!");
    junit.framework.Assert.assertEquals("hi!", 0L, 0L);
    junit.framework.Assert.assertEquals(0L, 0L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!"+ "'", var16.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);

  }

  public void test260() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DoubleStringParser var0 = com.martiansoftware.jsap.stringparsers.DoubleStringParser.getParser();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var3 = var2.getHelp();
    java.lang.String var4 = var2.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var5 = new com.martiansoftware.jsap.SimpleJSAP(var4);
    boolean var6 = var5.messagePrinted();
    java.lang.String var7 = var5.getHelp();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var9 = var8.getHelp();
    java.lang.String var10 = var8.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var11 = new com.martiansoftware.jsap.SimpleJSAP(var10);
    boolean var12 = var11.messagePrinted();
    java.lang.String var13 = var11.getHelp();
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException(var13);
    java.lang.String[] var15 = new java.lang.String[] { var13};
    com.martiansoftware.jsap.JSAPResult var16 = var5.parse(var15);
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var26 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var27 = var16.getClass("hi!");
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    java.lang.String var30 = var28.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    boolean var32 = var31.messagePrinted();
    java.lang.String var33 = var31.getHelp();
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var35 = var34.getHelp();
    java.lang.String var36 = var34.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var37 = new com.martiansoftware.jsap.SimpleJSAP(var36);
    boolean var38 = var37.messagePrinted();
    java.lang.String var39 = var37.getHelp();
    com.martiansoftware.jsap.ParseException var40 = new com.martiansoftware.jsap.ParseException(var39);
    java.lang.String[] var41 = new java.lang.String[] { var39};
    com.martiansoftware.jsap.JSAPResult var42 = var31.parse(var41);
    com.martiansoftware.jsap.stringparsers.DateStringParser var43 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var43.setUp();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var54 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, "hi!", true, '4', "", var61);
    java.lang.String var63 = var43.getProperty("");
    java.lang.String[] var64 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.JSAPResult var65 = var31.parse(var64);
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var69 = var67.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var71 = var67.setRequired(false);
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var73 = var72.getHelp();
    java.lang.String var74 = var72.getUsage();
    com.martiansoftware.jsap.FlaggedOption var75 = var71.setUsageName(var74);
    java.lang.Exception var76 = var65.getException(var74);
    char[] var77 = var16.getCharArray(var74);
    com.martiansoftware.jsap.JSAP var78 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var79 = var78.getHelp();
    java.lang.String var80 = var78.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var81 = new com.martiansoftware.jsap.SimpleJSAP(var80);
    java.lang.Class var82 = var16.getClass(var80);
    java.lang.String[] var83 = var1.getDefault(var80);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var84 = var0.parse(var80);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var7.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var13.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var33.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var39.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + ""+ "'", var80.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == null);

  }

  public void test261() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var57 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var65 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var57, "hi!", true, '4', "", var64);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var66 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    java.lang.String var69 = var67.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var70 = new com.martiansoftware.jsap.SimpleJSAP(var69);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var74 = var72.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var76 = var72.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var78 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var81 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var66, var69, false, '4', "hi!");
    java.lang.String var85 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var86 = com.martiansoftware.util.StringUtils.wrapToList(var69, 1);
    java.util.List var88 = com.martiansoftware.util.StringUtils.wrapToList(var69, 1);
    char[] var89 = var14.getCharArray(var69);
    com.martiansoftware.jsap.TestUsageString var90 = new com.martiansoftware.jsap.TestUsageString(var69);
    var90.testUsage2();
    var90.testUsage2();
    java.lang.String var93 = var90.getName();
    var90.testUsage1();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi!"+ "'", var85.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ""+ "'", var93.equals(""));

  }

  public void test262() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var25 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var26 = var25.getParameter();
    boolean var27 = var25.declaredListSeparator();
    char var28 = var25.getShortflag();
    char var29 = var25.getShortflag();
    com.martiansoftware.jsap.Switch var30 = var8.setShortFlag(var29);
    java.lang.String var31 = var30.getSyntax();
    com.martiansoftware.jsap.RequiredParameterMissingException var32 = new com.martiansoftware.jsap.RequiredParameterMissingException(var31);
    java.lang.String var33 = var32.getID();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "[--hi!]"+ "'", var31.equals("[--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "[--hi!]"+ "'", var33.equals("[--hi!]"));

  }

  public void test263() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    java.lang.String var20 = var18.getHelp();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    boolean var25 = var24.messagePrinted();
    java.lang.String var26 = var24.getHelp();
    com.martiansoftware.jsap.ParseException var27 = new com.martiansoftware.jsap.ParseException(var26);
    java.lang.String[] var28 = new java.lang.String[] { var26};
    com.martiansoftware.jsap.JSAPResult var29 = var18.parse(var28);
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.lang.String var32 = var30.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var33 = new com.martiansoftware.jsap.SimpleJSAP(var32);
    float[] var34 = var29.getFloatArray(var32);
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var44 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var47 = var29.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var52 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var53 = var49.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var54 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var55 = var54.getID();
    boolean[] var56 = var29.getBooleanArray(var55);
    com.martiansoftware.jsap.SyntaxException var57 = new com.martiansoftware.jsap.SyntaxException(var55);
    java.lang.String var58 = var57.toString();
    java.net.InetAddress[] var59 = var14.getInetAddressArray(var58);
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var20.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var26.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "hi!"+ "'", var52.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!"+ "'", var55.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "com.martiansoftware.jsap.SyntaxException: hi!"+ "'", var58.equals("com.martiansoftware.jsap.SyntaxException: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);

  }

  public void test264() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.Exception var70 = var36.getException("");
    com.martiansoftware.jsap.stringparsers.DateStringParser var71 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var71.setUp();
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var76 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var80 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var81 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var82 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var88 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var89 = var88.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var90 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var82, "hi!", true, '4', "", var89);
    java.lang.String var91 = var71.getProperty("");
    java.lang.String var92 = com.martiansoftware.util.StringUtils.noNull("");
    java.math.BigDecimal var93 = var36.getBigDecimal(var92);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.JSAP var94 = new com.martiansoftware.jsap.JSAP(var92);
      fail("Expected exception of type com.thoughtworks.xstream.io.StreamException");
    } catch (com.thoughtworks.xstream.io.StreamException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + ""+ "'", var89.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + ""+ "'", var92.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == null);

  }

  public void test265() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    var7.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var14 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var31 = var20.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    com.martiansoftware.jsap.UnflaggedOption var33 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var14, var19, var31);
    boolean var34 = var33.isGreedy();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var35 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var36 = var35.getParameter();
    boolean var37 = var35.declaredListSeparator();
    char var38 = var35.getShortflag();
    boolean var39 = var35.getIslist();
    com.martiansoftware.jsap.UnflaggedOption var40 = var33.setRequired(var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.UnflaggedOption var60 = var40.setUsageName("hi!");
    var3.setUsage("hi!");
    com.martiansoftware.jsap.IDMap var62 = var3.getIDMap();
    java.lang.String var63 = var3.getHelp();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));

  }

  public void test266() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    var35.setUsage(var38);
    java.lang.String var41 = var35.toString();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var45.unregisterParameter((com.martiansoftware.jsap.Parameter)var47);
    var35.unregisterParameter((com.martiansoftware.jsap.Parameter)var47);
    com.martiansoftware.jsap.IDMap var50 = var35.getIDMap();
    com.martiansoftware.jsap.ant.ParserProperty var51 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var61 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var69 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var61, "hi!", true, '4', "", var68);
    java.util.List var71 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    var51.setName("");
    com.martiansoftware.jsap.TestOption var73 = new com.martiansoftware.jsap.TestOption();
    int var74 = var73.countTestCases();
    int var75 = var73.countTestCases();
    java.util.List var76 = com.martiansoftware.util.StringUtils.wrapToList("", var75);
    java.lang.String var77 = var50.getIDByLongFlag("");
    java.util.Iterator var78 = var50.idIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);

  }

  public void test267() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    java.lang.String var5 = var0.getId();
    com.martiansoftware.jsap.Parameter var6 = var0.getParameter();
    boolean var7 = var0.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var11 = var9.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var13 = var9.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var17 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var21 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var22 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var23 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var13.addDefault("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var28 = var27.getHelp();
    java.lang.String var29 = var27.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var30 = new com.martiansoftware.jsap.SimpleJSAP(var29);
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var30.unregisterParameter((com.martiansoftware.jsap.Parameter)var32);
    java.lang.String var34 = var32.getSyntax();
    java.lang.String[] var35 = new java.lang.String[] { var34};
    com.martiansoftware.jsap.FlaggedOption var36 = var13.setDefault(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = var13.setListSeparator('a');
    var0.setShortflag('a');
    java.lang.String var40 = var0.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var50 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var53 = new com.martiansoftware.jsap.TestOption();
    int var54 = var53.countTestCases();
    int var55 = var53.countTestCases();
    java.lang.String var56 = com.martiansoftware.util.StringUtils.padRight("hi!", var55);
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    java.lang.String var59 = var57.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var60 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    boolean var61 = var60.messagePrinted();
    java.lang.String var62 = var60.getHelp();
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    java.lang.String var65 = var63.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var66 = new com.martiansoftware.jsap.SimpleJSAP(var65);
    boolean var67 = var66.messagePrinted();
    java.lang.String var68 = var66.getHelp();
    com.martiansoftware.jsap.ParseException var69 = new com.martiansoftware.jsap.ParseException(var68);
    java.lang.String[] var70 = new java.lang.String[] { var68};
    com.martiansoftware.jsap.JSAPResult var71 = var60.parse(var70);
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var75 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var79 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var80 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var81 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var82 = var71.getClass("hi!");
    java.lang.String var85 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var86 = var71.getURLArray(var85);
    com.martiansoftware.jsap.JSAP var87 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var88 = var87.getHelp();
    java.util.Iterator var89 = var87.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var90 = var87.getIDMap();
    java.lang.String var91 = var87.getHelp();
    java.lang.String var92 = var87.toString();
    java.lang.Object[] var93 = var71.getObjectArray(var92);
    com.martiansoftware.jsap.SimpleJSAP var94 = new com.martiansoftware.jsap.SimpleJSAP(var56, var92);
    var0.setId(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "[<hi!>]"+ "'", var34.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "hi! "+ "'", var56.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var62.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var68.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi!"+ "'", var85.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + ""+ "'", var88.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + ""+ "'", var91.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + ""+ "'", var92.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);

  }

  public void test268() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var1 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var2 = var1.getParameter();
    boolean var3 = var1.declaredListSeparator();
    boolean var4 = var1.getIslist();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var9 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var10 = var6.setHelp("hi!");
    var6.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var13 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var15 = var14.getHelp();
    java.lang.String var16 = var14.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var17 = new com.martiansoftware.jsap.SimpleJSAP(var16);
    boolean var18 = var17.messagePrinted();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var30 = var19.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    com.martiansoftware.jsap.UnflaggedOption var32 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var13, var18, var30);
    com.martiansoftware.jsap.ant.SwitchConfiguration var33 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var34 = var33.getLongflag();
    var33.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.Switch var55 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var1.setListseparator('#');
    com.martiansoftware.jsap.ant.DefaultValue var57 = new com.martiansoftware.jsap.ant.DefaultValue();
    java.lang.String var58 = var57.getValue();
    var1.addConfiguredDefault(var57);
    var0.addConfiguredDefault(var57);
    com.martiansoftware.jsap.ant.SwitchConfiguration var61 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var62 = var61.getLongflag();
    com.martiansoftware.jsap.ant.SwitchConfiguration var63 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var64 = var63.getLongflag();
    com.martiansoftware.jsap.ant.DefaultValue var65 = new com.martiansoftware.jsap.ant.DefaultValue();
    var63.addConfiguredDefault(var65);
    var61.addConfiguredDefault(var65);
    var0.addConfiguredDefault(var65);
    boolean var69 = var0.hasProperties();
    com.martiansoftware.jsap.Parameter var70 = var0.getParameter();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);

  }

  public void test269() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    com.martiansoftware.jsap.Parameter var2 = var0.getParameter();
    java.lang.String[] var3 = var2.getDefault();
    java.lang.String var4 = var2.getUsage();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "[<null>]"+ "'", var4.equals("[<null>]"));

  }

  public void test270() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.util.Iterator var17 = var15.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var18 = var15.getIDMap();
    java.lang.String var19 = var15.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var23 = var14.getByte(var19, (byte)(-1));
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var19);
    boolean var25 = var24.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var30 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var31 = var27.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var32 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = var27.setStringParser((com.martiansoftware.jsap.StringParser)var32);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var43 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var46 = var33.setHelp("hi!");
    java.lang.String var47 = var46.getUsageName();
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var48 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser(var47);
    com.martiansoftware.jsap.JSAPResult var49 = var24.parse(var47);
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    var52.testLongFlag();
    var52.testLongFlag();
    var52.testShortFlag();
    var52.testShortFlag();
    java.lang.String var57 = var52.toString();
    java.util.Date[] var58 = var49.getDateArray(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "hi!"+ "'", var30.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "hi!"+ "'", var47.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "hi!(com.martiansoftware.jsap.TestFlaggedOption)"+ "'", var57.equals("hi!(com.martiansoftware.jsap.TestFlaggedOption)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);

  }

  public void test271() throws Throwable {

    com.martiansoftware.jsap.stringparsers.StringStringParser var0 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.UnspecifiedParameterException var19 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    java.lang.Object var20 = var0.parse("");
    var0.setUp();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));

  }

  public void test272() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    java.lang.String var8 = com.martiansoftware.util.StringUtils.noNull("");
    com.martiansoftware.jsap.TestUsageString var9 = new com.martiansoftware.jsap.TestUsageString("");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));

  }

  public void test273() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var38 = var34.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var39 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var40 = var39.getID();
    boolean[] var41 = var14.getBooleanArray(var40);
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    boolean var46 = var45.messagePrinted();
    java.lang.String var47 = var45.getHelp();
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var49 = var48.getHelp();
    java.lang.String var50 = var48.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var51 = new com.martiansoftware.jsap.SimpleJSAP(var50);
    boolean var52 = var51.messagePrinted();
    java.lang.String var53 = var51.getHelp();
    com.martiansoftware.jsap.ParseException var54 = new com.martiansoftware.jsap.ParseException(var53);
    java.lang.String[] var55 = new java.lang.String[] { var53};
    com.martiansoftware.jsap.JSAPResult var56 = var45.parse(var55);
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    java.lang.String var59 = var57.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var60 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    float[] var61 = var56.getFloatArray(var59);
    java.math.BigInteger[] var62 = var14.getBigIntegerArray(var59);
    junit.framework.Assert.assertNotNull((java.lang.Object)var14);
    junit.framework.Assert.assertNotNull((java.lang.Object)var14);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String[] var74 = var73.getDefault();
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    java.lang.String var77 = var75.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var78 = new com.martiansoftware.jsap.SimpleJSAP(var77);
    boolean var79 = var78.messagePrinted();
    java.lang.String var80 = var78.getHelp();
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var84 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var88 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var89 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var90 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var91 = var90.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var92 = var78.setScreenWidth(var91);
    java.lang.String var93 = var78.getUsage();
    com.martiansoftware.jsap.Switch var94 = var73.setDefault(var93);
    double[] var95 = var14.getDoubleArray(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!"+ "'", var40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var47.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var53.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var80.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + "[--help]"+ "'", var93.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);

  }

  public void test274() throws Throwable {

    com.martiansoftware.jsap.xml.JSAPConfig var0 = new com.martiansoftware.jsap.xml.JSAPConfig();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var4 = var3.getHelp();
    java.lang.String var5 = var3.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var6 = new com.martiansoftware.jsap.SimpleJSAP(var5);
    boolean var7 = var6.messagePrinted();
    var6.finalize();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var13 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var14 = var10.setHelp("hi!");
    var10.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var17 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    java.lang.String var20 = var18.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var21 = new com.martiansoftware.jsap.SimpleJSAP(var20);
    boolean var22 = var21.messagePrinted();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var34 = var23.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    com.martiansoftware.jsap.UnflaggedOption var36 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var17, var22, var34);
    boolean var37 = var36.isGreedy();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var38 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var39 = var38.getParameter();
    boolean var40 = var38.declaredListSeparator();
    char var41 = var38.getShortflag();
    boolean var42 = var38.getIslist();
    com.martiansoftware.jsap.UnflaggedOption var43 = var36.setRequired(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var53 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var61 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var53, "hi!", true, '4', "", var60);
    com.martiansoftware.jsap.TestFlaggedOption var62 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.UnflaggedOption var63 = var43.setUsageName("hi!");
    var6.setUsage("hi!");
    var0.setUsage("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "hi!"+ "'", var13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);

  }

  public void test275() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var12 = new com.martiansoftware.jsap.TestOption();
    int var13 = var12.countTestCases();
    int var14 = var12.countTestCases();
    java.lang.String var15 = com.martiansoftware.util.StringUtils.padRight("hi!", var14);
    com.martiansoftware.jsap.TestUsageString var16 = new com.martiansoftware.jsap.TestUsageString(var15);
    com.martiansoftware.jsap.SimpleJSAP var17 = new com.martiansoftware.jsap.SimpleJSAP(var15);
    int var18 = var17.getScreenWidth();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi! "+ "'", var15.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 80);

  }

  public void test276() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.Exception var70 = var36.getException("");
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var75 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var76 = var72.setHelp("hi!");
    double[] var77 = var36.getDoubleArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.stringparsers.FileStringParser var79 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    var79.setUp();
    boolean var81 = var79.mustBeFile();
    com.martiansoftware.jsap.FlaggedOption var82 = var78.setAllowMultipleDeclarations(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "hi!"+ "'", var75.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);

  }

  public void test277() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.Defaults var3 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var4 = var3.idIterator();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var14 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.lang.Character var36 = var35.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var39 = var35.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var40 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var41 = new java.lang.String[] { "hi!"};
    var3.addDefault("hi!", var41);
    java.lang.String var43 = com.martiansoftware.util.StringUtils.noNull("hi!");
    var0.setId("hi!");
    char var45 = var0.getShortflag();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var50 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var51 = var47.setHelp("hi!");
    boolean var52 = var47.allowMultipleDeclarations();
    java.lang.Character var53 = var47.getShortFlagCharacter();
    junit.framework.Assert.assertNotSame((java.lang.Object)var0, (java.lang.Object)var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + '4'+ "'", var36.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "hi!"+ "'", var50.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == null);

  }

  public void test278() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    java.lang.String[] var1 = var0.getDefaults();
    boolean var2 = var0.hasProperties();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);

  }

  public void test279() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var26 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    char var27 = var26.getShortFlag();
    java.lang.String var28 = var26.getID();
    junit.framework.Assert.assertNotNull((java.lang.Object)var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));

  }

  public void test280() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.Character var18 = var17.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = var17.setLongFlag("hi!");
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var40 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var48 = var46.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var50 = var46.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var40, var43, false, '4', "hi!");
    com.martiansoftware.jsap.FlaggedOption var57 = var17.setLongFlag("hi!");
    java.lang.String[] var58 = var57.getDefault();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + '4'+ "'", var18.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);

  }

  public void test281() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test3();
    var0.test10();
    var0.test8();

  }

  public void test282() throws Throwable {

    com.martiansoftware.jsap.TestJSAPConfiguration var0 = new com.martiansoftware.jsap.TestJSAPConfiguration();
    var0.testConfigurationGymnastics();
    var0.testConfigurationGymnastics();
    com.martiansoftware.jsap.TestDefaults var3 = new com.martiansoftware.jsap.TestDefaults();
    var3.setUp();
    var3.testSimpleDefault();
    var3.setUp();
    var3.testOneLevelDefaults();
    var3.tearDown();
    com.martiansoftware.jsap.TestParser var9 = new com.martiansoftware.jsap.TestParser();
    var9.testParser();
    var9.testParser();
    var9.testMultipleDeclarations();
    junit.framework.TestResult var13 = var9.run();
    var3.run(var13);
    var0.run(var13);
    var0.testConfigurationGymnastics();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);

  }

  public void test283() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    java.util.Iterator var3 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var8 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var9 = var5.setHelp("hi!");
    var5.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var12 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var14 = var13.getHelp();
    java.lang.String var15 = var13.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var16 = new com.martiansoftware.jsap.SimpleJSAP(var15);
    boolean var17 = var16.messagePrinted();
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var29 = var18.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var30 = new com.martiansoftware.jsap.SimpleJSAP(var29);
    com.martiansoftware.jsap.UnflaggedOption var31 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var12, var17, var29);
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    com.martiansoftware.jsap.UnflaggedOption var50 = var31.setRequired(true);
    java.lang.String var51 = var31.getID();
    com.martiansoftware.jsap.Parameter var52 = var0.getByID(var51);
    com.martiansoftware.jsap.TestOption var54 = new com.martiansoftware.jsap.TestOption();
    int var55 = var54.countTestCases();
    var54.testParsing();
    java.lang.String var57 = var54.toString();
    java.lang.String var58 = var0.getHelp(0, var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "null(com.martiansoftware.jsap.TestOption)"+ "'", var57.equals("null(com.martiansoftware.jsap.TestOption)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));

  }

  public void test284() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var7 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var8 = var7.getID();
    java.lang.Object var9 = var0.parse(var8);
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var14 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var15 = var11.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var16 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var17 = var11.setStringParser((com.martiansoftware.jsap.StringParser)var16);
    boolean var18 = var17.required();
    com.martiansoftware.jsap.stringparsers.FileStringParser var19 = var0.setMustBeDirectory(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!"+ "'", var14.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);

  }

  public void test285() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String[] var19 = var18.getDefault();
    com.martiansoftware.jsap.stringparsers.LongStringParser var20 = com.martiansoftware.jsap.stringparsers.LongStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var21 = var18.setStringParser((com.martiansoftware.jsap.StringParser)var20);
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    java.lang.Character var40 = var39.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var43 = var39.setLongFlag("hi!");
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var53 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var61 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var53, "hi!", true, '4', "", var60);
    com.martiansoftware.jsap.JSAP var62 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var63 = var62.getHelp();
    java.lang.String var64 = var62.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var65 = new com.martiansoftware.jsap.SimpleJSAP(var64);
    boolean var66 = var65.messagePrinted();
    java.lang.String var67 = var65.getHelp();
    com.martiansoftware.jsap.ParseException var68 = new com.martiansoftware.jsap.ParseException(var67);
    com.martiansoftware.jsap.stringparsers.FileStringParser var69 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var69.tearDown();
    boolean var71 = var69.mustBeDirectory();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var72 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var73 = var72.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var74 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var75 = var74.getLongflag();
    var74.setShortflag('#');
    java.lang.String var78 = var74.getLongflag();
    char var79 = var74.getShortflag();
    var72.setShortflag(var79);
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!", (com.martiansoftware.jsap.StringParser)var53, var67, var71, var79, "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var84 = var20.parse(var67);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + '4'+ "'", var40.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var67.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == '#');

  }

  public void test286() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var33 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var34 = new java.lang.Object[] { var33};
    java.lang.Object[] var35 = var14.getObjectArray(var31, var34);
    com.martiansoftware.jsap.stringparsers.DateStringParser var36 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var36.setUp();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var47 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var55 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var47, "hi!", true, '4', "", var54);
    java.lang.String var56 = var36.getProperty("");
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var60 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var64 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var65 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var66 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var73 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var77 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var78 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var79 = var36.getProperty("hi!", "hi!");
    com.martiansoftware.jsap.UnflaggedOption var80 = new com.martiansoftware.jsap.UnflaggedOption(var79);
    java.lang.Object[] var81 = var14.getObjectArray(var79);
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      com.martiansoftware.jsap.JSAP var82 = new com.martiansoftware.jsap.JSAP(var79);
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test287() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    com.martiansoftware.jsap.stringparsers.DateStringParser var4 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var9 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var10 = var6.setHelp("hi!");
    var6.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var13 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var15 = var14.getHelp();
    java.lang.String var16 = var14.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var17 = new com.martiansoftware.jsap.SimpleJSAP(var16);
    boolean var18 = var17.messagePrinted();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var30 = var19.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    com.martiansoftware.jsap.UnflaggedOption var32 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var13, var18, var30);
    com.martiansoftware.jsap.ant.SwitchConfiguration var33 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var34 = var33.getLongflag();
    var33.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.Switch var55 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var4.setProperty("", "hi!");
    boolean var66 = var3.idExists("hi!");
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var71 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var72 = var68.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var73 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var74 = var68.setStringParser((com.martiansoftware.jsap.StringParser)var73);
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var78 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var82 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var83 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var84 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var87 = var74.setHelp("hi!");
    java.lang.String var88 = var3.getIDByLongFlag("hi!");
    java.util.Iterator var89 = var3.idIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "hi!"+ "'", var71.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);

  }

  public void test288() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    boolean var3 = var0.getIslist();
    com.martiansoftware.jsap.ant.ParserProperty[] var4 = var0.getParserProperties();
    char var5 = var0.getListseparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == ':');

  }

  public void test289() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.String var18 = var17.getSyntax();
    com.martiansoftware.jsap.StringParser var19 = var17.getStringParser();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var29 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var37 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var29, "hi!", true, '4', "", var36);
    com.martiansoftware.jsap.UnspecifiedParameterException var38 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var41 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var40);
    com.martiansoftware.jsap.ParseException var42 = new com.martiansoftware.jsap.ParseException("", (java.lang.Throwable)var41);
    com.martiansoftware.jsap.Parameter var43 = var17.setHelp("");
    java.lang.String var44 = var17.getLongFlag();
    junit.framework.Assert.assertNotNull(var44, (java.lang.Object)1.0d);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    var49.testLongFlag();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var54 = var52.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var56 = var52.setRequired(false);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var44, (java.lang.Object)var49, (java.lang.Object)false);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var18.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);

  }

  public void test290() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser("hi!");
    var51.testFloatRGB();
    var51.testHexRGB();
    var51.testHexRGB();
    var51.testHexRGB();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);

  }

  public void test291() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getHelp();
    java.lang.String var5 = var0.toString();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var17 = var6.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    java.lang.String var46 = var45.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var46);
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption(var46);
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch(var17, '4', var46);
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var59 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var67 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var59, "hi!", true, '4', "", var66);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var76 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var77 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals(var17, "hi!", "hi!");
    var0.setHelp(var17);
    com.martiansoftware.jsap.JSAP var80 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var85 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var89 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var90 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var91 = var80.getHelp((-1), "hi!");
    var0.setUsage(var91);
    java.lang.String var93 = com.martiansoftware.util.StringUtils.noNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var46.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + ""+ "'", var91.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ""+ "'", var93.equals(""));

  }

  public void test292() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DoubleStringParser var0 = new com.martiansoftware.jsap.stringparsers.DoubleStringParser();
    com.martiansoftware.jsap.ant.SwitchConfiguration var1 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var2 = var1.getLongflag();
    var1.setShortflag('#');
    java.lang.String var5 = var1.getLongflag();
    var1.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var1.setShortflag('4');
    java.lang.String var11 = var1.getId();
    com.martiansoftware.jsap.Parameter var12 = var1.getParameter();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var22 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var30 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var22, "hi!", true, '4', "", var29);
    var1.setDefault("hi!");
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.util.Iterator var34 = var32.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var35 = var32.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    java.lang.String var54 = var53.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var54);
    boolean var56 = var35.idExists(var54);
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var57 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser(var54);
    com.martiansoftware.jsap.SimpleJSAP var58 = new com.martiansoftware.jsap.SimpleJSAP("hi!", var54);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var59 = var0.parse(var54);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var54.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);

  }

  public void test293() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    java.lang.String var28 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var29 = var14.getURLArray(var28);
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.util.Iterator var32 = var30.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var33 = var30.getIDMap();
    java.lang.String var34 = var30.getHelp();
    java.lang.String var35 = var30.toString();
    java.lang.Object[] var36 = var14.getObjectArray(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var46 = var45.getShortFlag();
    char var47 = var45.getShortFlag();
    java.lang.Character var48 = var45.getShortFlagCharacter();
    java.lang.String var49 = var45.getSyntax();
    long var51 = var14.getLong(var49, (-1L));
    com.martiansoftware.jsap.TestCommandLineTokenizer var52 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var52.test7();
    var52.test2();
    var52.test1();
    var52.test7();
    java.lang.String var57 = var52.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      short var58 = var14.getShort(var57);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + '4'+ "'", var48.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "[-4|--hi!]"+ "'", var49.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == (-1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "null(com.martiansoftware.jsap.TestCommandLineTokenizer)"+ "'", var57.equals("null(com.martiansoftware.jsap.TestCommandLineTokenizer)"));

  }

  public void test294() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var4 = var2.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var6 = var2.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var16 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var6.addDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var24 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var25 = var21.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var26 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var27 = var21.setStringParser((com.martiansoftware.jsap.StringParser)var26);
    com.martiansoftware.jsap.FlaggedOption var28 = var6.setStringParser((com.martiansoftware.jsap.StringParser)var26);
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var38 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var46 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var38, "hi!", true, '4', "", var45);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var47 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var49 = var48.getHelp();
    java.lang.String var50 = var48.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var51 = new com.martiansoftware.jsap.SimpleJSAP(var50);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var55 = var53.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var57 = var53.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var62 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var63 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var47, var50, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    java.lang.String var66 = var64.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var67 = new com.martiansoftware.jsap.SimpleJSAP(var66);
    boolean var68 = var67.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var69 = var63.setRequired(var68);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var70 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var71 = var70.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var72 = var63.setAllowMultipleDeclarations(var71);
    com.martiansoftware.jsap.FlaggedOption var73 = var6.setAllowMultipleDeclarations(var71);
    com.martiansoftware.jsap.stringparsers.FileStringParser var74 = var0.setMustBeFile(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "hi!"+ "'", var24.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);

  }

  public void test295() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var33 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var34 = new java.lang.Object[] { var33};
    java.lang.Object[] var35 = var14.getObjectArray(var31, var34);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var45 = var44.getShortFlag();
    char var46 = var44.getShortFlag();
    java.lang.Character var47 = var44.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var57 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var60 = var44.setDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var70 = var69.getShortFlag();
    char var71 = var69.getShortFlag();
    java.lang.Character var72 = var69.getShortFlagCharacter();
    java.lang.String var73 = var69.getSyntax();
    java.lang.Object[] var74 = new java.lang.Object[] { var69};
    java.lang.Object[] var75 = var14.getObjectArray("hi!", var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + '4'+ "'", var47.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + '4'+ "'", var72.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "[-4|--hi!]"+ "'", var73.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);

  }

  public void test296() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    var0.setUp();
    com.martiansoftware.jsap.JSAP var4 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var5 = var4.getHelp();
    java.lang.String var6 = var4.getUsage();
    com.martiansoftware.jsap.IDMap var7 = var4.getIDMap();
    com.martiansoftware.jsap.stringparsers.DateStringParser var8 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var13 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var14 = var10.setHelp("hi!");
    var10.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var17 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    java.lang.String var20 = var18.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var21 = new com.martiansoftware.jsap.SimpleJSAP(var20);
    boolean var22 = var21.messagePrinted();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var34 = var23.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    com.martiansoftware.jsap.UnflaggedOption var36 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var17, var22, var34);
    com.martiansoftware.jsap.ant.SwitchConfiguration var37 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var38 = var37.getLongflag();
    var37.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var68 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var8.setProperty("", "hi!");
    boolean var70 = var7.idExists("hi!");
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var75 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var76 = var72.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var77 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var78 = var72.setStringParser((com.martiansoftware.jsap.StringParser)var77);
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var86 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var87 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var88 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var91 = var78.setHelp("hi!");
    java.lang.String var92 = var7.getIDByLongFlag("hi!");
    java.lang.Object var93 = var0.parse("hi!");
    var0.setUp();
    var0.setUp();
    var0.setUp();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "hi!"+ "'", var13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "hi!"+ "'", var75.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);

  }

  public void test297() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    java.lang.String var28 = var26.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var29 = new com.martiansoftware.jsap.SimpleJSAP(var28);
    com.martiansoftware.jsap.IDMap var30 = var29.getIDMap();
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var42 = var31.getHelp((-1), "hi!");
    java.lang.String var43 = var30.getIDByLongFlag(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var53 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var61 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var53, "hi!", true, '4', "", var60);
    java.util.List var63 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var64 = var30.getIDByLongFlag("");
    long[] var65 = var14.getLongArray("");
    boolean var66 = var14.success();
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var70 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var74 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var75 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var76 = new com.martiansoftware.jsap.TestSwitch("hi!");
    java.awt.Color[] var77 = var14.getColorArray("hi!");
    java.util.Iterator var78 = var14.getErrorMessageIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);

  }

  public void test298() throws Throwable {

    com.martiansoftware.jsap.xml.JSAPConfig var0 = new com.martiansoftware.jsap.xml.JSAPConfig();
    java.lang.String var1 = var0.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var2 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    java.lang.String var3 = var2.getStringparser();
    com.martiansoftware.jsap.Defaults var4 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var5 = var4.idIterator();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var17 = var6.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.lang.String[] var36 = new java.lang.String[] { var34};
    var4.addDefault(var17, var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var47 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var55 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var56 = var52.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var57 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var58 = var57.getID();
    java.lang.String[] var59 = new java.lang.String[] { var58};
    var4.addDefault("hi!", var59);
    var2.setId("hi!");
    var0.setUsage("hi!");
    java.lang.String var63 = var0.getUsage();
    com.martiansoftware.jsap.ParseException var64 = new com.martiansoftware.jsap.ParseException(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!"+ "'", var55.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "hi!"+ "'", var58.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "hi!"+ "'", var63.equals("hi!"));

  }

  public void test299() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntegerStringParser var0 = new com.martiansoftware.jsap.stringparsers.IntegerStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    float[] var20 = var15.getFloatArray(var18);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var21 = var0.parse(var18);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);

  }

  public void test300() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    java.lang.String var7 = var5.getSyntax();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var9 = var8.getHelp();
    java.lang.String var10 = var8.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var11 = new com.martiansoftware.jsap.SimpleJSAP(var10);
    boolean var12 = var11.messagePrinted();
    java.lang.String var13 = var11.getHelp();
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException(var13);
    com.martiansoftware.jsap.FlaggedOption var15 = var5.setUsageName(var13);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var16 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var17 = var16.hasProperties();
    java.lang.String var18 = var16.getStringparser();
    boolean var19 = var16.getIslist();
    com.martiansoftware.jsap.ant.ParserProperty[] var20 = var16.getParserProperties();
    java.lang.String var21 = var16.getId();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var23 = var22.getHelp();
    java.lang.String var24 = var22.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var25 = new com.martiansoftware.jsap.SimpleJSAP(var24);
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var25.unregisterParameter((com.martiansoftware.jsap.Parameter)var27);
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var38 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var46 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var38, "hi!", true, '4', "", var45);
    java.lang.String var47 = var46.getSyntax();
    java.lang.Character var48 = var46.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var49 = var27.setListSeparator((char)var48);
    boolean var50 = var27.isList();
    var16.setRequired(var50);
    com.martiansoftware.jsap.FlaggedOption var52 = var15.setList(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "[<hi!>]"+ "'", var7.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var13.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var47.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + '4'+ "'", var48.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);

  }

  public void test301() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var6 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var7 = var1.setStringParser((com.martiansoftware.jsap.StringParser)var6);
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var17 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var20 = var7.setHelp("hi!");
    java.lang.String var21 = var20.getUsageName();
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var22 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser(var21);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var21, 10L, 1L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "hi!"+ "'", var21.equals("hi!"));

  }

  public void test302() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.JSAPResult var43 = var0.parse(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var53 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var56 = new com.martiansoftware.jsap.TestOption();
    int var57 = var56.countTestCases();
    int var58 = var56.countTestCases();
    java.lang.String var59 = com.martiansoftware.util.StringUtils.padRight("hi!", var58);
    com.martiansoftware.jsap.JSAPResult var60 = var0.parse(var59);
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var62 = var61.getHelp();
    java.lang.String var63 = var61.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var64 = new com.martiansoftware.jsap.SimpleJSAP(var63);
    boolean var65 = var64.messagePrinted();
    java.lang.String var66 = var64.getHelp();
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    java.lang.String var69 = var67.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var70 = new com.martiansoftware.jsap.SimpleJSAP(var69);
    boolean var71 = var70.messagePrinted();
    java.lang.String var72 = var70.getHelp();
    com.martiansoftware.jsap.ParseException var73 = new com.martiansoftware.jsap.ParseException(var72);
    java.lang.String[] var74 = new java.lang.String[] { var72};
    com.martiansoftware.jsap.JSAPResult var75 = var64.parse(var74);
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var79 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var83 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var84 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var85 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var86 = var75.getClass("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var87 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var88 = var87.getID();
    com.martiansoftware.jsap.JSAPResult var89 = var0.parse(var88);
    com.martiansoftware.jsap.IDMap var90 = var0.getIDMap();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi! "+ "'", var59.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var66.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var72.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + "hi!"+ "'", var88.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);

  }

  public void test303() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser("hi!");
    var51.testFloatRGB();
    var51.testHexRGB();
    var51.testIntegerRGB();
    var51.testHexRGB();
    var51.testByName();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);

  }

  public void test304() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);

  }

  public void test305() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.UnspecifiedParameterException var18 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    java.lang.String var19 = var18.getID();
    java.lang.String var20 = var18.getID();
    java.lang.String var21 = var18.getID();
    java.lang.String var22 = var18.getID();
    com.martiansoftware.jsap.ParseException var23 = new com.martiansoftware.jsap.ParseException(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));

  }

  public void test306() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var38 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var46 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var38, "hi!", true, '4', "", var45);
    com.martiansoftware.jsap.UnflaggedOption var47 = var28.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var51 = var49.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var52 = var28.setList(false);
    com.martiansoftware.jsap.stringparsers.FileStringParser var53 = var0.setMustBeFile(false);
    var0.tearDown();
    var0.tearDown();
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var65 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var65, "hi!", true, '4', "", var72);
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String[] var75 = var74.getDefault();
    com.martiansoftware.jsap.StringParser var76 = var74.getStringParser();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var77 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var78 = var77.hasProperties();
    com.martiansoftware.jsap.Parameter var79 = var77.getParameter();
    boolean var80 = var77.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var81 = var74.setRequired(var80);
    com.martiansoftware.jsap.stringparsers.FileStringParser var82 = var0.setMustExist(var80);
    java.lang.String var85 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.lang.Object var86 = var82.parse(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi!"+ "'", var85.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);

  }

  public void test307() throws Throwable {

    com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource var0 = new com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource();
    var0.testUnexpectedProperties();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var19.getSyntax();
    com.martiansoftware.jsap.TestFlaggedOption var21 = new com.martiansoftware.jsap.TestFlaggedOption(var20);
    var0.setName(var20);
    com.martiansoftware.jsap.UnspecifiedParameterException var23 = new com.martiansoftware.jsap.UnspecifiedParameterException(var20);
    java.lang.String var24 = var23.getID();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var20.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var24.equals("(-4|--)[:<hi!>]"));

  }

  public void test308() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    java.lang.String var17 = var4.getIDByLongFlag(var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var36 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var44 = var42.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var46 = var42.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var52 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var36, var39, false, '4', "hi!");
    java.lang.String var55 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var56 = com.martiansoftware.util.StringUtils.wrapToList(var39, 1);
    java.util.List var58 = com.martiansoftware.util.StringUtils.wrapToList(var39, 1);
    com.martiansoftware.jsap.SyntaxException var59 = new com.martiansoftware.jsap.SyntaxException(var39);
    boolean var60 = var4.idExists(var39);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var70 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var78 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, "hi!", true, '4', "", var77);
    java.lang.String var79 = var78.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var79);
    boolean var81 = var4.idExists(var79);
    java.util.Iterator var82 = var4.idIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!"+ "'", var55.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var79.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);

  }

  public void test309() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var9.testSwitchParse();
    var9.testLongFlag();
    var9.testID();
    var9.testSwitchParse();
    var9.testID();
    var9.testSwitchParse();

  }

  public void test310() throws Throwable {

    com.martiansoftware.jsap.stringparsers.InetAddressStringParser var0 = new com.martiansoftware.jsap.stringparsers.InetAddressStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    boolean var21 = var19.messagePrinted();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var34 = var23.getHelp((-1), "hi!");
    java.lang.String var35 = var19.getHelp(100, "hi!");
    java.util.Date[] var36 = var15.getDateArray(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    java.lang.Class[] var55 = var15.getClassArray("");
    com.martiansoftware.jsap.JSAPException var56 = new com.martiansoftware.jsap.JSAPException("");
    java.lang.Object var57 = var0.parse("");
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    java.lang.String var60 = var58.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    boolean var62 = var61.messagePrinted();
    java.lang.String var63 = var61.getHelp();
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    java.lang.String var66 = var64.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var67 = new com.martiansoftware.jsap.SimpleJSAP(var66);
    boolean var68 = var67.messagePrinted();
    java.lang.String var69 = var67.getHelp();
    com.martiansoftware.jsap.ParseException var70 = new com.martiansoftware.jsap.ParseException(var69);
    java.lang.String[] var71 = new java.lang.String[] { var69};
    com.martiansoftware.jsap.JSAPResult var72 = var61.parse(var71);
    com.martiansoftware.jsap.JSAP var73 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var74 = var73.getHelp();
    java.lang.String var75 = var73.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var76 = new com.martiansoftware.jsap.SimpleJSAP(var75);
    float[] var77 = var72.getFloatArray(var75);
    com.martiansoftware.jsap.JSAPException var78 = new com.martiansoftware.jsap.JSAPException(var75);
    java.lang.Object var79 = var0.parse(var75);
    java.lang.String var80 = com.martiansoftware.util.StringUtils.noNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var35.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var63.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var69.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + ""+ "'", var80.equals(""));

  }

  public void test311() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var32 = var30.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var33 = var27.setList(false);
    java.lang.String var34 = var33.getUsageName();
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    java.lang.String var40 = var38.getHelp();
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.ParseException var47 = new com.martiansoftware.jsap.ParseException(var46);
    java.lang.String[] var48 = new java.lang.String[] { var46};
    com.martiansoftware.jsap.JSAPResult var49 = var38.parse(var48);
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    java.lang.String var52 = var50.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var52);
    float[] var54 = var49.getFloatArray(var52);
    boolean var55 = var49.success();
    com.martiansoftware.jsap.UnflaggedOption var56 = var33.setList(var55);
    java.lang.String var57 = var33.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var40.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "[<>]"+ "'", var57.equals("[<>]"));

  }

  public void test312() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    java.lang.String var15 = var3.getUsage();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var16 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var17 = var16.getParameter();
    java.lang.String var18 = var16.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var23 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var24 = var20.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var25 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var26 = var25.getID();
    java.lang.String var27 = var25.getID();
    var16.setLongflag(var27);
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var31 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var32 = var31.getLongflag();
    var31.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var35 = var30.setListSeparator('#');
    boolean var36 = var35.isList();
    var16.setAllowmultipledeclarations(var36);
    boolean var38 = var16.hasProperties();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var39 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser(var15, var38);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "[--help]"+ "'", var15.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!"+ "'", var23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "hi!"+ "'", var26.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi!"+ "'", var27.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);

  }

  public void test313() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    java.lang.String var28 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var29 = var14.getURLArray(var28);
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.util.Iterator var32 = var30.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var33 = var30.getIDMap();
    java.lang.String var34 = var30.getHelp();
    java.lang.String var35 = var30.toString();
    java.lang.Object[] var36 = var14.getObjectArray(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var46 = var45.getShortFlag();
    char var47 = var45.getShortFlag();
    java.lang.Character var48 = var45.getShortFlagCharacter();
    java.lang.String var49 = var45.getSyntax();
    long var51 = var14.getLong(var49, (-1L));
    boolean var52 = var14.success();
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    java.lang.String var55 = var53.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var56 = new com.martiansoftware.jsap.SimpleJSAP(var55);
    boolean var57 = var56.messagePrinted();
    java.lang.String var58 = var56.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var59 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var60 = var59.hasProperties();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var61 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var62 = var61.hasProperties();
    java.lang.String var63 = var61.getStringparser();
    boolean var64 = var61.getIslist();
    com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var65 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var58, var60, var64);
    byte var67 = var14.getByte(var58, (byte)(-1));
    java.util.Iterator var68 = var14.getBadParameterIDIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + '4'+ "'", var48.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "[-4|--hi!]"+ "'", var49.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == (-1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var58.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);

  }

  public void test314() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    boolean var1 = var0.mustBeFile();
    boolean var2 = var0.mustBeDirectory();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);

  }

  public void test315() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DoubleStringParser var0 = com.martiansoftware.jsap.stringparsers.DoubleStringParser.getParser();
    var0.tearDown();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);

  }

  public void test316() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    java.lang.String var28 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var29 = var14.getURLArray(var28);
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.util.Iterator var32 = var30.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var33 = var30.getIDMap();
    java.lang.String var34 = var30.getHelp();
    java.lang.String var35 = var30.toString();
    java.lang.Object[] var36 = var14.getObjectArray(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var46 = var45.getShortFlag();
    char var47 = var45.getShortFlag();
    java.lang.Character var48 = var45.getShortFlagCharacter();
    java.lang.String var49 = var45.getSyntax();
    long var51 = var14.getLong(var49, (-1L));
    java.lang.String var54 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var59 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var60 = var56.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var61 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var62 = var61.getID();
    java.lang.String var63 = var61.getID();
    com.martiansoftware.jsap.JSAPException var64 = new com.martiansoftware.jsap.JSAPException(var54, (java.lang.Throwable)var61);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      byte var65 = var14.getByte(var54);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + '4'+ "'", var48.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "[-4|--hi!]"+ "'", var49.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == (-1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "hi!"+ "'", var54.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi!"+ "'", var59.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "hi!"+ "'", var62.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "hi!"+ "'", var63.equals("hi!"));

  }

  public void test317() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var4 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var5 = var4.hasProperties();
    var0.setRequired(var5);
    char var7 = var0.getShortflag();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var8 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var9 = var8.hasProperties();
    java.lang.String var10 = var8.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var11 = new com.martiansoftware.jsap.ant.ParserProperty();
    var8.addConfiguredProperty(var11);
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var14 = var13.getHelp();
    java.lang.String var15 = var13.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var16 = new com.martiansoftware.jsap.SimpleJSAP(var15);
    boolean var17 = var16.messagePrinted();
    java.lang.String var18 = var16.getHelp();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    boolean var23 = var22.messagePrinted();
    java.lang.String var24 = var22.getHelp();
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException(var24);
    java.lang.String[] var26 = new java.lang.String[] { var24};
    com.martiansoftware.jsap.JSAPResult var27 = var16.parse(var26);
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    java.util.Iterator var30 = var28.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var31 = var28.getIDMap();
    java.lang.String var32 = var28.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var36 = var27.getByte(var32, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var37 = new com.martiansoftware.jsap.QualifiedSwitch(var32);
    var11.setValue(var32);
    var0.setStringparser(var32);
    java.lang.String[] var40 = var0.getDefaults();
    com.martiansoftware.jsap.ant.SwitchConfiguration var41 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var42 = var41.getLongflag();
    com.martiansoftware.jsap.ant.SwitchConfiguration var43 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var44 = var43.getLongflag();
    com.martiansoftware.jsap.ant.DefaultValue var45 = new com.martiansoftware.jsap.ant.DefaultValue();
    var43.addConfiguredDefault(var45);
    var41.addConfiguredDefault(var45);
    com.martiansoftware.jsap.stringparsers.DateStringParser var48 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var48.tearDown();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var52 = var48.getProperty("hi!");
    var45.addText("hi!");
    java.lang.String var54 = var45.getValue();
    var0.setLongflag(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var18.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var24.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "hi!"+ "'", var54.equals("hi!"));

  }

  public void test318() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch(var21);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    junit.framework.Assert.assertEquals(var21, (short)0, (short)0);
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var54 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, "hi!", true, '4', "", var61);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var63 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    java.lang.String var66 = var64.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var67 = new com.martiansoftware.jsap.SimpleJSAP(var66);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var71 = var69.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var73 = var69.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var75 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var78 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var79 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var63, var66, false, '4', "hi!");
    com.martiansoftware.jsap.Switch var80 = new com.martiansoftware.jsap.Switch(var66);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    junit.framework.Assert.assertEquals(var66, (short)0, (short)0);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);

  }

  public void test319() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test4();
    int var5 = var0.countTestCases();
    var0.test2();
    var0.test6();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);

  }

  public void test320() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.TestOption var33 = new com.martiansoftware.jsap.TestOption();
    int var34 = var33.countTestCases();
    java.lang.String var35 = var33.toString();
    java.lang.Exception var36 = var14.getException(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var48 = var37.getHelp((-1), "hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    java.lang.String var51 = var49.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    boolean var53 = var52.messagePrinted();
    boolean var54 = var52.messagePrinted();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var61 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var67 = var56.getHelp((-1), "hi!");
    java.lang.String var68 = var52.getHelp(100, "hi!");
    java.lang.String var69 = var37.getHelp(100);
    short var71 = var14.getShort(var69, (short)1);
    java.util.Iterator var72 = var14.getBadParameterIDIterator();
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var76 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var80 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var81 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var82 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var88 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var89 = var88.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var90 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var82, "hi!", true, '4', "", var89);
    java.lang.Package var91 = var14.getPackage(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "null(com.martiansoftware.jsap.TestOption)"+ "'", var35.equals("null(com.martiansoftware.jsap.TestOption)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var68.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == (short)1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + ""+ "'", var89.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == null);

  }

  public void test321() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var51 = var27.setList(false);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var52 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var53 = var52.getParameter();
    boolean var54 = var52.declaredListSeparator();
    boolean var55 = var52.getIslist();
    com.martiansoftware.jsap.UnflaggedOption var56 = var27.setGreedy(var55);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var60 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var64 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var65 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var66 = var65.getShortFlag();
    java.lang.String var67 = var65.getSyntax();
    com.martiansoftware.jsap.SimpleJSAP var68 = new com.martiansoftware.jsap.SimpleJSAP(var67);
    com.martiansoftware.jsap.UnflaggedOption var69 = var27.setDefault(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "[-4|--hi!]"+ "'", var67.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);

  }

  public void test322() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testSimpleDefault();
    var0.setUp();
    var0.testOneLevelDefaults();
    var0.testOneLevelDefaults();

  }

  public void test323() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var21 = var10.getHelp((-1), "hi!");
    java.lang.String[] var22 = new java.lang.String[] { var21};
    com.martiansoftware.jsap.Switch var23 = var8.setDefault(var22);
    char var24 = var23.getShortFlag();
    java.lang.String var25 = var23.getSyntax();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var26 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var27 = var26.getParameter();
    boolean var28 = var26.declaredListSeparator();
    char var29 = var26.getListseparator();
    com.martiansoftware.jsap.Switch var30 = var23.setShortFlag(var29);
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var35 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var36 = var32.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var37 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var38 = var32.setStringParser((com.martiansoftware.jsap.StringParser)var37);
    com.martiansoftware.jsap.ant.SwitchConfiguration var39 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var40 = var39.getLongflag();
    var39.setShortflag('#');
    java.lang.String var43 = var39.getLongflag();
    var39.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var46 = var32.setListSeparator('#');
    com.martiansoftware.jsap.Switch var47 = var23.setShortFlag('#');
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var57 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var65 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var57, "hi!", true, '4', "", var64);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var66 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    java.lang.String var69 = var67.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var70 = new com.martiansoftware.jsap.SimpleJSAP(var69);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var74 = var72.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var76 = var72.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var78 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var81 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var66, var69, false, '4', "hi!");
    java.lang.String var83 = var82.getSyntax();
    com.martiansoftware.jsap.Switch var84 = var23.setDefault(var83);
    char var85 = var23.getShortFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "[-4|--hi!]"+ "'", var25.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "hi!"+ "'", var35.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var83.equals("[(-4|--hi!)[:<hi!>]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == '#');

  }

  public void test324() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    java.lang.String var7 = var5.getSyntax();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var9 = var8.getHelp();
    java.lang.String var10 = var8.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var11 = new com.martiansoftware.jsap.SimpleJSAP(var10);
    boolean var12 = var11.messagePrinted();
    java.lang.String var13 = var11.getHelp();
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException(var13);
    com.martiansoftware.jsap.FlaggedOption var15 = var5.setUsageName(var13);
    java.lang.String var16 = com.martiansoftware.util.StringUtils.noNull(var13);
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    java.lang.String var19 = var17.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var20 = new com.martiansoftware.jsap.SimpleJSAP(var19);
    boolean var21 = var20.messagePrinted();
    java.lang.String var22 = var20.getHelp();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var24 = var23.getHelp();
    java.lang.String var25 = var23.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    boolean var27 = var26.messagePrinted();
    java.lang.String var28 = var26.getHelp();
    com.martiansoftware.jsap.ParseException var29 = new com.martiansoftware.jsap.ParseException(var28);
    java.lang.String[] var30 = new java.lang.String[] { var28};
    com.martiansoftware.jsap.JSAPResult var31 = var20.parse(var30);
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.util.Iterator var34 = var32.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var35 = var32.getIDMap();
    java.lang.String var36 = var32.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var40 = var31.getByte(var36, (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals(var13, (byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "[<hi!>]"+ "'", var7.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var13.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var16.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var22.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var28.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == (byte)(-1));

  }

  public void test325() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    com.martiansoftware.jsap.Parameter var2 = var0.getParameter();
    com.martiansoftware.jsap.Parameter var3 = var0.getParameter();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);

  }

  public void test326() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var12 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = var7.setStringParser((com.martiansoftware.jsap.StringParser)var12);
    com.martiansoftware.jsap.ant.SwitchConfiguration var14 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var15 = var14.getLongflag();
    var14.setShortflag('#');
    java.lang.String var18 = var14.getLongflag();
    var14.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var21 = var7.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    java.lang.String[] var40 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.FlaggedOption var41 = var21.setDefault(var40);
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var41);
    com.martiansoftware.jsap.stringparsers.URLStringParser var43 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var44 = var41.setStringParser((com.martiansoftware.jsap.StringParser)var43);
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var50 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var54 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var55 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var56 = var45.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var57 = new com.martiansoftware.jsap.SimpleJSAP(var56);
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var61 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var70 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var74 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var75 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var76 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var82 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var83 = var82.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var84 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var76, "hi!", true, '4', "", var83);
    java.lang.String var85 = var84.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var85);
    com.martiansoftware.jsap.TestFlaggedOption var87 = new com.martiansoftware.jsap.TestFlaggedOption(var85);
    com.martiansoftware.jsap.Switch var88 = new com.martiansoftware.jsap.Switch(var56, '4', var85);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var89 = var43.parse(var56);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + ""+ "'", var83.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var85.equals("(-4|--)[:<hi!>]"));

  }

  public void test327() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var7 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var8 = var7.getID();
    java.lang.Object var9 = var0.parse(var8);
    var0.setUp();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);

  }

  public void test328() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var38 = var34.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var39 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var40 = var39.getID();
    boolean[] var41 = var14.getBooleanArray(var40);
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var46 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var47 = var43.setHelp("hi!");
    java.lang.String[] var48 = var14.getStringArray("hi!");
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!"+ "'", var40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "hi!"+ "'", var46.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);

  }

  public void test329() throws Throwable {

    com.martiansoftware.jsap.TestOption var0 = new com.martiansoftware.jsap.TestOption();
    int var1 = var0.countTestCases();
    int var2 = var0.countTestCases();
    int var3 = var0.countTestCases();
    junit.framework.TestResult var4 = var0.run();
    int var5 = var0.countTestCases();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);

  }

  public void test330() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var6 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var7 = var6.getID();
    java.lang.String var8 = var6.getID();
    com.martiansoftware.jsap.JSAPException var9 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var6);
    java.lang.String var10 = var6.getID();
    java.lang.String var11 = var6.getID();
    com.martiansoftware.jsap.JSAP var12 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var13 = var12.getHelp();
    java.lang.String var14 = var12.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var15 = new com.martiansoftware.jsap.SimpleJSAP(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var15.unregisterParameter((com.martiansoftware.jsap.Parameter)var17);
    com.martiansoftware.jsap.TestOption var19 = new com.martiansoftware.jsap.TestOption();
    int var20 = var19.countTestCases();
    int var21 = var19.countTestCases();
    int var22 = var19.countTestCases();
    java.lang.String var23 = var15.getHelp(var22);
    com.martiansoftware.jsap.TestUsageString var24 = new com.martiansoftware.jsap.TestUsageString(var23);
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException();
    com.martiansoftware.jsap.ParseException var26 = new com.martiansoftware.jsap.ParseException((java.lang.Throwable)var25);
    com.martiansoftware.jsap.JSAPException var27 = new com.martiansoftware.jsap.JSAPException(var23, (java.lang.Throwable)var25);
    com.martiansoftware.jsap.ant.SwitchConfiguration var28 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var29 = var28.getLongflag();
    var28.setShortflag('#');
    java.lang.String var32 = var28.getLongflag();
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var28.setShortflag('4');
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var36 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var37 = var36.getParameter();
    java.lang.String var38 = var36.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var43 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var44 = var40.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var45 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var46 = var45.getID();
    java.lang.String var47 = var45.getID();
    var36.setLongflag(var47);
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var49 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException(var47);
    java.lang.String var50 = var49.getID();
    var28.setLongflag(var50);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame(var11, (java.lang.Object)var27, (java.lang.Object)var28);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var23.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "hi!"+ "'", var46.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "hi!"+ "'", var47.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "hi!"+ "'", var50.equals("hi!"));

  }

  public void test331() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    var0.tearDown();
    com.martiansoftware.jsap.stringparsers.FileStringParser var4 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var4.setUp();
    boolean var6 = var4.mustExist();
    com.martiansoftware.jsap.stringparsers.FileStringParser var7 = var0.setMustBeDirectory(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);

  }

  public void test332() throws Throwable {

    com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource var0 = new com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource();
    java.lang.String var1 = var0.getName();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var6 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var7 = var3.setHelp("hi!");
    var3.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var10 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var28 = new com.martiansoftware.jsap.SimpleJSAP(var27);
    com.martiansoftware.jsap.UnflaggedOption var29 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var10, var15, var27);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    com.martiansoftware.jsap.UnflaggedOption var48 = var29.setRequired(true);
    java.lang.String var49 = var29.getID();
    var0.setName(var49);
    com.martiansoftware.jsap.QualifiedSwitch var51 = new com.martiansoftware.jsap.QualifiedSwitch(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "hi!"+ "'", var6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));

  }

  public void test333() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var51 = var27.setList(false);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var55 = var53.setRequired(false);
    java.lang.String var56 = var53.getID();
    boolean var57 = var53.allowMultipleDeclarations();
    com.martiansoftware.jsap.UnflaggedOption var58 = var51.setList(var57);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var62 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var66 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var67 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var68 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var71 = new com.martiansoftware.jsap.ParseException();
    com.martiansoftware.jsap.JSAPException var72 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var71);
    junit.framework.Assert.assertNotNull("hi!", (java.lang.Object)var71);
    com.martiansoftware.jsap.UnflaggedOption var74 = var51.setUsageName("hi!");
    com.martiansoftware.jsap.TestUsageString var75 = new com.martiansoftware.jsap.TestUsageString("hi!");
    var75.testUsage2();
    var75.testUsage1();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "hi!"+ "'", var56.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);

  }

  public void test334() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.ParseException var6 = new com.martiansoftware.jsap.ParseException(var5);
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var7 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser(var5);
    int var8 = var7.countTestCases();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);

  }

  public void test335() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var7 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var8 = var4.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var9 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var10 = var9.getID();
    java.lang.String var11 = var9.getID();
    var0.setLongflag(var11);
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var15 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var16 = var15.getLongflag();
    var15.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var19 = var14.setListSeparator('#');
    boolean var20 = var19.isList();
    var0.setAllowmultipledeclarations(var20);
    boolean var22 = var0.hasProperties();
    com.martiansoftware.jsap.ant.SwitchConfiguration var23 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var24 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var25 = var24.getParameter();
    boolean var26 = var24.declaredListSeparator();
    boolean var27 = var24.getIslist();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var32 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var33 = var29.setHelp("hi!");
    var29.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var36 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var53 = var42.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var54 = new com.martiansoftware.jsap.SimpleJSAP(var53);
    com.martiansoftware.jsap.UnflaggedOption var55 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var36, var41, var53);
    com.martiansoftware.jsap.ant.SwitchConfiguration var56 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var57 = var56.getLongflag();
    var56.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var68 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var69 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var77 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var69, "hi!", true, '4', "", var76);
    com.martiansoftware.jsap.Switch var78 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var24.setListseparator('#');
    com.martiansoftware.jsap.ant.DefaultValue var80 = new com.martiansoftware.jsap.ant.DefaultValue();
    java.lang.String var81 = var80.getValue();
    var24.addConfiguredDefault(var80);
    var23.addConfiguredDefault(var80);
    var0.addConfiguredDefault(var80);
    char var85 = var0.getShortflag();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == '\u0000');

  }

  public void test336() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    com.martiansoftware.jsap.Parameter var5 = var0.getParameter();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var15 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var23 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var15, "hi!", true, '4', "", var22);
    java.lang.String var24 = var23.getSyntax();
    java.lang.Character var25 = var23.getShortFlagCharacter();
    var0.setShortflag((char)var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var24.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + '4'+ "'", var25.equals('4'));

  }

  public void test337() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var33 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var34 = var30.setHelp("hi!");
    var30.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var37 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    java.lang.String var40 = var38.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var41 = new com.martiansoftware.jsap.SimpleJSAP(var40);
    boolean var42 = var41.messagePrinted();
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var54 = var43.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var55 = new com.martiansoftware.jsap.SimpleJSAP(var54);
    com.martiansoftware.jsap.UnflaggedOption var56 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var37, var42, var54);
    com.martiansoftware.jsap.ant.SwitchConfiguration var57 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var58 = var57.getLongflag();
    var57.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var70 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var78 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, "hi!", true, '4', "", var77);
    com.martiansoftware.jsap.Switch var79 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var80 = var27.setUsageName("hi!");
    com.martiansoftware.jsap.Switch var81 = new com.martiansoftware.jsap.Switch("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "hi!"+ "'", var33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);

  }

  public void test338() throws Throwable {

    com.martiansoftware.jsap.ant.ParserProperty var0 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var7 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var0.setValue("hi!");
    com.martiansoftware.jsap.JSAPException var9 = new com.martiansoftware.jsap.JSAPException("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);

  }

  public void test339() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    com.martiansoftware.jsap.JSAP var4 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var5 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var6 = var5.idIterator();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var18 = var7.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var28 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var35 = var34.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var36 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var28, "hi!", true, '4', "", var35);
    java.lang.String[] var37 = new java.lang.String[] { var35};
    var5.addDefault(var18, var37);
    java.lang.String[] var39 = new java.lang.String[] { var18};
    com.martiansoftware.jsap.JSAPResult var40 = var4.parse(var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var50 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var53 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var54 = var40.contains("hi!");
    java.math.BigInteger[] var56 = var40.getBigIntegerArray("");
    boolean var57 = var3.idExists("");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var58 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var59 = var58.getParameter();
    java.lang.String var60 = var58.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var65 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var66 = var62.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var67 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var68 = var67.getID();
    java.lang.String var69 = var67.getID();
    var58.setLongflag(var69);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var73 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var74 = var73.getLongflag();
    var73.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var77 = var72.setListSeparator('#');
    boolean var78 = var77.isList();
    var58.setAllowmultipledeclarations(var78);
    char var80 = var58.getShortflag();
    java.lang.String var81 = var3.getIDByShortFlag((java.lang.Character)var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "hi!"+ "'", var65.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "hi!"+ "'", var68.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "hi!"+ "'", var69.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == null);

  }

  public void test340() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getStringparser();
    char var3 = var0.getListseparator();
    boolean var4 = var0.hasProperties();
    com.martiansoftware.jsap.ant.ParserProperty[] var5 = var0.getParserProperties();
    char var6 = var0.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)var6);
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == '\u0000');

  }

  public void test341() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    java.lang.String var7 = var5.getSyntax();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var9 = var8.getHelp();
    java.lang.String var10 = var8.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var11 = new com.martiansoftware.jsap.SimpleJSAP(var10);
    boolean var12 = var11.messagePrinted();
    java.lang.String var13 = var11.getHelp();
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException(var13);
    com.martiansoftware.jsap.FlaggedOption var15 = var5.setUsageName(var13);
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getID();
    com.martiansoftware.jsap.StringParser var18 = var15.getStringParser();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "[<hi!>]"+ "'", var7.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var13.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "hi!"+ "'", var17.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == null);

  }

  public void test342() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.tearDown();
    var0.tearDown();
    var0.setUp();
    var0.testSimpleDefault();
    var0.testDefaults2();
    var0.setUp();
    var0.testRequired();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testRequired();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test343() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.stringparsers.DateStringParser var15 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var15.setUp();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var26 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var26, "hi!", true, '4', "", var33);
    java.lang.String var35 = var15.getProperty("");
    java.lang.String[] var36 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.JSAPResult var37 = var3.parse(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var41 = var39.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var43 = var39.setRequired(false);
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    java.lang.String var46 = var44.getUsage();
    com.martiansoftware.jsap.FlaggedOption var47 = var43.setUsageName(var46);
    java.lang.Exception var48 = var37.getException(var46);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var58 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var66 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var58, "hi!", true, '4', "", var65);
    java.lang.Character var67 = var66.getShortFlagCharacter();
    java.lang.String var68 = var66.getLongFlag();
    java.net.InetAddress[] var69 = var37.getInetAddressArray(var68);
    java.util.Iterator var70 = var37.getBadParameterIDIterator();
    java.util.Iterator var71 = var37.getBadParameterIDIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + '4'+ "'", var67.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);

  }

  public void test344() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test10();
    var0.test4();
    var0.test6();
    var0.test9();

  }

  public void test345() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    com.martiansoftware.jsap.ant.DefaultValue var2 = new com.martiansoftware.jsap.ant.DefaultValue();
    var0.addConfiguredDefault(var2);
    java.lang.String var4 = var0.getLongflag();
    com.martiansoftware.jsap.Parameter var5 = var0.getParameter();
    char var6 = var0.getShortflag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == '\u0000');

  }

  public void test346() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testSimpleDefault();
    var0.setUp();
    var0.testDefaults2();
    var0.testDefaults2();
    var0.setUp();

  }

  public void test347() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    boolean var3 = var0.getIslist();
    com.martiansoftware.jsap.ant.ParserProperty[] var4 = var0.getParserProperties();
    java.lang.String var5 = var0.getId();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var9.unregisterParameter((com.martiansoftware.jsap.Parameter)var11);
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var22 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var30 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var22, "hi!", true, '4', "", var29);
    java.lang.String var31 = var30.getSyntax();
    java.lang.Character var32 = var30.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var33 = var11.setListSeparator((char)var32);
    boolean var34 = var11.isList();
    var0.setRequired(var34);
    junit.framework.Assert.assertFalse(var34);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var37 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var38 = var37.hasProperties();
    com.martiansoftware.jsap.Parameter var39 = var37.getParameter();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var40 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var41 = var40.hasProperties();
    java.lang.String var42 = var40.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var43 = new com.martiansoftware.jsap.ant.ParserProperty();
    var40.addConfiguredProperty(var43);
    boolean var45 = var40.getGreedy();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var55 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var62 = var61.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var63 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var55, "hi!", true, '4', "", var62);
    java.lang.Character var64 = var63.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var67 = var63.setLongFlag("hi!");
    boolean var68 = var63.isList();
    var40.setGreedy(var68);
    var37.setGreedy(var68);
    boolean var71 = var37.getRequired();
    junit.framework.Assert.assertEquals(var34, var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var31.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + '4'+ "'", var32.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + '4'+ "'", var64.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);

  }

  public void test348() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.Exception var70 = var36.getException("");
    com.martiansoftware.jsap.ant.ParserProperty var71 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var76 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var77 = var73.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var78 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var71.setValue("hi!");
    boolean var80 = var36.userSpecified("hi!");
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals("hi!", (byte)(-1), (byte)(-1));
    com.martiansoftware.jsap.UnknownFlagException var92 = new com.martiansoftware.jsap.UnknownFlagException("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "hi!"+ "'", var76.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);

  }

  public void test349() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var51 = var49.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var53 = var49.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var62 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var63 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var53.addDefault("hi!");
    boolean var67 = var14.contains("hi!");
    com.martiansoftware.jsap.ant.ParserProperty var68 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var72 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var76 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var77 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var78 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var84 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var85 = var84.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var86 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var78, "hi!", true, '4', "", var85);
    java.util.List var88 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    var68.setName("");
    com.martiansoftware.jsap.TestOption var90 = new com.martiansoftware.jsap.TestOption();
    int var91 = var90.countTestCases();
    int var92 = var90.countTestCases();
    java.util.List var93 = com.martiansoftware.util.StringUtils.wrapToList("", var92);
    java.net.URL[] var94 = var14.getURLArray("");
    junit.framework.Assert.assertEquals("", (-1L), (-1L));
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((-1L), 10L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + ""+ "'", var85.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);

  }

  public void test350() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var10 = var9.countTestCases();
    var9.testShortFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);

  }

  public void test351() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    java.lang.Character var25 = var24.getShortFlagCharacter();
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + '4'+ "'", var25.equals('4'));

  }

  public void test352() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestOption var2 = new com.martiansoftware.jsap.TestOption();
    int var3 = var2.countTestCases();
    int var4 = var2.countTestCases();
    int var5 = var2.countTestCases();
    junit.framework.Assert.assertNotNull("hi!", (java.lang.Object)var5);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var7 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var8 = var7.hasProperties();
    com.martiansoftware.jsap.defaultsources.PropertyDefaultSource var9 = new com.martiansoftware.jsap.defaultsources.PropertyDefaultSource("hi!", var8);
    com.martiansoftware.jsap.stringparsers.DateStringParser var10 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var10.setUp();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var21 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var28 = var27.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var29 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var21, "hi!", true, '4', "", var28);
    java.lang.String var30 = var10.getProperty("");
    var10.tearDown();
    com.martiansoftware.jsap.TestCommandLineTokenizer var32 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var32.test9();
    var32.test8();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!", (java.lang.Object)var10, (java.lang.Object)var32);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == null);

  }

  public void test353() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var39.unregisterParameter((com.martiansoftware.jsap.Parameter)var41);
    java.lang.String var43 = var39.getUsage();
    java.lang.String var44 = var39.getUsage();
    com.martiansoftware.jsap.TestUsageString var45 = new com.martiansoftware.jsap.TestUsageString(var44);
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var55 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    short var59 = var14.getShort(var44, (short)1);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var59, (short)0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "[--help]"+ "'", var43.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "[--help]"+ "'", var44.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == (short)1);

  }

  public void test354() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.Character var18 = var17.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = var17.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var22 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.ParseException var23 = new com.martiansoftware.jsap.ParseException((java.lang.Throwable)var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + '4'+ "'", var18.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);

  }

  public void test355() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    java.lang.Class[] var54 = var14.getClassArray("");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var55 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var56 = var55.getParameter();
    java.lang.String var57 = var55.getStringparser();
    char var58 = var55.getListseparator();
    boolean var59 = var55.hasProperties();
    com.martiansoftware.jsap.ant.ParserProperty[] var60 = var55.getParserProperties();
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var62 = var61.getHelp();
    java.lang.String var63 = var61.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var64 = new com.martiansoftware.jsap.SimpleJSAP(var63);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var64.unregisterParameter((com.martiansoftware.jsap.Parameter)var66);
    com.martiansoftware.jsap.TestOption var68 = new com.martiansoftware.jsap.TestOption();
    int var69 = var68.countTestCases();
    int var70 = var68.countTestCases();
    int var71 = var68.countTestCases();
    java.lang.String var72 = var64.getHelp(var71);
    com.martiansoftware.jsap.TestUsageString var73 = new com.martiansoftware.jsap.TestUsageString(var72);
    var55.setStringparser(var72);
    java.net.InetAddress[] var75 = var14.getInetAddressArray(var72);
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    java.util.Iterator var78 = var76.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var79 = var76.getIDMap();
    java.lang.String var80 = var76.getHelp();
    java.lang.String var81 = var76.toString();
    java.util.Date[] var82 = var14.getDateArray(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var72.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + ""+ "'", var80.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);

  }

  public void test356() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var4 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = var18.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var48 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var48, "hi!", true, '4', "", var55);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption(var2, (com.martiansoftware.jsap.StringParser)var4, var16, false, '4', "hi!");
    com.martiansoftware.jsap.RequiredParameterMissingException var58 = new com.martiansoftware.jsap.RequiredParameterMissingException("hi!");
    java.lang.String var59 = var58.getID();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi!"+ "'", var59.equals("hi!"));

  }

  public void test357() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testRequired();
    var0.testConfig();
    var0.testSimpleDefault();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testRequired();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test358() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var11 = var0.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var22 = var21.getShortFlag();
    char var23 = var21.getShortFlag();
    java.lang.Character var24 = var21.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var34 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var37 = var21.setDefault("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var38 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var39 = var38.getParameter();
    boolean var40 = var38.declaredListSeparator();
    char var41 = var38.getShortflag();
    char var42 = var38.getShortflag();
    com.martiansoftware.jsap.Switch var43 = var21.setShortFlag(var42);
    java.lang.String var44 = var21.getSyntax();
    java.lang.String[] var45 = new java.lang.String[] { var44};
    com.martiansoftware.jsap.JSAPResult var46 = var12.parse(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + '4'+ "'", var24.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "[--hi!]"+ "'", var44.equals("[--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);

  }

  public void test359() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    java.lang.String var25 = var8.getHelp();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var30 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var31 = var27.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var32 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = var27.setStringParser((com.martiansoftware.jsap.StringParser)var32);
    com.martiansoftware.jsap.ant.SwitchConfiguration var34 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var35 = var34.getLongflag();
    var34.setShortflag('#');
    java.lang.String var38 = var34.getLongflag();
    var34.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var41 = var27.setListSeparator('#');
    com.martiansoftware.jsap.Switch var42 = var8.setShortFlag('#');
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'#');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var53 = var52.getShortFlag();
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var65 = var54.getHelp((-1), "hi!");
    java.lang.String[] var66 = new java.lang.String[] { var65};
    com.martiansoftware.jsap.Switch var67 = var52.setDefault(var66);
    char var68 = var67.getShortFlag();
    java.lang.String var69 = var67.getSyntax();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var70 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var71 = var70.getParameter();
    boolean var72 = var70.declaredListSeparator();
    char var73 = var70.getListseparator();
    com.martiansoftware.jsap.Switch var74 = var67.setShortFlag(var73);
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var79 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var80 = var76.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var81 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var82 = var76.setStringParser((com.martiansoftware.jsap.StringParser)var81);
    com.martiansoftware.jsap.ant.SwitchConfiguration var83 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var84 = var83.getLongflag();
    var83.setShortflag('#');
    java.lang.String var87 = var83.getLongflag();
    var83.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var90 = var76.setListSeparator('#');
    com.martiansoftware.jsap.Switch var91 = var67.setShortFlag('#');
    junit.framework.Assert.assertEquals('#', '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "hi!"+ "'", var25.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "hi!"+ "'", var30.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "[-4|--hi!]"+ "'", var69.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "hi!"+ "'", var79.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);

  }

  public void test360() throws Throwable {

    com.martiansoftware.jsap.TestParser var0 = new com.martiansoftware.jsap.TestParser();
    var0.testParser();
    var0.testParser();
    var0.testMultipleDeclarations();
    java.lang.String var4 = var0.toString();
    var0.testParser();
    var0.testMultipleDeclarations();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "null(com.martiansoftware.jsap.TestParser)"+ "'", var4.equals("null(com.martiansoftware.jsap.TestParser)"));

  }

  public void test361() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var9.testID();
    var9.testShortFlag();
    var9.testSwitchParse();
    var9.testShortFlag();

  }

  public void test362() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test7();
    var0.test1();
    var0.test5();
    var0.test7();

  }

  public void test363() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    var0.setUp();
    com.martiansoftware.jsap.JSAP var4 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var5 = var4.getHelp();
    java.lang.String var6 = var4.getUsage();
    com.martiansoftware.jsap.IDMap var7 = var4.getIDMap();
    com.martiansoftware.jsap.stringparsers.DateStringParser var8 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var13 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var14 = var10.setHelp("hi!");
    var10.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var17 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    java.lang.String var20 = var18.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var21 = new com.martiansoftware.jsap.SimpleJSAP(var20);
    boolean var22 = var21.messagePrinted();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var34 = var23.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    com.martiansoftware.jsap.UnflaggedOption var36 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var17, var22, var34);
    com.martiansoftware.jsap.ant.SwitchConfiguration var37 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var38 = var37.getLongflag();
    var37.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var68 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var8.setProperty("", "hi!");
    boolean var70 = var7.idExists("hi!");
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var75 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var76 = var72.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var77 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var78 = var72.setStringParser((com.martiansoftware.jsap.StringParser)var77);
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var86 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var87 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var88 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var91 = var78.setHelp("hi!");
    java.lang.String var92 = var7.getIDByLongFlag("hi!");
    java.lang.Object var93 = var0.parse("hi!");
    var0.setUp();
    var0.tearDown();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "hi!"+ "'", var13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "hi!"+ "'", var75.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);

  }

  public void test364() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var36 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var44 = var42.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var46 = var42.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var52 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var36, var39, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    java.lang.String var55 = var53.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var56 = new com.martiansoftware.jsap.SimpleJSAP(var55);
    boolean var57 = var56.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var58 = var52.setRequired(var57);
    java.lang.String[] var60 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.FlaggedOption var61 = var52.setDefault(var60);
    java.lang.String var62 = var52.getSyntax();
    com.martiansoftware.jsap.FlaggedOption var63 = var17.setLongFlag(var62);
    char var64 = var17.getListSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var62.equals("[(-4|--hi!)[:<hi!>]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == ':');

  }

  public void test365() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    boolean var47 = var27.isList();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var48 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var49 = var48.getParameter();
    boolean var50 = var48.declaredListSeparator();
    char var51 = var48.getListseparator();
    com.martiansoftware.jsap.UnflaggedOption var52 = var27.setListSeparator(var51);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var53 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var54 = var53.hasProperties();
    java.lang.String var55 = var53.getStringparser();
    boolean var56 = var53.declaredListSeparator();
    com.martiansoftware.jsap.ant.SwitchConfiguration var57 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var58 = var57.getLongflag();
    var57.setShortflag('#');
    java.lang.String var61 = var57.getLongflag();
    java.lang.String var62 = var57.getId();
    com.martiansoftware.jsap.Parameter var63 = var57.getParameter();
    boolean var64 = var57.hasProperties();
    var53.setGreedy(var64);
    com.martiansoftware.jsap.UnflaggedOption var66 = var27.setList(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);

  }

  public void test366() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.Exception var70 = var36.getException("");
    com.martiansoftware.jsap.ant.ParserProperty var71 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var76 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var77 = var73.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var78 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var71.setValue("hi!");
    boolean var80 = var36.userSpecified("hi!");
    com.martiansoftware.jsap.TestCommandLineTokenizer var81 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var81.test7();
    var81.test2();
    var81.test6();
    var81.test7();
    com.martiansoftware.jsap.TestDefaults var86 = new com.martiansoftware.jsap.TestDefaults();
    var86.tearDown();
    junit.framework.TestResult var88 = var86.run();
    var81.run(var88);
    var81.test4();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var80, (java.lang.Object)var81);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "hi!"+ "'", var76.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);

  }

  public void test367() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var40 = var34.setRequired(var39);
    java.lang.String[] var42 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.FlaggedOption var43 = var34.setDefault(var42);
    com.martiansoftware.jsap.ant.SwitchConfiguration var44 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var45 = var44.getLongflag();
    var44.setShortflag('#');
    java.lang.String var48 = var44.getLongflag();
    java.lang.String var49 = var44.getId();
    com.martiansoftware.jsap.Parameter var50 = var44.getParameter();
    boolean var51 = var44.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var52 = var34.setList(var51);
    java.lang.String var53 = var52.getUsage();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var53.equals("[(-4|--hi!)[:<hi!>]]"));

  }

  public void test368() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ByteStringParser var0 = new com.martiansoftware.jsap.stringparsers.ByteStringParser();
    var0.tearDown();
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var9 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var10 = var6.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var11 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var12 = var11.getID();
    java.lang.String var13 = var11.getID();
    com.martiansoftware.jsap.JSAPException var14 = new com.martiansoftware.jsap.JSAPException(var4, (java.lang.Throwable)var11);
    java.lang.String var15 = var11.getID();
    java.lang.String var16 = var11.getID();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var17 = var0.parse(var16);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!"+ "'", var12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "hi!"+ "'", var13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi!"+ "'", var15.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!"+ "'", var16.equals("hi!"));

  }

  public void test369() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    java.util.Iterator var9 = var6.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    boolean var15 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var28 = var17.getHelp((-1), "hi!");
    java.lang.String var29 = var13.getHelp(100, "hi!");
    java.lang.String var30 = var6.getHelp(100);
    com.martiansoftware.jsap.Flagged var31 = var3.getByLongFlag(var30);
    boolean var32 = var3.messagePrinted();
    java.lang.String var33 = var3.getHelp();
    java.util.Iterator var34 = var3.getUnflaggedOptionsIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var29.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);

  }

  public void test370() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.UnspecifiedParameterException var18 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    com.martiansoftware.jsap.JSAPException var19 = new com.martiansoftware.jsap.JSAPException("");
    java.lang.String var20 = var19.toString();
    java.lang.String var21 = var19.toString();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var22 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var23 = var22.getRequired();
    boolean var24 = var22.hasProperties();
    boolean var25 = var22.hasProperties();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    java.lang.String var28 = var26.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var29 = new com.martiansoftware.jsap.SimpleJSAP(var28);
    boolean var30 = var29.messagePrinted();
    java.lang.String var31 = var29.getHelp();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.lang.String var34 = var32.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    boolean var36 = var35.messagePrinted();
    java.lang.String var37 = var35.getHelp();
    com.martiansoftware.jsap.ParseException var38 = new com.martiansoftware.jsap.ParseException(var37);
    java.lang.String[] var39 = new java.lang.String[] { var37};
    com.martiansoftware.jsap.JSAPResult var40 = var29.parse(var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var50 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var51 = var40.getClass("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var62 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var63 = var52.getHelp((-1), "hi!");
    double var65 = var40.getDouble(var63, 0.0d);
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    java.lang.String var68 = var66.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var69 = new com.martiansoftware.jsap.SimpleJSAP(var68);
    boolean var70 = var69.messagePrinted();
    java.lang.String var71 = var69.getHelp();
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var73 = var72.getHelp();
    java.lang.String var74 = var72.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var75 = new com.martiansoftware.jsap.SimpleJSAP(var74);
    boolean var76 = var75.messagePrinted();
    java.lang.String var77 = var75.getHelp();
    com.martiansoftware.jsap.ParseException var78 = new com.martiansoftware.jsap.ParseException(var77);
    java.lang.String[] var79 = new java.lang.String[] { var77};
    com.martiansoftware.jsap.JSAPResult var80 = var69.parse(var79);
    com.martiansoftware.jsap.JSAP var81 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var82 = var81.getHelp();
    java.util.Iterator var83 = var81.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var84 = var81.getIDMap();
    java.lang.String var85 = var81.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var89 = var80.getByte(var85, (byte)(-1));
    java.math.BigDecimal var90 = var40.getBigDecimal(var85);
    java.awt.Color var92 = var40.getColor("hi!");
    com.martiansoftware.jsap.JSAPException var93 = new com.martiansoftware.jsap.JSAPException();
    com.martiansoftware.jsap.ParseException var94 = new com.martiansoftware.jsap.ParseException("hi!", (java.lang.Throwable)var93);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var21, (java.lang.Object)var22, (java.lang.Object)"hi!");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "com.martiansoftware.jsap.JSAPException: "+ "'", var20.equals("com.martiansoftware.jsap.JSAPException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "com.martiansoftware.jsap.JSAPException: "+ "'", var21.equals("com.martiansoftware.jsap.JSAPException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var31.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var37.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var71.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var77.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + ""+ "'", var82.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + ""+ "'", var85.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == null);

  }

  public void test371() throws Throwable {

    com.martiansoftware.jsap.Defaults var0 = new com.martiansoftware.jsap.Defaults();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var26 = var15.getClass("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var28 = var27.getHelp();
    java.lang.String var29 = var27.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var30 = new com.martiansoftware.jsap.SimpleJSAP(var29);
    boolean var31 = var30.messagePrinted();
    java.lang.String var32 = var30.getHelp();
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    java.lang.String var35 = var33.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var36 = new com.martiansoftware.jsap.SimpleJSAP(var35);
    boolean var37 = var36.messagePrinted();
    java.lang.String var38 = var36.getHelp();
    com.martiansoftware.jsap.ParseException var39 = new com.martiansoftware.jsap.ParseException(var38);
    java.lang.String[] var40 = new java.lang.String[] { var38};
    com.martiansoftware.jsap.JSAPResult var41 = var30.parse(var40);
    com.martiansoftware.jsap.stringparsers.DateStringParser var42 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var42.setUp();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var53 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var61 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var53, "hi!", true, '4', "", var60);
    java.lang.String var62 = var42.getProperty("");
    java.lang.String[] var63 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.JSAPResult var64 = var30.parse(var63);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var68 = var66.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var70 = var66.setRequired(false);
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    java.lang.String var73 = var71.getUsage();
    com.martiansoftware.jsap.FlaggedOption var74 = var70.setUsageName(var73);
    java.lang.Exception var75 = var64.getException(var73);
    char[] var76 = var15.getCharArray(var73);
    com.martiansoftware.jsap.JSAP var77 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var78 = var77.getHelp();
    java.lang.String var79 = var77.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var80 = new com.martiansoftware.jsap.SimpleJSAP(var79);
    java.lang.Class var81 = var15.getClass(var79);
    java.lang.String[] var82 = var0.getDefault(var79);
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var86 = var84.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var88 = var84.setRequired(false);
    com.martiansoftware.jsap.JSAP var89 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var90 = var89.getHelp();
    java.lang.String var91 = var89.getUsage();
    com.martiansoftware.jsap.FlaggedOption var92 = var88.setUsageName(var91);
    java.lang.String var93 = var88.getLongFlag();
    java.lang.String var94 = var88.getSyntax();
    java.lang.String[] var95 = var0.getDefault(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var32.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var38.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + ""+ "'", var90.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + ""+ "'", var91.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "[<>]"+ "'", var94.equals("[<>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == null);

  }

  public void test372() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var2 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var3 = var2.getLongflag();
    var2.setShortflag('#');
    java.lang.String var6 = var2.getLongflag();
    char var7 = var2.getShortflag();
    var0.setShortflag(var7);
    java.lang.String[] var9 = var0.getDefaults();
    boolean var10 = var0.getIslist();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var14 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var18 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var19 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var20 = var19.getShortFlag();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var32 = var21.getHelp((-1), "hi!");
    java.lang.String[] var33 = new java.lang.String[] { var32};
    com.martiansoftware.jsap.Switch var34 = var19.setDefault(var33);
    char var35 = var34.getShortFlag();
    var0.setListseparator(var35);
    boolean var37 = var0.getRequired();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);

  }

  public void test373() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test7();
    junit.framework.TestResult var5 = var0.run();
    var0.test4();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);

  }

  public void test374() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.IDMap var5 = var3.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var15 = var14.getShortFlag();
    char var16 = var14.getShortFlag();
    java.lang.Character var17 = var14.getShortFlagCharacter();
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException(var17);
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var28 = var27.getShortFlag();
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var40 = var29.getHelp((-1), "hi!");
    java.lang.String[] var41 = new java.lang.String[] { var40};
    com.martiansoftware.jsap.Switch var42 = var27.setDefault(var41);
    java.lang.Character var43 = var42.getShortFlagCharacter();
    char var44 = var42.getShortFlag();
    junit.framework.Assert.assertEquals((char)var17, var44);
    com.martiansoftware.jsap.Flagged var46 = var3.getByShortFlag((java.lang.Character)var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + '4'+ "'", var17.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + '4'+ "'", var43.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == null);

  }

  public void test375() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.xml.JSAPConfig var20 = new com.martiansoftware.jsap.xml.JSAPConfig();
    java.lang.String var21 = var20.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var22 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    java.lang.String var23 = var22.getStringparser();
    com.martiansoftware.jsap.Defaults var24 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var25 = var24.idIterator();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var47 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var55 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var47, "hi!", true, '4', "", var54);
    java.lang.String[] var56 = new java.lang.String[] { var54};
    var24.addDefault(var37, var56);
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var61 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var67 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var75 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var76 = var72.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var77 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var78 = var77.getID();
    java.lang.String[] var79 = new java.lang.String[] { var78};
    var24.addDefault("hi!", var79);
    var22.setId("hi!");
    var20.setUsage("hi!");
    com.martiansoftware.jsap.Flagged var83 = var19.getByLongFlag("hi!");
    java.lang.String[] var84 = new java.lang.String[] { "hi!"};
    com.martiansoftware.jsap.JSAPResult var85 = var18.parse(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "hi!"+ "'", var75.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "hi!"+ "'", var78.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);

  }

  public void test376() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var40 = var34.setRequired(var39);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var41 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var42 = var41.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var43 = var34.setAllowMultipleDeclarations(var42);
    java.lang.String[] var44 = var43.getDefault();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);

  }

  public void test377() throws Throwable {

    com.martiansoftware.jsap.stringparsers.StringStringParser var0 = com.martiansoftware.jsap.stringparsers.StringStringParser.getParser();
    com.martiansoftware.jsap.ant.SwitchConfiguration var1 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var2 = var1.getLongflag();
    com.martiansoftware.jsap.ant.DefaultValue var3 = new com.martiansoftware.jsap.ant.DefaultValue();
    var1.addConfiguredDefault(var3);
    com.martiansoftware.jsap.stringparsers.FileStringParser var5 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var5.tearDown();
    var5.setUp();
    var5.setUp();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var13 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var14 = var10.setHelp("hi!");
    boolean var15 = var10.allowMultipleDeclarations();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var16 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    junit.framework.Assert.assertNotSame((java.lang.Object)var15, (java.lang.Object)var16);
    com.martiansoftware.jsap.stringparsers.FileStringParser var18 = var5.setMustBeFile(var15);
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var28 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    var5.setProperty("hi!", var48);
    var3.addText("hi!");
    java.lang.Object var52 = var0.parse("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "hi!"+ "'", var13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "hi!"+ "'", var52.equals("hi!"));

  }

  public void test378() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    java.lang.String var8 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var8, 10.0f, 10.0f, 1.0f);
    var3.setHelp(var8);
    java.lang.String[] var20 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);

  }

  public void test379() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.stringparsers.DateStringParser var15 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var15.setUp();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var26 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var26, "hi!", true, '4', "", var33);
    java.lang.String var35 = var15.getProperty("");
    java.lang.String[] var36 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.JSAPResult var37 = var3.parse(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var41 = var39.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var43 = var39.setRequired(false);
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    java.lang.String var46 = var44.getUsage();
    com.martiansoftware.jsap.FlaggedOption var47 = var43.setUsageName(var46);
    java.lang.Exception var48 = var37.getException(var46);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var58 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var66 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var58, "hi!", true, '4', "", var65);
    com.martiansoftware.jsap.UnspecifiedParameterException var67 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    java.lang.String var68 = var67.getID();
    float[] var69 = var37.getFloatArray(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);

  }

  public void test380() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    java.lang.String var8 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var8, 10.0f, 10.0f, 1.0f);
    var3.setHelp(var8);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var29 = var28.getShortFlag();
    java.lang.String var30 = var28.getSyntax();
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.lang.String var34 = var32.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    com.martiansoftware.jsap.IDMap var36 = var35.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var55 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var63 = var61.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var65 = var61.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var71 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var55, var58, false, '4', "hi!");
    var35.setUsage(var58);
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var76 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var80 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var81 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var82 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var85 = new com.martiansoftware.jsap.TestOption();
    int var86 = var85.countTestCases();
    int var87 = var85.countTestCases();
    java.lang.String var88 = com.martiansoftware.util.StringUtils.padRight("hi!", var87);
    com.martiansoftware.jsap.SimpleJSAP var89 = var35.setScreenWidth(var87);
    var35.finalize();
    boolean var91 = var35.messagePrinted();
    int var92 = var35.getScreenWidth();
    java.lang.String var93 = com.martiansoftware.util.StringUtils.padRight(var30, var92);
    java.lang.String var94 = com.martiansoftware.util.StringUtils.padRightToWidth(var8, var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "[-4|--hi!]"+ "'", var30.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + "hi! "+ "'", var88.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + "[-4|--hi!] "+ "'", var93.equals("[-4|--hi!] "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "hi!"+ "'", var94.equals("hi!"));

  }

  public void test381() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.setUp();
    var0.testSimpleDefault();

  }

  public void test382() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    java.lang.String var5 = var0.getId();
    com.martiansoftware.jsap.Parameter var6 = var0.getParameter();
    java.lang.String var7 = var0.getId();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var12 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var13 = var9.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var14 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var15 = var9.setStringParser((com.martiansoftware.jsap.StringParser)var14);
    com.martiansoftware.jsap.ant.SwitchConfiguration var16 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var17 = var16.getLongflag();
    var16.setShortflag('#');
    java.lang.String var20 = var16.getLongflag();
    var16.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var23 = var9.setListSeparator('#');
    java.lang.String var24 = var9.getLongFlag();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var25 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var26 = var25.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var27 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var28 = var27.getLongflag();
    var27.setShortflag('#');
    java.lang.String var31 = var27.getLongflag();
    char var32 = var27.getShortflag();
    var25.setShortflag(var32);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var38 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var39 = var35.setHelp("hi!");
    var35.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var42 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    java.lang.String var45 = var43.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var46 = new com.martiansoftware.jsap.SimpleJSAP(var45);
    boolean var47 = var46.messagePrinted();
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var59 = var48.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var60 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    com.martiansoftware.jsap.UnflaggedOption var61 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var42, var47, var59);
    boolean var62 = var61.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var66 = var64.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var67 = var61.setList(false);
    java.lang.String var68 = var67.getUsageName();
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    java.lang.String var71 = var69.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var72 = new com.martiansoftware.jsap.SimpleJSAP(var71);
    boolean var73 = var72.messagePrinted();
    java.lang.String var74 = var72.getHelp();
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    java.lang.String var77 = var75.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var78 = new com.martiansoftware.jsap.SimpleJSAP(var77);
    boolean var79 = var78.messagePrinted();
    java.lang.String var80 = var78.getHelp();
    com.martiansoftware.jsap.ParseException var81 = new com.martiansoftware.jsap.ParseException(var80);
    java.lang.String[] var82 = new java.lang.String[] { var80};
    com.martiansoftware.jsap.JSAPResult var83 = var72.parse(var82);
    com.martiansoftware.jsap.JSAP var84 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var85 = var84.getHelp();
    java.lang.String var86 = var84.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var87 = new com.martiansoftware.jsap.SimpleJSAP(var86);
    float[] var88 = var83.getFloatArray(var86);
    boolean var89 = var83.success();
    com.martiansoftware.jsap.UnflaggedOption var90 = var67.setList(var89);
    var25.setAllowmultipledeclarations(var89);
    boolean var92 = var25.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var93 = var9.setAllowMultipleDeclarations(var92);
    boolean var94 = var93.allowMultipleDeclarations();
    char var95 = var93.getListSeparator();
    var0.setShortflag(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!"+ "'", var12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "hi!"+ "'", var38.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var74.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var80.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + ""+ "'", var85.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + ""+ "'", var86.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == '#');

  }

  public void test383() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.UnspecifiedParameterException var19 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    java.lang.String var20 = var19.getID();
    com.martiansoftware.jsap.JSAPException var21 = new com.martiansoftware.jsap.JSAPException(var20);
    java.lang.String var22 = com.martiansoftware.util.StringUtils.noNull(var20);
    var0.setDefault(var22);
    char var24 = var0.getShortflag();
    java.lang.String var25 = var0.getLongflag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);

  }

  public void test384() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.getRequired();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var11 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var14 = new com.martiansoftware.jsap.TestOption();
    int var15 = var14.countTestCases();
    int var16 = var14.countTestCases();
    java.lang.String var17 = com.martiansoftware.util.StringUtils.padRight("hi!", var16);
    com.martiansoftware.jsap.TestUsageString var18 = new com.martiansoftware.jsap.TestUsageString(var17);
    var0.setStringparser(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "hi! "+ "'", var17.equals("hi! "));

  }

  public void test385() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    java.lang.String var7 = var3.getUsage();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var19 = var8.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var20 = new com.martiansoftware.jsap.SimpleJSAP(var19);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    java.lang.String var48 = var47.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var48);
    com.martiansoftware.jsap.TestFlaggedOption var50 = new com.martiansoftware.jsap.TestFlaggedOption(var48);
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch(var19, '4', var48);
    com.martiansoftware.jsap.Parameter var52 = var3.getByID(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "[--help]"+ "'", var7.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var48.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == null);

  }

  public void test386() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    java.lang.String var28 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var29 = var14.getURLArray(var28);
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.util.Iterator var32 = var30.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var33 = var30.getIDMap();
    java.lang.String var34 = var30.getHelp();
    java.lang.String var35 = var30.toString();
    java.lang.Object[] var36 = var14.getObjectArray(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var55 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var63 = var61.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var65 = var61.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var71 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var55, var58, false, '4', "hi!");
    java.lang.String var74 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var75 = com.martiansoftware.util.StringUtils.wrapToList(var58, 1);
    java.lang.String var76 = var14.getString(var58);
    com.martiansoftware.jsap.JSAP var77 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var86 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var87 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var88 = var77.getHelp((-1), "hi!");
    long[] var89 = var14.getLongArray("hi!");
    java.lang.String var90 = com.martiansoftware.util.StringUtils.noNull("hi!");
    com.martiansoftware.jsap.RequiredParameterMissingException var91 = new com.martiansoftware.jsap.RequiredParameterMissingException("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "hi!"+ "'", var74.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + ""+ "'", var88.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + "hi!"+ "'", var90.equals("hi!"));

  }

  public void test387() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getShortflag();
    char var4 = var0.getShortflag();
    boolean var5 = var0.hasProperties();
    com.martiansoftware.jsap.Parameter var6 = var0.getParameter();
    java.lang.String var7 = var6.getUsageName();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == null);

  }

  public void test388() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String[] var19 = var18.getDefault();
    com.martiansoftware.jsap.StringParser var20 = var18.getStringParser();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    boolean var25 = var24.messagePrinted();
    java.lang.String var26 = var24.getHelp();
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var28 = var27.getHelp();
    java.lang.String var29 = var27.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var30 = new com.martiansoftware.jsap.SimpleJSAP(var29);
    boolean var31 = var30.messagePrinted();
    java.lang.String var32 = var30.getHelp();
    com.martiansoftware.jsap.ParseException var33 = new com.martiansoftware.jsap.ParseException(var32);
    java.lang.String[] var34 = new java.lang.String[] { var32};
    com.martiansoftware.jsap.JSAPResult var35 = var24.parse(var34);
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    float[] var40 = var35.getFloatArray(var38);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var50 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var53 = var35.getCharArray("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    java.lang.String var56 = var54.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var57 = new com.martiansoftware.jsap.SimpleJSAP(var56);
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var57.unregisterParameter((com.martiansoftware.jsap.Parameter)var59);
    com.martiansoftware.jsap.TestOption var61 = new com.martiansoftware.jsap.TestOption();
    int var62 = var61.countTestCases();
    int var63 = var61.countTestCases();
    int var64 = var61.countTestCases();
    java.lang.String var65 = var57.getHelp(var64);
    char[] var66 = var35.getCharArray(var65);
    com.martiansoftware.jsap.Parameter var67 = var18.setHelp(var65);
    com.martiansoftware.jsap.StringParser var68 = var18.getStringParser();
    char var69 = var18.getShortFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var26.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var32.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var65.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == '\u0000');

  }

  public void test389() throws Throwable {

    com.martiansoftware.jsap.stringparsers.StringStringParser var0 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var1 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var2 = var1.getParameter();
    boolean var3 = var1.declaredListSeparator();
    char var4 = var1.getShortflag();
    boolean var5 = var1.getIslist();
    boolean var6 = var1.hasProperties();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var14 = var13.getHelp();
    java.lang.String var15 = var13.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var16 = new com.martiansoftware.jsap.SimpleJSAP(var15);
    boolean var17 = var16.messagePrinted();
    java.lang.String var18 = var16.getHelp();
    com.martiansoftware.jsap.ParseException var19 = new com.martiansoftware.jsap.ParseException(var18);
    java.lang.String[] var20 = new java.lang.String[] { var18};
    com.martiansoftware.jsap.JSAPResult var21 = var10.parse(var20);
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var23 = var22.getHelp();
    java.util.Iterator var24 = var22.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var25 = var22.getIDMap();
    java.lang.String var26 = var22.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var30 = var21.getByte(var26, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var31 = new com.martiansoftware.jsap.QualifiedSwitch(var26);
    boolean var32 = var31.required();
    char var33 = var31.getShortFlag();
    var1.setListseparator(var33);
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var44 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var52 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var44, "hi!", true, '4', "", var51);
    java.lang.Character var53 = var52.getShortFlagCharacter();
    java.lang.Character var54 = var52.getShortFlagCharacter();
    var1.setShortflag((char)var54);
    java.lang.String var58 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var63 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var64 = var60.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var65 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var66 = var65.getID();
    java.lang.String var67 = var65.getID();
    com.martiansoftware.jsap.JSAPException var68 = new com.martiansoftware.jsap.JSAPException(var58, (java.lang.Throwable)var65);
    java.lang.String var69 = var65.getID();
    java.lang.String var70 = var65.getID();
    var1.setLongflag(var70);
    java.lang.Object var72 = var0.parse(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var18.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + '4'+ "'", var53.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + '4'+ "'", var54.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "hi!"+ "'", var58.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "hi!"+ "'", var63.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + "hi!"+ "'", var66.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "hi!"+ "'", var67.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "hi!"+ "'", var69.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "hi!"+ "'", var70.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "hi!"+ "'", var72.equals("hi!"));

  }

  public void test390() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    java.util.Iterator var9 = var6.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    boolean var15 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var28 = var17.getHelp((-1), "hi!");
    java.lang.String var29 = var13.getHelp(100, "hi!");
    java.lang.String var30 = var6.getHelp(100);
    com.martiansoftware.jsap.Flagged var31 = var3.getByLongFlag(var30);
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.lang.String var34 = var32.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    boolean var36 = var35.messagePrinted();
    java.lang.String var37 = var35.getHelp();
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    java.lang.String var40 = var38.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var41 = new com.martiansoftware.jsap.SimpleJSAP(var40);
    boolean var42 = var41.messagePrinted();
    java.lang.String var43 = var41.getHelp();
    com.martiansoftware.jsap.ParseException var44 = new com.martiansoftware.jsap.ParseException(var43);
    java.lang.String[] var45 = new java.lang.String[] { var43};
    com.martiansoftware.jsap.JSAPResult var46 = var35.parse(var45);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var50 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var54 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var55 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var56 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var57 = var46.getClass("hi!");
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var61 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var67 = var66.getShortFlag();
    char var68 = var66.getShortFlag();
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    java.lang.String var71 = var69.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var72 = new com.martiansoftware.jsap.SimpleJSAP(var71);
    com.martiansoftware.jsap.Switch var73 = var66.setDefault(var71);
    com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource var74 = new com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource();
    int var75 = var74.countTestCases();
    int var76 = var46.getInt(var71, var75);
    var3.setHelp(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var29.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var37.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var43.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);

  }

  public void test391() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.Defaults var3 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var4 = var3.idIterator();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var14 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.lang.Character var36 = var35.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var39 = var35.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var40 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var41 = new java.lang.String[] { "hi!"};
    var3.addDefault("hi!", var41);
    java.lang.String var43 = com.martiansoftware.util.StringUtils.noNull("hi!");
    var0.setId("hi!");
    char var45 = var0.getShortflag();
    char var46 = var0.getShortflag();
    java.lang.String var47 = var0.getStringparser();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + '4'+ "'", var36.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == null);

  }

  public void test392() throws Throwable {

    com.martiansoftware.jsap.stringparsers.PackageStringParser var0 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var2 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var3 = var2.idIterator();
    com.martiansoftware.jsap.JSAP var4 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var15 = var4.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var25 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var33 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var25, "hi!", true, '4', "", var32);
    java.lang.String[] var34 = new java.lang.String[] { var32};
    var2.addDefault(var15, var34);
    java.lang.String[] var36 = new java.lang.String[] { var15};
    com.martiansoftware.jsap.JSAPResult var37 = var1.parse(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var42 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var43 = var39.setHelp("hi!");
    var39.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var46 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    boolean var51 = var50.messagePrinted();
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var62 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var63 = var52.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var64 = new com.martiansoftware.jsap.SimpleJSAP(var63);
    com.martiansoftware.jsap.UnflaggedOption var65 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var46, var51, var63);
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.Object[] var68 = new java.lang.Object[] { var67};
    java.lang.Object[] var69 = var37.getObjectArray("", var68);
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var75 = var37.getByte("hi!", (byte)(-1));
    java.util.Iterator var76 = var37.getBadParameterIDIterator();
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var80 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var84 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var85 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var86 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var89 = new com.martiansoftware.jsap.ParseException("hi!");
    java.net.URL[] var90 = var37.getURLArray("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var91 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "hi!"+ "'", var42.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);

  }

  public void test393() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.Exception var70 = var36.getException("");
    com.martiansoftware.jsap.ant.ParserProperty var71 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var76 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var77 = var73.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var78 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var71.setValue("hi!");
    boolean var80 = var36.userSpecified("hi!");
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals("hi!", (byte)(-1), (byte)(-1));
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var92 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser("hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "hi!"+ "'", var76.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);

  }

  public void test394() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.stringparsers.FileStringParser var2 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var2.tearDown();
    var2.setUp();
    boolean var5 = var2.mustExist();
    var2.tearDown();
    boolean var7 = var2.mustBeFile();
    com.martiansoftware.jsap.FlaggedOption var8 = var1.setList(var7);
    java.lang.String var9 = var1.getID();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    java.lang.String var15 = var13.getHelp();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    java.lang.String var21 = var19.getHelp();
    com.martiansoftware.jsap.ParseException var22 = new com.martiansoftware.jsap.ParseException(var21);
    java.lang.String[] var23 = new java.lang.String[] { var21};
    com.martiansoftware.jsap.JSAPResult var24 = var13.parse(var23);
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var26 = var25.getHelp();
    java.lang.String var27 = var25.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var28 = new com.martiansoftware.jsap.SimpleJSAP(var27);
    float[] var29 = var24.getFloatArray(var27);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var39 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var42 = var24.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var47 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var48 = var44.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var49 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var50 = var49.getID();
    boolean[] var51 = var24.getBooleanArray(var50);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var56 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var57 = var53.setHelp("hi!");
    java.lang.String[] var58 = var24.getStringArray("hi!");
    java.util.Iterator var59 = var24.getErrorMessageIterator();
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    java.util.Iterator var62 = var60.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var63 = var60.getIDMap();
    java.lang.String var64 = var60.getUsage();
    com.martiansoftware.jsap.UnknownFlagException var65 = new com.martiansoftware.jsap.UnknownFlagException(var64);
    java.net.InetAddress[] var66 = var24.getInetAddressArray(var64);
    com.martiansoftware.jsap.FlaggedOption var67 = var1.setDefault(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var15.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var21.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "hi!"+ "'", var47.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "hi!"+ "'", var50.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "hi!"+ "'", var56.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);

  }

  public void test395() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var6 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var5);
    java.lang.String var7 = var5.toString();
    var0.setLongflag(var7);
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var18 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var19 = var18.countTestCases();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var23.unregisterParameter((com.martiansoftware.jsap.Parameter)var25);
    com.martiansoftware.jsap.TestOption var27 = new com.martiansoftware.jsap.TestOption();
    int var28 = var27.countTestCases();
    int var29 = var27.countTestCases();
    int var30 = var27.countTestCases();
    java.lang.String var31 = var23.getHelp(var30);
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.lang.String var34 = var32.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    boolean var36 = var35.messagePrinted();
    java.lang.String var37 = var35.getHelp();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var47 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var48 = var47.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var49 = var35.setScreenWidth(var48);
    junit.framework.Assert.assertEquals(var30, var48);
    junit.framework.Assert.assertEquals(var19, var48);
    com.martiansoftware.jsap.TestOption var52 = new com.martiansoftware.jsap.TestOption();
    int var53 = var52.countTestCases();
    var52.testSettersAndGetters();
    var52.testSettersAndGetters();
    int var56 = var52.countTestCases();
    junit.framework.Assert.assertEquals(var7, var48, var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var7.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var31.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var37.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);

  }

  public void test396() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var12 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = var7.setStringParser((com.martiansoftware.jsap.StringParser)var12);
    com.martiansoftware.jsap.ant.SwitchConfiguration var14 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var15 = var14.getLongflag();
    var14.setShortflag('#');
    java.lang.String var18 = var14.getLongflag();
    var14.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var21 = var7.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    java.lang.String[] var40 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.FlaggedOption var41 = var21.setDefault(var40);
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var41);
    com.martiansoftware.jsap.stringparsers.URLStringParser var43 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var44 = var41.setStringParser((com.martiansoftware.jsap.StringParser)var43);
    java.lang.Character var45 = var41.getShortFlagCharacter();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == null);

  }

  public void test397() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var14 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var22 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var14, "hi!", true, '4', "", var21);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var23 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var31 = var29.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var33 = var29.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var23, var26, false, '4', "hi!");
    java.lang.String[] var40 = var39.getDefault();
    java.lang.String var41 = var39.getHelp();
    java.lang.String var42 = var39.getSyntax();
    var3.setHelp(var42);
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    java.lang.String var46 = var44.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var47 = new com.martiansoftware.jsap.SimpleJSAP(var46);
    boolean var48 = var47.messagePrinted();
    java.lang.String var49 = var47.getHelp();
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    java.lang.String var52 = var50.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var52);
    boolean var54 = var53.messagePrinted();
    java.lang.String var55 = var53.getHelp();
    com.martiansoftware.jsap.ParseException var56 = new com.martiansoftware.jsap.ParseException(var55);
    java.lang.String[] var57 = new java.lang.String[] { var55};
    com.martiansoftware.jsap.JSAPResult var58 = var47.parse(var57);
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    java.lang.String var61 = var59.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var62 = new com.martiansoftware.jsap.SimpleJSAP(var61);
    float[] var63 = var58.getFloatArray(var61);
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var71 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var72 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var73 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var76 = var58.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var81 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var82 = var78.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var83 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var84 = var83.getID();
    boolean[] var85 = var58.getBooleanArray(var84);
    com.martiansoftware.jsap.SyntaxException var86 = new com.martiansoftware.jsap.SyntaxException(var84);
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var90 = var88.setRequired(false);
    com.martiansoftware.jsap.defaultsources.PropertyDefaultSource var91 = new com.martiansoftware.jsap.defaultsources.PropertyDefaultSource(var84, false);
    java.lang.String[] var92 = new java.lang.String[] { var84};
    com.martiansoftware.jsap.JSAPResult var93 = var3.parse(var92);
    java.lang.String var94 = var3.getHelp();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var42.equals("[(-4|--hi!)[:<hi!>]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var49.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var55.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "hi!"+ "'", var81.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + "hi!"+ "'", var84.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var94.equals("[(-4|--hi!)[:<hi!>]]"));

  }

  public void test398() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ShortStringParser var0 = new com.martiansoftware.jsap.stringparsers.ShortStringParser();
    com.martiansoftware.jsap.TestCommandLineTokenizer var1 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var1.test3();
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    var1.setName(var5);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var7 = var0.parse(var5);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));

  }

  public void test399() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var6 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var5);
    java.lang.String var7 = var5.toString();
    var0.setLongflag(var7);
    com.martiansoftware.jsap.stringparsers.DateStringParser var9 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var14 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var15 = var11.setHelp("hi!");
    var11.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var18 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    boolean var23 = var22.messagePrinted();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var29 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var34 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var35 = var24.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var36 = new com.martiansoftware.jsap.SimpleJSAP(var35);
    com.martiansoftware.jsap.UnflaggedOption var37 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var18, var23, var35);
    com.martiansoftware.jsap.ant.SwitchConfiguration var38 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var39 = var38.getLongflag();
    var38.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var59 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var51, "hi!", true, '4', "", var58);
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var9.setProperty("", "hi!");
    var0.setLongflag("");
    com.martiansoftware.jsap.ant.ParserProperty[] var72 = var0.getParserProperties();
    char var73 = var0.getShortflag();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var74 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var75 = var74.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var76 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var77 = var76.getLongflag();
    var76.setShortflag('#');
    java.lang.String var80 = var76.getLongflag();
    char var81 = var76.getShortflag();
    var74.setShortflag(var81);
    java.lang.String[] var83 = var74.getDefaults();
    boolean var84 = var74.getIslist();
    var0.setAllowmultipledeclarations(var84);
    java.lang.String[] var86 = var0.getDefaults();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var7.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!"+ "'", var14.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == null);

  }

  public void test400() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.JSAPResult var43 = var0.parse(var42);
    java.lang.String var44 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));

  }

  public void test401() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var9.testSwitchParse();
    var9.testLongFlag();
    var9.testID();
    java.lang.String var13 = var9.getName();
    var9.testID();
    var9.testShortFlag();
    var9.testSwitchParse();
    java.lang.String var17 = var9.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "hi!"+ "'", var13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "hi!(com.martiansoftware.jsap.TestSwitch)"+ "'", var17.equals("hi!(com.martiansoftware.jsap.TestSwitch)"));

  }

  public void test402() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    java.lang.String var7 = var5.getSyntax();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var9 = var8.getHelp();
    java.lang.String var10 = var8.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var11 = new com.martiansoftware.jsap.SimpleJSAP(var10);
    boolean var12 = var11.messagePrinted();
    java.lang.String var13 = var11.getHelp();
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException(var13);
    com.martiansoftware.jsap.FlaggedOption var15 = var5.setUsageName(var13);
    java.lang.String var16 = com.martiansoftware.util.StringUtils.noNull(var13);
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var18 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var19 = var18.idIterator();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var31 = var20.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    java.lang.String[] var50 = new java.lang.String[] { var48};
    var18.addDefault(var31, var50);
    java.lang.String[] var52 = new java.lang.String[] { var31};
    com.martiansoftware.jsap.JSAPResult var53 = var17.parse(var52);
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    java.lang.String var56 = var54.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var57 = new com.martiansoftware.jsap.SimpleJSAP(var56);
    boolean var58 = var57.messagePrinted();
    java.lang.String var59 = var57.getHelp();
    com.martiansoftware.jsap.JSAPResult var60 = var17.parse(var59);
    junit.framework.Assert.assertNotNull(var13, (java.lang.Object)var59);
    com.martiansoftware.jsap.SimpleJSAP var62 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "[<hi!>]"+ "'", var7.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var13.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var16.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var59.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);

  }

  public void test403() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.Defaults var3 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var4 = var3.idIterator();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var14 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.lang.Character var36 = var35.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var39 = var35.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var40 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var41 = new java.lang.String[] { "hi!"};
    var3.addDefault("hi!", var41);
    java.lang.String var43 = com.martiansoftware.util.StringUtils.noNull("hi!");
    var0.setId("hi!");
    char var45 = var0.getShortflag();
    char var46 = var0.getShortflag();
    com.martiansoftware.jsap.ant.SwitchConfiguration var47 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    boolean var48 = var47.hasProperties();
    var0.setRequired(var48);
    java.lang.String[] var50 = var0.getDefaults();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + '4'+ "'", var36.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == null);

  }

  public void test404() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    char var2 = var0.getShortflag();
    java.lang.String var3 = var0.getLongflag();
    java.lang.String var4 = var0.getLongflag();
    char var5 = var0.getShortflag();
    java.lang.String[] var6 = var0.getDefaults();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == null);

  }

  public void test405() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.IntSizeStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    float[] var20 = var15.getFloatArray(var18);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var30 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var33 = var15.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var38 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var39 = var35.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var40 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var41 = var40.getID();
    boolean[] var42 = var15.getBooleanArray(var41);
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var47 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var48 = var44.setHelp("hi!");
    java.lang.String[] var49 = var15.getStringArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var53 = var51.setRequired(false);
    java.lang.String var54 = var51.getID();
    java.lang.String[] var55 = var51.getDefault();
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    java.lang.String var58 = var57.getFlag();
    com.martiansoftware.jsap.FlaggedOption var59 = var51.setDefault(var58);
    float[] var60 = var15.getFloatArray(var58);
    java.lang.Object var61 = var0.parse(var58);
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var65 = var63.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var67 = var63.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var76 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var77 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var67.addDefault("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var81 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "hi!"+ "'", var38.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "hi!"+ "'", var41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "hi!"+ "'", var47.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "hi!"+ "'", var54.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "4"+ "'", var58.equals("4"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + 4+ "'", var61.equals(4));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);

  }

  public void test406() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.Exception var70 = var36.getException("");
    com.martiansoftware.jsap.ant.ParserProperty var71 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var76 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var77 = var73.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var78 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var71.setValue("hi!");
    boolean var80 = var36.userSpecified("hi!");
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals("hi!", (byte)(-1), (byte)(-1));
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      com.martiansoftware.jsap.JSAP var92 = new com.martiansoftware.jsap.JSAP("hi!");
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test407() throws Throwable {

    com.martiansoftware.jsap.TestOption var0 = new com.martiansoftware.jsap.TestOption();
    int var1 = var0.countTestCases();
    java.lang.String var2 = var0.toString();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var7 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var8 = var4.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var9 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var10 = var4.setStringParser((com.martiansoftware.jsap.StringParser)var9);
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var14 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var18 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var19 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var20 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var23 = var10.setHelp("hi!");
    java.lang.String var24 = var23.getUsageName();
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var25 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser(var24);
    var0.setName(var24);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null(com.martiansoftware.jsap.TestOption)"+ "'", var2.equals("null(com.martiansoftware.jsap.TestOption)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "hi!"+ "'", var24.equals("hi!"));

  }

  public void test408() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.UnspecifiedParameterException var18 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    java.lang.String var19 = var18.getID();
    com.martiansoftware.jsap.JSAPException var20 = new com.martiansoftware.jsap.JSAPException(var19);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var39 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var47 = var45.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var49 = var45.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var54 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var55 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, var42, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var56 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    int var57 = var56.getScreenWidth();
    junit.framework.Assert.assertNotNull(var19, (java.lang.Object)var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 80);

  }

  public void test409() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigDecimalStringParser var0 = com.martiansoftware.jsap.stringparsers.BigDecimalStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var10 = var9.getShortFlag();
    char var11 = var9.getShortFlag();
    com.martiansoftware.jsap.JSAP var12 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var13 = var12.getHelp();
    java.lang.String var14 = var12.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var15 = new com.martiansoftware.jsap.SimpleJSAP(var14);
    com.martiansoftware.jsap.Switch var16 = var9.setDefault(var14);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var17 = var0.parse(var14);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);

  }

  public void test410() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getUsage();
    com.martiansoftware.jsap.IDMap var5 = var0.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var15 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var23 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var15, "hi!", true, '4', "", var22);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var24 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var26 = var25.getHelp();
    java.lang.String var27 = var25.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var28 = new com.martiansoftware.jsap.SimpleJSAP(var27);
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var32 = var30.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var34 = var30.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var40 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, var27, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var46 = var40.setRequired(var45);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var47 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var48 = var47.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var49 = var40.setAllowMultipleDeclarations(var48);
    boolean var50 = var49.required();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var51 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var52 = var51.hasProperties();
    java.lang.String var53 = var51.getStringparser();
    boolean var54 = var51.getIslist();
    com.martiansoftware.jsap.ant.ParserProperty[] var55 = var51.getParserProperties();
    java.lang.String var56 = var51.getId();
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    java.lang.String var59 = var57.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var60 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var60.unregisterParameter((com.martiansoftware.jsap.Parameter)var62);
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var71 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var72 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var73 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var79 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var80 = var79.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var81 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var73, "hi!", true, '4', "", var80);
    java.lang.String var82 = var81.getSyntax();
    java.lang.Character var83 = var81.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var84 = var62.setListSeparator((char)var83);
    boolean var85 = var62.isList();
    var51.setRequired(var85);
    com.martiansoftware.jsap.FlaggedOption var87 = var49.setAllowMultipleDeclarations(var85);
    var0.unregisterParameter((com.martiansoftware.jsap.Parameter)var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + ""+ "'", var80.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var82.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + '4'+ "'", var83.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);

  }

  public void test411() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String[] var19 = var18.getDefault();
    com.martiansoftware.jsap.StringParser var20 = var18.getStringParser();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var21 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var22 = var21.hasProperties();
    com.martiansoftware.jsap.Parameter var23 = var21.getParameter();
    boolean var24 = var21.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var25 = var18.setRequired(var24);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var26 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var27 = var26.getParameter();
    java.lang.String var28 = var26.getStringparser();
    char var29 = var26.getListseparator();
    boolean var30 = var26.hasProperties();
    com.martiansoftware.jsap.ant.ParserProperty[] var31 = var26.getParserProperties();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.lang.String var34 = var32.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    boolean var36 = var35.messagePrinted();
    java.lang.String var37 = var35.getHelp();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var47 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var48 = var47.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var49 = var35.setScreenWidth(var48);
    boolean var50 = var49.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var55 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var56 = var52.setHelp("hi!");
    var52.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var59 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    java.lang.String var62 = var60.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var63 = new com.martiansoftware.jsap.SimpleJSAP(var62);
    boolean var64 = var63.messagePrinted();
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var70 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var74 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var75 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var76 = var65.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var77 = new com.martiansoftware.jsap.SimpleJSAP(var76);
    com.martiansoftware.jsap.UnflaggedOption var78 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var59, var64, var76);
    boolean var79 = var78.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var83 = var81.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var84 = var78.setList(false);
    boolean var85 = var84.isGreedy();
    junit.framework.Assert.assertEquals(var50, var85);
    var26.setIslist(var85);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var88 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var89 = var88.hasProperties();
    boolean var90 = var88.getIslist();
    var26.setIslist(var90);
    junit.framework.Assert.assertEquals(var24, var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var37.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!"+ "'", var55.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);

  }

  public void test412() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.util.Iterator var3 = var1.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var4 = var1.getIDMap();
    java.lang.String var5 = var1.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    java.util.Iterator var9 = var6.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    boolean var15 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var28 = var17.getHelp((-1), "hi!");
    java.lang.String var29 = var13.getHelp(100, "hi!");
    java.lang.String var30 = var6.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var40 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var48 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var40, "hi!", true, '4', "", var47);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var50 = var1.getHelp(100, "");
    java.lang.String var51 = var1.toString();
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    java.lang.String var55 = var53.getUsage();
    java.util.Iterator var56 = var53.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    java.lang.String var59 = var57.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var60 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    boolean var61 = var60.messagePrinted();
    boolean var62 = var60.messagePrinted();
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var69 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var73 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var74 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var75 = var64.getHelp((-1), "hi!");
    java.lang.String var76 = var60.getHelp(100, "hi!");
    java.lang.String var77 = var53.getHelp(100);
    java.lang.String var78 = var1.getHelp(1, var77);
    java.lang.String var79 = var0.getHelp(1);
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var80 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var29.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var76.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));

  }

  public void test413() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test7();
    junit.framework.TestResult var5 = var0.run();
    junit.framework.Assert.assertNotNull((java.lang.Object)var0);
    var0.test7();
    var0.test5();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);

  }

  public void test414() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var4 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var5 = var4.hasProperties();
    var0.setRequired(var5);
    com.martiansoftware.jsap.ant.ParserProperty[] var7 = var0.getParserProperties();
    char var8 = var0.getListseparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == ':');

  }

  public void test415() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var7 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var8 = var7.getID();
    java.lang.Object var9 = var0.parse(var8);
    com.martiansoftware.jsap.stringparsers.FileStringParser var10 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var10.tearDown();
    var10.setUp();
    var10.setUp();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var18 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var19 = var15.setHelp("hi!");
    boolean var20 = var15.allowMultipleDeclarations();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var21 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    junit.framework.Assert.assertNotSame((java.lang.Object)var20, (java.lang.Object)var21);
    com.martiansoftware.jsap.stringparsers.FileStringParser var23 = var10.setMustBeFile(var20);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var24 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var25 = var24.hasProperties();
    java.lang.String var26 = var24.getStringparser();
    boolean var27 = var24.declaredListSeparator();
    junit.framework.Assert.assertNotNull((java.lang.Object)var27);
    com.martiansoftware.jsap.xml.JSAPConfig var29 = new com.martiansoftware.jsap.xml.JSAPConfig();
    java.lang.String var30 = var29.getHelp();
    java.lang.String var31 = var29.getUsage();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.lang.String var34 = var32.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    boolean var36 = var35.messagePrinted();
    java.lang.String var37 = var35.getHelp();
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    java.lang.String var40 = var38.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var41 = new com.martiansoftware.jsap.SimpleJSAP(var40);
    boolean var42 = var41.messagePrinted();
    java.lang.String var43 = var41.getHelp();
    com.martiansoftware.jsap.ParseException var44 = new com.martiansoftware.jsap.ParseException(var43);
    java.lang.String[] var45 = new java.lang.String[] { var43};
    com.martiansoftware.jsap.JSAPResult var46 = var35.parse(var45);
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    float[] var51 = var46.getFloatArray(var49);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var61 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var64 = var46.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var69 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var70 = var66.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var71 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var72 = var71.getID();
    boolean[] var73 = var46.getBooleanArray(var72);
    com.martiansoftware.jsap.SyntaxException var74 = new com.martiansoftware.jsap.SyntaxException(var72);
    java.lang.String var75 = var74.toString();
    var29.setHelp(var75);
    com.martiansoftware.jsap.UnflaggedOption var77 = new com.martiansoftware.jsap.UnflaggedOption(var8, (com.martiansoftware.jsap.StringParser)var23, var27, var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "hi!"+ "'", var18.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var37.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var43.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "hi!"+ "'", var69.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "hi!"+ "'", var72.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "com.martiansoftware.jsap.SyntaxException: hi!"+ "'", var75.equals("com.martiansoftware.jsap.SyntaxException: hi!"));

  }

  public void test416() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var38 = var34.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var39 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var40 = var39.getID();
    boolean[] var41 = var14.getBooleanArray(var40);
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var46 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var47 = var43.setHelp("hi!");
    java.lang.String[] var48 = var14.getStringArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var52 = var50.setRequired(false);
    java.lang.String var53 = var50.getID();
    java.lang.String[] var54 = var50.getDefault();
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    java.lang.String var57 = var56.getFlag();
    com.martiansoftware.jsap.FlaggedOption var58 = var50.setDefault(var57);
    float[] var59 = var14.getFloatArray(var57);
    java.util.Iterator var60 = var14.getErrorMessageIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!"+ "'", var40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "hi!"+ "'", var46.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "hi!"+ "'", var53.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "4"+ "'", var57.equals("4"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);

  }

  public void test417() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    char var2 = var1.getShortFlag();
    boolean var3 = var1.allowMultipleDeclarations();
    java.lang.String var4 = var1.getSyntax();
    com.martiansoftware.jsap.stringparsers.DateStringParser var5 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var5.setUp();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var16 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var23 = var22.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var24 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var16, "hi!", true, '4', "", var23);
    java.lang.String var25 = var5.getProperty("");
    java.lang.String[] var27 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var5.getProperty("", "hi!");
    com.martiansoftware.jsap.FlaggedOption var38 = var1.setUsageName("hi!");
    boolean var39 = var1.required();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var43 = var41.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var45 = var41.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var46 = var1.setRequired(false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "[<hi!>]"+ "'", var4.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);

  }

  public void test418() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.getRequired();
    boolean var2 = var0.hasProperties();
    java.lang.String var3 = var0.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);

  }

  public void test419() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.getRequired();
    boolean var2 = var0.hasProperties();
    boolean var3 = var0.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var13 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var21 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var13, "hi!", true, '4', "", var20);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var22 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var24 = var23.getHelp();
    java.lang.String var25 = var23.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var30 = var28.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var32 = var28.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var22, var25, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    var39.setUsage(var42);
    java.lang.String var45 = var39.toString();
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var49.unregisterParameter((com.martiansoftware.jsap.Parameter)var51);
    var39.unregisterParameter((com.martiansoftware.jsap.Parameter)var51);
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var62 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var63 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var66 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var67 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String[] var68 = new java.lang.String[] { "hi!"};
    com.martiansoftware.jsap.JSAPResult var69 = var39.parse(var68);
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var73 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var77 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var78 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var79 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var85 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var86 = var85.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var87 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var79, "hi!", true, '4', "", var86);
    java.lang.Character var88 = var87.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var90 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var91 = var87.setLongFlag("hi!");
    java.lang.Object[] var92 = var69.getObjectArray("hi!");
    var0.setDefault("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + ""+ "'", var86.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + '4'+ "'", var88.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);

  }

  public void test420() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var40 = var34.setRequired(var39);
    java.lang.String[] var42 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.FlaggedOption var43 = var34.setDefault(var42);
    com.martiansoftware.jsap.ant.SwitchConfiguration var44 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var45 = var44.getLongflag();
    var44.setShortflag('#');
    java.lang.String var48 = var44.getLongflag();
    java.lang.String var49 = var44.getId();
    com.martiansoftware.jsap.Parameter var50 = var44.getParameter();
    boolean var51 = var44.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var52 = var34.setList(var51);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var53 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var54 = var53.hasProperties();
    java.lang.String var55 = var53.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var56 = new com.martiansoftware.jsap.ant.ParserProperty();
    var53.addConfiguredProperty(var56);
    boolean var58 = var53.getGreedy();
    com.martiansoftware.jsap.FlaggedOption var59 = var34.setList(var58);
    java.lang.String var60 = var34.getUsage();
    com.martiansoftware.jsap.JSAPException var61 = new com.martiansoftware.jsap.JSAPException(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var60.equals("[(-4|--hi!)[:<hi!>]]"));

  }

  public void test421() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.TestOption var33 = new com.martiansoftware.jsap.TestOption();
    int var34 = var33.countTestCases();
    java.lang.String var35 = var33.toString();
    java.lang.Exception var36 = var14.getException(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var48 = var37.getHelp((-1), "hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    java.lang.String var51 = var49.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    boolean var53 = var52.messagePrinted();
    boolean var54 = var52.messagePrinted();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var61 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var67 = var56.getHelp((-1), "hi!");
    java.lang.String var68 = var52.getHelp(100, "hi!");
    java.lang.String var69 = var37.getHelp(100);
    short var71 = var14.getShort(var69, (short)1);
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var73 = var72.getHelp();
    java.lang.String var74 = var72.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var75 = new com.martiansoftware.jsap.SimpleJSAP(var74);
    com.martiansoftware.jsap.IDMap var76 = var75.getIDMap();
    java.lang.String var77 = var75.getUsage();
    com.martiansoftware.jsap.JSAP var78 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var83 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var86 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var87 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var88 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var89 = var78.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var90 = new com.martiansoftware.jsap.SimpleJSAP(var89);
    com.martiansoftware.jsap.JSAPException var91 = new com.martiansoftware.jsap.JSAPException(var89);
    com.martiansoftware.jsap.ParseException var92 = new com.martiansoftware.jsap.ParseException(var77, (java.lang.Throwable)var91);
    java.util.Iterator var93 = var14.getExceptionIterator(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "null(com.martiansoftware.jsap.TestOption)"+ "'", var35.equals("null(com.martiansoftware.jsap.TestOption)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var68.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == (short)1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "[--help]"+ "'", var77.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + ""+ "'", var89.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);

  }

  public void test422() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var16 = var15.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var17 = var3.setScreenWidth(var16);
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    java.lang.String var20 = var18.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var21 = new com.martiansoftware.jsap.SimpleJSAP(var20);
    boolean var22 = var21.messagePrinted();
    java.lang.String var23 = var21.getHelp();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    boolean var28 = var27.messagePrinted();
    java.lang.String var29 = var27.getHelp();
    com.martiansoftware.jsap.ParseException var30 = new com.martiansoftware.jsap.ParseException(var29);
    java.lang.String[] var31 = new java.lang.String[] { var29};
    com.martiansoftware.jsap.JSAPResult var32 = var21.parse(var31);
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var42 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var43 = var32.getClass("hi!");
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var55 = var44.getHelp((-1), "hi!");
    double var57 = var32.getDouble(var55, 0.0d);
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    java.lang.String var60 = var58.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    boolean var62 = var61.messagePrinted();
    java.lang.String var63 = var61.getHelp();
    com.martiansoftware.jsap.ParseException var64 = new com.martiansoftware.jsap.ParseException(var63);
    java.util.Iterator var65 = var32.getExceptionIterator(var63);
    java.lang.String[] var66 = new java.lang.String[] { var63};
    com.martiansoftware.jsap.JSAPResult var67 = var17.parse(var66);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var76 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var77 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var83 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var84 = var83.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var85 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var77, "hi!", true, '4', "", var84);
    java.lang.String var86 = var85.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var86);
    java.lang.Class[] var88 = var67.getClassArray(var86);
    com.martiansoftware.jsap.UnknownFlagException var90 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var91 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var90);
    java.lang.String var92 = var90.toString();
    com.martiansoftware.jsap.TestSwitch var93 = new com.martiansoftware.jsap.TestSwitch(var92);
    java.math.BigDecimal[] var94 = var67.getBigDecimalArray(var92);
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var95 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var23.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var29.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var63.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + ""+ "'", var84.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var86.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var92.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);

  }

  public void test423() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var11 = var0.getHelp((-1), "hi!");
    com.martiansoftware.jsap.JSAP var12 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var13 = var12.getHelp();
    java.lang.String var14 = var12.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var15 = new com.martiansoftware.jsap.SimpleJSAP(var14);
    boolean var16 = var15.messagePrinted();
    java.lang.String var17 = var15.getHelp();
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    java.lang.String var20 = var18.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var21 = new com.martiansoftware.jsap.SimpleJSAP(var20);
    boolean var22 = var21.messagePrinted();
    java.lang.String var23 = var21.getHelp();
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException(var23);
    java.lang.String[] var25 = new java.lang.String[] { var23};
    com.martiansoftware.jsap.JSAPResult var26 = var15.parse(var25);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var27 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var28 = var27.getParameter();
    boolean var29 = var27.declaredListSeparator();
    char var30 = var27.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var33 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var32);
    java.lang.String var34 = var32.toString();
    var27.setLongflag(var34);
    java.lang.String[] var36 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize(var34);
    var15.setHelp(var34);
    com.martiansoftware.jsap.Flagged var38 = var0.getByLongFlag(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var17.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var23.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var34.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == null);

  }

  public void test424() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var14 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var22 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var14, "hi!", true, '4', "", var21);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var23 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var31 = var29.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var33 = var29.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var23, var26, false, '4', "hi!");
    var3.setUsage(var26);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.UnspecifiedParameterException var59 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    var3.setHelp("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame("");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));

  }

  public void test425() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var9 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.UnspecifiedParameterException var10 = new com.martiansoftware.jsap.UnspecifiedParameterException("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var11 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser("hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test426() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = new com.martiansoftware.jsap.stringparsers.DateStringParser();
    var0.tearDown();
    var0.setUp();
    var0.tearDown();

  }

  public void test427() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.Defaults var37 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var38 = var37.idIterator();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var48 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var51 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var61 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var69 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var61, "hi!", true, '4', "", var68);
    java.lang.Character var70 = var69.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var73 = var69.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var74 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var75 = new java.lang.String[] { "hi!"};
    var37.addDefault("hi!", var75);
    java.lang.String var77 = com.martiansoftware.util.StringUtils.noNull("hi!");
    java.lang.String[] var78 = var36.getStringArray(var77);
    com.martiansoftware.jsap.TestOption var79 = new com.martiansoftware.jsap.TestOption();
    int var80 = var79.countTestCases();
    java.lang.String var81 = var79.toString();
    double[] var82 = var36.getDoubleArray(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + '4'+ "'", var70.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "hi!"+ "'", var77.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "null(com.martiansoftware.jsap.TestOption)"+ "'", var81.equals("null(com.martiansoftware.jsap.TestOption)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);

  }

  public void test428() throws Throwable {

    com.martiansoftware.jsap.xml.JSAPConfig var0 = new com.martiansoftware.jsap.xml.JSAPConfig();
    java.lang.String var1 = var0.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var2 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    java.lang.String var3 = var2.getStringparser();
    com.martiansoftware.jsap.Defaults var4 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var5 = var4.idIterator();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var17 = var6.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.lang.String[] var36 = new java.lang.String[] { var34};
    var4.addDefault(var17, var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var47 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var55 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var56 = var52.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var57 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var58 = var57.getID();
    java.lang.String[] var59 = new java.lang.String[] { var58};
    var4.addDefault("hi!", var59);
    var2.setId("hi!");
    var0.setUsage("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    var63.testLongFlag();
    var63.testShortFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!"+ "'", var55.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "hi!"+ "'", var58.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);

  }

  public void test429() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    java.lang.String var6 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    var10.finalize();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var17 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var18 = var14.setHelp("hi!");
    var14.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var21 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var23 = var22.getHelp();
    java.lang.String var24 = var22.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var25 = new com.martiansoftware.jsap.SimpleJSAP(var24);
    boolean var26 = var25.messagePrinted();
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var38 = var27.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    com.martiansoftware.jsap.UnflaggedOption var40 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var21, var26, var38);
    boolean var41 = var40.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var46 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var47 = var43.setHelp("hi!");
    var43.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var50 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    java.lang.String var53 = var51.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var54 = new com.martiansoftware.jsap.SimpleJSAP(var53);
    boolean var55 = var54.messagePrinted();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var61 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var67 = var56.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var68 = new com.martiansoftware.jsap.SimpleJSAP(var67);
    com.martiansoftware.jsap.UnflaggedOption var69 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var50, var55, var67);
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var73 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var77 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var78 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var79 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var85 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var86 = var85.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var87 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var79, "hi!", true, '4', "", var86);
    com.martiansoftware.jsap.UnflaggedOption var88 = var69.setRequired(true);
    com.martiansoftware.jsap.UnflaggedOption var89 = var40.setRequired(true);
    var10.registerParameter((com.martiansoftware.jsap.Parameter)var40);
    com.martiansoftware.jsap.TestOption var91 = new com.martiansoftware.jsap.TestOption();
    int var92 = var91.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var93 = var10.setScreenWidth(var92);
    com.martiansoftware.jsap.SimpleJSAP var94 = var3.setScreenWidth(var92);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var95 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var96 = var95.getParameter();
    boolean var97 = var95.declaredListSeparator();
    char var98 = var95.getListseparator();
    com.martiansoftware.jsap.Flagged var99 = var94.getByShortFlag(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "hi!"+ "'", var17.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "hi!"+ "'", var46.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + ""+ "'", var86.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var99 == null);

  }

  public void test430() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    boolean var3 = var0.mustExist();
    var0.tearDown();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var8 = new com.martiansoftware.jsap.SimpleJSAP(var7);
    boolean var9 = var8.messagePrinted();
    java.lang.String var10 = var8.getHelp();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    java.lang.String var16 = var14.getHelp();
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException(var16);
    java.lang.String[] var18 = new java.lang.String[] { var16};
    com.martiansoftware.jsap.JSAPResult var19 = var8.parse(var18);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var29 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var37 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var29, "hi!", true, '4', "", var36);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var38 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var39 = new java.lang.Object[] { var38};
    java.lang.Object[] var40 = var19.getObjectArray(var36, var39);
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var41 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException(var36);
    java.lang.String var42 = var0.getProperty(var36);
    boolean var43 = var0.mustExist();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)var43);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var10.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var16.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);

  }

  public void test431() throws Throwable {

    com.martiansoftware.jsap.TestParser var0 = new com.martiansoftware.jsap.TestParser();
    var0.testParser();
    var0.testParser();
    var0.testParser();
    var0.testMultipleDeclarations();
    var0.testMultipleDeclarations();
    var0.testMultipleDeclarations();

  }

  public void test432() throws Throwable {

    com.martiansoftware.jsap.Defaults var0 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var1 = var0.idIterator();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var13 = var2.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var17 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var21 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var22 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var23 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var30 = var29.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var31 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var23, "hi!", true, '4', "", var30);
    java.lang.String[] var32 = new java.lang.String[] { var30};
    var0.addDefault(var13, var32);
    java.lang.String var34 = com.martiansoftware.util.StringUtils.noNull(var13);
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var39 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var40 = var36.setHelp("hi!");
    var36.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var43 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    java.lang.String var46 = var44.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var47 = new com.martiansoftware.jsap.SimpleJSAP(var46);
    boolean var48 = var47.messagePrinted();
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var60 = var49.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    com.martiansoftware.jsap.UnflaggedOption var62 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var43, var48, var60);
    boolean var63 = var62.isGreedy();
    com.martiansoftware.jsap.stringparsers.InetAddressStringParser var64 = com.martiansoftware.jsap.stringparsers.InetAddressStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var65 = var62.setStringParser((com.martiansoftware.jsap.StringParser)var64);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var66 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var67 = var66.hasProperties();
    com.martiansoftware.jsap.Parameter var68 = var66.getParameter();
    boolean var69 = var66.hasProperties();
    com.martiansoftware.jsap.JSAP var70 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var71 = var70.getHelp();
    java.lang.String var72 = var70.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var73 = new com.martiansoftware.jsap.SimpleJSAP(var72);
    boolean var74 = var73.messagePrinted();
    java.lang.String var75 = var73.getHelp();
    com.martiansoftware.jsap.ParseException var76 = new com.martiansoftware.jsap.ParseException(var75);
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var77 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser(var75);
    com.martiansoftware.jsap.UnflaggedOption var78 = new com.martiansoftware.jsap.UnflaggedOption(var34, (com.martiansoftware.jsap.StringParser)var64, var69, var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "hi!"+ "'", var39.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var75.equals("  [--help]\n        Prints this help message.\n"));

  }

  public void test433() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var6 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var7 = var6.getID();
    java.lang.String var8 = var6.getID();
    com.martiansoftware.jsap.JSAPException var9 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var6);
    java.lang.String var10 = var6.getID();
    java.lang.String var11 = var6.getID();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException((java.lang.Throwable)var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));

  }

  public void test434() throws Throwable {

    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    float[] var20 = var15.getFloatArray(var18);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var30 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var33 = var15.getCharArray("hi!");
    com.martiansoftware.jsap.TestOption var34 = new com.martiansoftware.jsap.TestOption();
    int var35 = var34.countTestCases();
    java.lang.String var36 = var34.toString();
    java.lang.Exception var37 = var15.getException(var36);
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var49 = var38.getHelp((-1), "hi!");
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    java.lang.String var52 = var50.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var52);
    boolean var54 = var53.messagePrinted();
    boolean var55 = var53.messagePrinted();
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var62 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var66 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var67 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var68 = var57.getHelp((-1), "hi!");
    java.lang.String var69 = var53.getHelp(100, "hi!");
    java.lang.String var70 = var38.getHelp(100);
    short var72 = var15.getShort(var70, (short)1);
    junit.framework.Assert.assertEquals((short)1, (short)1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "null(com.martiansoftware.jsap.TestOption)"+ "'", var36.equals("null(com.martiansoftware.jsap.TestOption)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var69.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == (short)1);

  }

  public void test435() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser("hi!");
    var51.testFloatRGB();
    var51.testHexRGB();
    var51.testIntegerRGB();
    var51.testByName();
    var51.testFloatRGB();
    var51.testFloatRGB();
    var51.testIntegerRGB();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);

  }

  public void test436() throws Throwable {

    junit.framework.Assert.assertEquals((short)0, (short)0);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((short)(-1), (short)0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test437() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getShortflag();
    boolean var4 = var0.getIslist();
    boolean var5 = var0.hasProperties();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.JSAP var12 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var13 = var12.getHelp();
    java.lang.String var14 = var12.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var15 = new com.martiansoftware.jsap.SimpleJSAP(var14);
    boolean var16 = var15.messagePrinted();
    java.lang.String var17 = var15.getHelp();
    com.martiansoftware.jsap.ParseException var18 = new com.martiansoftware.jsap.ParseException(var17);
    java.lang.String[] var19 = new java.lang.String[] { var17};
    com.martiansoftware.jsap.JSAPResult var20 = var9.parse(var19);
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.util.Iterator var23 = var21.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var24 = var21.getIDMap();
    java.lang.String var25 = var21.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var29 = var20.getByte(var25, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var30 = new com.martiansoftware.jsap.QualifiedSwitch(var25);
    boolean var31 = var30.required();
    char var32 = var30.getShortFlag();
    var0.setListseparator(var32);
    com.martiansoftware.jsap.ant.ParserProperty[] var34 = var0.getParserProperties();
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.IDMap var39 = var38.getIDMap();
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var51 = var40.getHelp((-1), "hi!");
    java.lang.String var52 = var39.getIDByLongFlag(var51);
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var62 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var68 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var69 = var68.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var70 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var62, "hi!", true, '4', "", var69);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var71 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var73 = var72.getHelp();
    java.lang.String var74 = var72.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var75 = new com.martiansoftware.jsap.SimpleJSAP(var74);
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var79 = var77.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var81 = var77.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var83 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var86 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var87 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var71, var74, false, '4', "hi!");
    java.lang.String var90 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var91 = com.martiansoftware.util.StringUtils.wrapToList(var74, 1);
    java.util.List var93 = com.martiansoftware.util.StringUtils.wrapToList(var74, 1);
    com.martiansoftware.jsap.SyntaxException var94 = new com.martiansoftware.jsap.SyntaxException(var74);
    boolean var95 = var39.idExists(var74);
    java.lang.String var97 = var39.getIDByShortFlag((java.lang.Character)'a');
    var0.setShortflag('a');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var17.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + "hi!"+ "'", var90.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == null);

  }

  public void test438() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    java.lang.String var25 = var24.getSyntax();
    com.martiansoftware.jsap.stringparsers.FileStringParser var26 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var26.tearDown();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var46 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var54 = var52.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var56 = var52.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, var49, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    java.lang.String var65 = var63.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var66 = new com.martiansoftware.jsap.SimpleJSAP(var65);
    boolean var67 = var66.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var68 = var62.setRequired(var67);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var69 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var70 = var69.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var71 = var62.setAllowMultipleDeclarations(var70);
    com.martiansoftware.jsap.stringparsers.FileStringParser var72 = var26.setMustExist(var70);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var73 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var74 = var73.getParameter();
    boolean var75 = var73.declaredListSeparator();
    char var76 = var73.getShortflag();
    char var77 = var73.getShortflag();
    com.martiansoftware.jsap.stringparsers.FileStringParser var78 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    boolean var79 = var78.mustExist();
    var73.setIslist(var79);
    junit.framework.Assert.assertEquals(var25, var70, var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "[-4|--hi!]"+ "'", var25.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);

  }

  public void test439() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var16 = var15.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var17 = var3.setScreenWidth(var16);
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    java.lang.String var20 = var18.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var21 = new com.martiansoftware.jsap.SimpleJSAP(var20);
    boolean var22 = var21.messagePrinted();
    java.lang.String var23 = var21.getHelp();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    boolean var28 = var27.messagePrinted();
    java.lang.String var29 = var27.getHelp();
    com.martiansoftware.jsap.ParseException var30 = new com.martiansoftware.jsap.ParseException(var29);
    java.lang.String[] var31 = new java.lang.String[] { var29};
    com.martiansoftware.jsap.JSAPResult var32 = var21.parse(var31);
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var42 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var43 = var32.getClass("hi!");
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var55 = var44.getHelp((-1), "hi!");
    double var57 = var32.getDouble(var55, 0.0d);
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    java.lang.String var60 = var58.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    boolean var62 = var61.messagePrinted();
    java.lang.String var63 = var61.getHelp();
    com.martiansoftware.jsap.ParseException var64 = new com.martiansoftware.jsap.ParseException(var63);
    java.util.Iterator var65 = var32.getExceptionIterator(var63);
    java.lang.String[] var66 = new java.lang.String[] { var63};
    com.martiansoftware.jsap.JSAPResult var67 = var17.parse(var66);
    com.martiansoftware.jsap.IDMap var68 = var17.getIDMap();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var23.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var29.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var63.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);

  }

  public void test440() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var3 = var2.getHelp();
    java.lang.String var4 = var2.getUsage();
    com.martiansoftware.jsap.IDMap var5 = var2.getIDMap();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var7 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var8 = var7.idIterator();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var14 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var18 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var19 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var20 = var9.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    java.lang.String[] var39 = new java.lang.String[] { var37};
    var7.addDefault(var20, var39);
    java.lang.String[] var41 = new java.lang.String[] { var20};
    com.martiansoftware.jsap.JSAPResult var42 = var6.parse(var41);
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var46 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var50 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var52 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var55 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var56 = var42.contains("hi!");
    java.math.BigInteger[] var58 = var42.getBigIntegerArray("");
    boolean var59 = var5.idExists("");
    var0.setId("");
    com.martiansoftware.jsap.QualifiedSwitch var61 = new com.martiansoftware.jsap.QualifiedSwitch("");
    com.martiansoftware.jsap.stringparsers.FileStringParser var62 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var62.tearDown();
    boolean var64 = var62.mustBeDirectory();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var65 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var66 = var65.getRequired();
    boolean var67 = var65.getGreedy();
    boolean var68 = var65.declaredListSeparator();
    com.martiansoftware.jsap.stringparsers.FileStringParser var69 = var62.setMustExist(var68);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull("", (java.lang.Object)var69);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);

  }

  public void test441() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var8 = new com.martiansoftware.jsap.SimpleJSAP(var7);
    boolean var9 = var8.messagePrinted();
    java.lang.String var10 = var8.getHelp();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    java.lang.String var16 = var14.getHelp();
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException(var16);
    java.lang.String[] var18 = new java.lang.String[] { var16};
    com.martiansoftware.jsap.JSAPResult var19 = var8.parse(var18);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var29 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var30 = var19.getClass("hi!");
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var40 = var39.getShortFlag();
    char var41 = var39.getShortFlag();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    com.martiansoftware.jsap.Switch var46 = var39.setDefault(var44);
    com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource var47 = new com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource();
    int var48 = var47.countTestCases();
    int var49 = var19.getInt(var44, var48);
    com.martiansoftware.jsap.SimpleJSAP var50 = var3.setScreenWidth(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var10.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var16.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);

  }

  public void test442() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ShortStringParser var0 = new com.martiansoftware.jsap.stringparsers.ShortStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var2 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var3 = var2.idIterator();
    com.martiansoftware.jsap.JSAP var4 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var15 = var4.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var25 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var33 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var25, "hi!", true, '4', "", var32);
    java.lang.String[] var34 = new java.lang.String[] { var32};
    var2.addDefault(var15, var34);
    java.lang.String[] var36 = new java.lang.String[] { var15};
    com.martiansoftware.jsap.JSAPResult var37 = var1.parse(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var47 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var50 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var51 = var37.contains("hi!");
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var61 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var69 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var61, "hi!", true, '4', "", var68);
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.Exception var71 = var37.getException("");
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var76 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var77 = var73.setHelp("hi!");
    double[] var78 = var37.getDoubleArray("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var79 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "hi!"+ "'", var76.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);

  }

  public void test443() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test3();
    var0.test7();
    var0.test2();
    var0.test9();
    var0.test8();
    var0.test10();
    var0.test8();

  }

  public void test444() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var38 = com.martiansoftware.util.StringUtils.wrapToList(var21, 1);
    java.lang.String var39 = com.martiansoftware.util.StringUtils.noNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));

  }

  public void test445() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = new com.martiansoftware.jsap.stringparsers.DateStringParser();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var6 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var10 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var11 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var12 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var15 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var25 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var33 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var25, "hi!", true, '4', "", var32);
    java.lang.Character var34 = var33.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var37 = var33.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var38 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var39 = new java.lang.String[] { "hi!"};
    var1.addDefault("hi!", var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    java.lang.String[] var59 = var1.getDefault("hi!");
    java.lang.String var60 = var0.getProperty("hi!");
    com.martiansoftware.jsap.UnspecifiedParameterException var61 = new com.martiansoftware.jsap.UnspecifiedParameterException("hi!");
    java.lang.String var62 = var61.getID();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + '4'+ "'", var34.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "hi!"+ "'", var62.equals("hi!"));

  }

  public void test446() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test7();
    var0.test8();
    var0.test4();
    var0.test4();

  }

  public void test447() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.IntSizeStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    float[] var20 = var15.getFloatArray(var18);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var30 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var33 = var15.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var38 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var39 = var35.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var40 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var41 = var40.getID();
    boolean[] var42 = var15.getBooleanArray(var41);
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var47 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var48 = var44.setHelp("hi!");
    java.lang.String[] var49 = var15.getStringArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var53 = var51.setRequired(false);
    java.lang.String var54 = var51.getID();
    java.lang.String[] var55 = var51.getDefault();
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    java.lang.String var58 = var57.getFlag();
    com.martiansoftware.jsap.FlaggedOption var59 = var51.setDefault(var58);
    float[] var60 = var15.getFloatArray(var58);
    java.lang.Object var61 = var0.parse(var58);
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var62 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser(var58);
    var62.testBasicParse();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "hi!"+ "'", var38.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "hi!"+ "'", var41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "hi!"+ "'", var47.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "hi!"+ "'", var54.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "4"+ "'", var58.equals("4"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + 4+ "'", var61.equals(4));

  }

  public void test448() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    boolean var50 = var49.messagePrinted();
    java.lang.String var51 = var49.getHelp();
    com.martiansoftware.jsap.ParseException var52 = new com.martiansoftware.jsap.ParseException(var51);
    java.lang.String[] var53 = new java.lang.String[] { var51};
    com.martiansoftware.jsap.JSAPResult var54 = var43.parse(var53);
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    java.util.Iterator var57 = var55.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var58 = var55.getIDMap();
    java.lang.String var59 = var55.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var63 = var54.getByte(var59, (byte)(-1));
    java.math.BigDecimal var64 = var14.getBigDecimal(var59);
    boolean var65 = var14.success();
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    java.util.Iterator var68 = var66.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var69 = var66.getIDMap();
    java.lang.String var70 = var66.getUsage();
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var75 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var76 = var72.setHelp("hi!");
    java.lang.String var77 = var14.getString(var70, "hi!");
    java.util.Iterator var78 = var14.getErrorMessageIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var51.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "hi!"+ "'", var75.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "hi!"+ "'", var77.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);

  }

  public void test449() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.UnspecifiedParameterException var19 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    java.lang.String var20 = var19.getID();
    com.martiansoftware.jsap.JSAPException var21 = new com.martiansoftware.jsap.JSAPException(var20);
    java.lang.String var22 = com.martiansoftware.util.StringUtils.noNull(var20);
    var0.setDefault(var22);
    char var24 = var0.getShortflag();
    java.lang.String var25 = var0.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);

  }

  public void test450() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test2();
    var0.test9();
    com.martiansoftware.jsap.TestOption var5 = new com.martiansoftware.jsap.TestOption();
    int var6 = var5.countTestCases();
    int var7 = var5.countTestCases();
    int var8 = var5.countTestCases();
    junit.framework.TestResult var9 = var5.run();
    var0.run(var9);
    var0.test5();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);

  }

  public void test451() throws Throwable {

    com.martiansoftware.jsap.ant.ParserProperty var0 = new com.martiansoftware.jsap.ant.ParserProperty();
    java.lang.String var1 = var0.getValue();
    java.lang.String var2 = var0.getValue();
    java.lang.String var3 = var0.getName();
    java.lang.String var4 = var0.getName();
    java.lang.String var5 = var0.getValue();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);

  }

  public void test452() throws Throwable {

    com.martiansoftware.jsap.xml.JSAPConfig var0 = new com.martiansoftware.jsap.xml.JSAPConfig();
    java.lang.String var1 = var0.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var2 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    java.lang.String var3 = var2.getStringparser();
    com.martiansoftware.jsap.Defaults var4 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var5 = var4.idIterator();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var17 = var6.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.lang.String[] var36 = new java.lang.String[] { var34};
    var4.addDefault(var17, var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var47 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var55 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var56 = var52.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var57 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var58 = var57.getID();
    java.lang.String[] var59 = new java.lang.String[] { var58};
    var4.addDefault("hi!", var59);
    var2.setId("hi!");
    var0.setUsage("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.TestUsageString var64 = new com.martiansoftware.jsap.TestUsageString("hi!");
    var64.testUsage1();
    var64.testUsage1();
    var64.testUsage1();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!"+ "'", var55.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "hi!"+ "'", var58.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);

  }

  public void test453() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    char var25 = var24.getShortFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == '4');

  }

  public void test454() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var60 = var59.getShortFlag();
    char var61 = var59.getShortFlag();
    java.lang.Character var62 = var59.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var72 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var75 = var59.setDefault("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var76 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var77 = var76.getParameter();
    boolean var78 = var76.declaredListSeparator();
    char var79 = var76.getShortflag();
    char var80 = var76.getShortflag();
    com.martiansoftware.jsap.Switch var81 = var59.setShortFlag(var80);
    java.lang.String var82 = var59.getSyntax();
    java.lang.Character var83 = var59.getShortFlagCharacter();
    java.lang.String var84 = var59.getUsage();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      long var85 = var36.getLong(var84);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + '4'+ "'", var62.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "[--hi!]"+ "'", var82.equals("[--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + "[--hi!]"+ "'", var84.equals("[--hi!]"));

  }

  public void test455() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.JSAPException var39 = new com.martiansoftware.jsap.JSAPException(var37);
    java.util.Date var40 = var14.getDate(var37);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var45 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var46 = var42.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var47 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var48 = var47.getID();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      int var49 = var14.getInt(var48);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "hi!"+ "'", var45.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "hi!"+ "'", var48.equals("hi!"));

  }

  public void test456() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getHelp();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    java.util.Iterator var8 = var5.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    boolean var14 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    java.lang.String var28 = var12.getHelp(100, "hi!");
    java.lang.String var29 = var5.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var49 = var0.getHelp(100, "");
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    java.lang.String var52 = var50.getUsage();
    java.util.Iterator var53 = var50.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    java.lang.String var56 = var54.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var57 = new com.martiansoftware.jsap.SimpleJSAP(var56);
    boolean var58 = var57.messagePrinted();
    boolean var59 = var57.messagePrinted();
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var72 = var61.getHelp((-1), "hi!");
    java.lang.String var73 = var57.getHelp(100, "hi!");
    java.lang.String var74 = var50.getHelp(100);
    java.lang.String var75 = var0.getHelp(100);
    java.lang.String var78 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var83 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var84 = var80.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var85 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var86 = var85.getID();
    java.lang.String var87 = var85.getID();
    com.martiansoftware.jsap.JSAPException var88 = new com.martiansoftware.jsap.JSAPException(var78, (java.lang.Throwable)var85);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var89 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var90 = var89.getRequired();
    boolean var91 = var89.hasProperties();
    com.martiansoftware.jsap.defaultsources.PropertyDefaultSource var92 = new com.martiansoftware.jsap.defaultsources.PropertyDefaultSource(var78, var91);
    var0.unregisterDefaultSource((com.martiansoftware.jsap.DefaultSource)var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var28.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var73.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "hi!"+ "'", var78.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + "hi!"+ "'", var83.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + "hi!"+ "'", var86.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + "hi!"+ "'", var87.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);

  }

  public void test457() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var3 = new com.martiansoftware.jsap.ant.ParserProperty();
    var0.addConfiguredProperty(var3);
    boolean var5 = var0.getGreedy();
    java.lang.String var6 = var0.getStringparser();
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      com.martiansoftware.jsap.Parameter var7 = var0.getParameter();
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test458() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.Character var18 = var17.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = var17.setLongFlag("hi!");
    boolean var22 = var17.isList();
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var25 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var24);
    java.lang.String var26 = var24.toString();
    java.lang.String var27 = com.martiansoftware.util.StringUtils.noNull(var26);
    com.martiansoftware.jsap.Parameter var28 = var17.setHelp(var27);
    java.lang.String var29 = var17.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + '4'+ "'", var18.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var26.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var27.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "(-4|--hi!)[:<hi!>]"+ "'", var29.equals("(-4|--hi!)[:<hi!>]"));

  }

  public void test459() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ClassStringParser var0 = com.martiansoftware.jsap.stringparsers.ClassStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var5 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var17 = var6.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = var19.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption(var3, (com.martiansoftware.jsap.StringParser)var5, var17, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    java.lang.String var61 = var59.getUsage();
    junit.framework.Assert.assertEquals(var3, var61);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var63 = var0.parse(var3);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));

  }

  public void test460() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.getRequired();
    boolean var2 = var0.getGreedy();
    boolean var3 = var0.declaredListSeparator();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var4 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var5 = var4.getParameter();
    boolean var6 = var4.declaredListSeparator();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var10 = var8.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var12 = var8.setRequired(false);
    var4.setAllowmultipledeclarations(false);
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var17 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var21 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var22 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var23 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var30 = var29.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var31 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var23, "hi!", true, '4', "", var30);
    java.lang.Character var32 = var31.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var35 = var31.setLongFlag("hi!");
    boolean var36 = var31.isList();
    var4.setRequired(var36);
    var0.setGreedy(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + '4'+ "'", var32.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);

  }

  public void test461() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var4 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = var18.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var48 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var48, "hi!", true, '4', "", var55);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption(var2, (com.martiansoftware.jsap.StringParser)var4, var16, false, '4', "hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch(var2);
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    java.lang.String var61 = var59.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var62 = new com.martiansoftware.jsap.SimpleJSAP(var61);
    boolean var63 = var62.messagePrinted();
    java.lang.String var64 = var62.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var65 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var66 = var65.hasProperties();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var67 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var68 = var67.hasProperties();
    java.lang.String var69 = var67.getStringparser();
    boolean var70 = var67.getIslist();
    com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var71 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var64, var66, var70);
    com.martiansoftware.jsap.Switch var72 = var58.setDefault(var64);
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var76 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var80 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var81 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var82 = new com.martiansoftware.jsap.TestSwitch("hi!");
    com.martiansoftware.jsap.Parameter var83 = var58.setHelp("hi!");
    java.lang.Character var84 = var58.getShortFlagCharacter();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var64.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == null);

  }

  public void test462() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    java.lang.String var5 = var0.getId();
    com.martiansoftware.jsap.Parameter var6 = var0.getParameter();
    boolean var7 = var0.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var11 = var9.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var13 = var9.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var17 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var21 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var22 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var23 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var13.addDefault("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var28 = var27.getHelp();
    java.lang.String var29 = var27.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var30 = new com.martiansoftware.jsap.SimpleJSAP(var29);
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var30.unregisterParameter((com.martiansoftware.jsap.Parameter)var32);
    java.lang.String var34 = var32.getSyntax();
    java.lang.String[] var35 = new java.lang.String[] { var34};
    com.martiansoftware.jsap.FlaggedOption var36 = var13.setDefault(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = var13.setListSeparator('a');
    var0.setShortflag('a');
    java.lang.String var40 = var0.getLongflag();
    java.lang.String var41 = var0.getLongflag();
    com.martiansoftware.jsap.Parameter var42 = var0.getParameter();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "[<hi!>]"+ "'", var34.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);

  }

  public void test463() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var20 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var28 = var26.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var30 = var26.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var36 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var20, var23, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var42 = var36.setRequired(var41);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var43 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var44 = var43.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var45 = var36.setAllowMultipleDeclarations(var44);
    com.martiansoftware.jsap.stringparsers.FileStringParser var46 = var0.setMustExist(var44);
    boolean var47 = var46.mustBeDirectory();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);

  }

  public void test464() throws Throwable {

    com.martiansoftware.jsap.ant.ParserProperty var0 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var7 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var0.setValue("hi!");
    com.martiansoftware.jsap.stringparsers.DateStringParser var9 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var9.setUp();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var14 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var18 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var19 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var20 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var28 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var20, "hi!", true, '4', "", var27);
    java.lang.String var29 = var9.getProperty("");
    java.lang.String[] var31 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var41 = var9.getProperty("", "hi!");
    var0.setValue("hi!");
    java.lang.String var43 = var0.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "hi!"+ "'", var41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == null);

  }

  public void test465() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var16 = var15.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var17 = var3.setScreenWidth(var16);
    boolean var18 = var17.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var22 = var20.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var24 = var20.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var34 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var24.addDefault("hi!");
    com.martiansoftware.jsap.JSAPResult var38 = var17.parse("hi!");
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var48 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var48, "hi!", true, '4', "", var55);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var57 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    java.lang.String var60 = var58.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var65 = var63.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var67 = var63.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var69 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var57, var60, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var74 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    java.lang.String var77 = var75.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var78 = new com.martiansoftware.jsap.SimpleJSAP(var77);
    var74.setUsage(var77);
    var17.setHelp(var77);
    boolean var81 = var17.messagePrinted();
    var17.finalize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == true);

  }

  public void test466() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var38 = var34.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var39 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var40 = var39.getID();
    boolean[] var41 = var14.getBooleanArray(var40);
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var46 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var47 = var43.setHelp("hi!");
    java.lang.String[] var48 = var14.getStringArray("hi!");
    java.util.Iterator var49 = var14.getErrorMessageIterator();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var50 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var51 = var50.getParameter();
    java.lang.String var52 = var50.getStringparser();
    char var53 = var50.getListseparator();
    boolean var54 = var50.hasProperties();
    com.martiansoftware.jsap.ant.ParserProperty[] var55 = var50.getParserProperties();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var59.unregisterParameter((com.martiansoftware.jsap.Parameter)var61);
    com.martiansoftware.jsap.TestOption var63 = new com.martiansoftware.jsap.TestOption();
    int var64 = var63.countTestCases();
    int var65 = var63.countTestCases();
    int var66 = var63.countTestCases();
    java.lang.String var67 = var59.getHelp(var66);
    com.martiansoftware.jsap.TestUsageString var68 = new com.martiansoftware.jsap.TestUsageString(var67);
    var50.setStringparser(var67);
    java.lang.Package[] var70 = var14.getPackageArray(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!"+ "'", var40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "hi!"+ "'", var46.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var67.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);

  }

  public void test467() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    boolean var29 = var28.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var34 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var35 = var31.setHelp("hi!");
    var31.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var38 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var39 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var40 = var39.getHelp();
    java.lang.String var41 = var39.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var42 = new com.martiansoftware.jsap.SimpleJSAP(var41);
    boolean var43 = var42.messagePrinted();
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var55 = var44.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var56 = new com.martiansoftware.jsap.SimpleJSAP(var55);
    com.martiansoftware.jsap.UnflaggedOption var57 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var38, var43, var55);
    com.martiansoftware.jsap.ant.SwitchConfiguration var58 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var59 = var58.getLongflag();
    var58.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var65 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var69 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var70 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var71 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var77 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var78 = var77.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var79 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var71, "hi!", true, '4', "", var78);
    com.martiansoftware.jsap.Switch var80 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var81 = var28.setUsageName("hi!");
    com.martiansoftware.jsap.TestOption var82 = new com.martiansoftware.jsap.TestOption();
    int var83 = var82.countTestCases();
    int var84 = var82.countTestCases();
    java.lang.String var85 = com.martiansoftware.util.StringUtils.padRight("hi!", var84);
    com.martiansoftware.jsap.ParseException var86 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", "hi!");
    com.martiansoftware.jsap.SimpleJSAP var88 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    java.util.Iterator var89 = var88.getUnflaggedOptionsIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "hi!"+ "'", var34.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi! "+ "'", var85.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);

  }

  public void test468() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var8 = var6.setRequired(false);
    java.lang.String var9 = var6.getID();
    java.lang.String[] var10 = var6.getDefault();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var15 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var16 = var12.setHelp("hi!");
    var12.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var19 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    boolean var24 = var23.messagePrinted();
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var36 = var25.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var37 = new com.martiansoftware.jsap.SimpleJSAP(var36);
    com.martiansoftware.jsap.UnflaggedOption var38 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var19, var24, var36);
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var48 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var48, "hi!", true, '4', "", var55);
    com.martiansoftware.jsap.UnflaggedOption var57 = var38.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var58 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var59 = var57.setStringParser((com.martiansoftware.jsap.StringParser)var58);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var68 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var69 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var77 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var69, "hi!", true, '4', "", var76);
    java.lang.String var78 = var77.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var78);
    com.martiansoftware.jsap.UnflaggedOption var80 = var57.setUsageName(var78);
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var85 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var86 = var82.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var87 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var88 = var82.setStringParser((com.martiansoftware.jsap.StringParser)var87);
    com.martiansoftware.jsap.ant.SwitchConfiguration var89 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var90 = var89.getLongflag();
    var89.setShortflag('#');
    java.lang.String var93 = var89.getLongflag();
    var89.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var96 = var82.setListSeparator('#');
    com.martiansoftware.jsap.UnflaggedOption var97 = var57.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var98 = var6.setShortFlag('#');
    java.lang.String var99 = var4.getIDByShortFlag('#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi!"+ "'", var15.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var78.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi!"+ "'", var85.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var97 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var98 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var99 == null);

  }

  public void test469() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getHelp();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    java.util.Iterator var8 = var5.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    boolean var14 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    java.lang.String var28 = var12.getHelp(100, "hi!");
    java.lang.String var29 = var5.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var49 = var0.getHelp(100, "");
    java.lang.String var50 = var0.toString();
    com.martiansoftware.jsap.IDMap var51 = var0.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var61 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var69 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var61, "hi!", true, '4', "", var68);
    com.martiansoftware.jsap.SimpleJSAP var70 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.Parameter var71 = var0.getByID("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var28.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == null);

  }

  public void test470() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.getRequired();
    boolean var2 = var0.hasProperties();
    com.martiansoftware.jsap.ant.DefaultValue var3 = new com.martiansoftware.jsap.ant.DefaultValue();
    var0.addConfiguredDefault(var3);
    java.lang.String var5 = var3.getValue();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);

  }

  public void test471() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var5.addDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var23 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var24 = var20.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var25 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = var20.setStringParser((com.martiansoftware.jsap.StringParser)var25);
    com.martiansoftware.jsap.FlaggedOption var27 = var5.setStringParser((com.martiansoftware.jsap.StringParser)var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var46 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var54 = var52.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var56 = var52.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, var49, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    java.lang.String var65 = var63.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var66 = new com.martiansoftware.jsap.SimpleJSAP(var65);
    boolean var67 = var66.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var68 = var62.setRequired(var67);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var69 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var70 = var69.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var71 = var62.setAllowMultipleDeclarations(var70);
    com.martiansoftware.jsap.FlaggedOption var72 = var5.setAllowMultipleDeclarations(var70);
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var76 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var80 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var81 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var82 = var81.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var83 = var72.setListSeparator(var82);
    boolean var84 = var83.isList();
    com.martiansoftware.jsap.JSAP var85 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var86 = var85.getHelp();
    java.lang.String var87 = var85.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var88 = new com.martiansoftware.jsap.SimpleJSAP(var87);
    boolean var89 = var88.messagePrinted();
    java.lang.String var90 = var88.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var91 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var92 = var91.hasProperties();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var93 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var94 = var93.hasProperties();
    java.lang.String var95 = var93.getStringparser();
    boolean var96 = var93.getIslist();
    com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var97 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var90, var92, var96);
    com.martiansoftware.jsap.FlaggedOption var98 = var83.setUsageName(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!"+ "'", var23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + ""+ "'", var86.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + ""+ "'", var87.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var90.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var97 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var98 == null);

  }

  public void test472() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    var0.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var0.setShortflag('4');
    java.lang.String var10 = var0.getId();
    com.martiansoftware.jsap.Parameter var11 = var0.getParameter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var21 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var28 = var27.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var29 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var21, "hi!", true, '4', "", var28);
    var0.setDefault("hi!");
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    java.util.Iterator var33 = var31.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var34 = var31.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var44 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var52 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var44, "hi!", true, '4', "", var51);
    java.lang.String var53 = var52.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var53);
    boolean var55 = var34.idExists(var53);
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var56 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser(var53);
    com.martiansoftware.jsap.SimpleJSAP var57 = new com.martiansoftware.jsap.SimpleJSAP("hi!", var53);
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestOption var60 = new com.martiansoftware.jsap.TestOption();
    int var61 = var60.countTestCases();
    int var62 = var60.countTestCases();
    int var63 = var60.countTestCases();
    junit.framework.Assert.assertNotNull("hi!", (java.lang.Object)var63);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var65 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var66 = var65.hasProperties();
    com.martiansoftware.jsap.defaultsources.PropertyDefaultSource var67 = new com.martiansoftware.jsap.defaultsources.PropertyDefaultSource("hi!", var66);
    var57.unregisterDefaultSource((com.martiansoftware.jsap.DefaultSource)var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var53.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);

  }

  public void test473() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.stringparsers.FileStringParser var3 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var3.tearDown();
    var3.setUp();
    boolean var6 = var3.mustExist();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var7 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var8 = var7.hasProperties();
    java.lang.String var9 = var7.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var10 = new com.martiansoftware.jsap.ant.ParserProperty();
    var7.addConfiguredProperty(var10);
    boolean var12 = var7.getGreedy();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var22 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var30 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var22, "hi!", true, '4', "", var29);
    java.lang.Character var31 = var30.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var34 = var30.setLongFlag("hi!");
    boolean var35 = var30.isList();
    var7.setGreedy(var35);
    com.martiansoftware.jsap.stringparsers.FileStringParser var37 = var3.setMustBeDirectory(var35);
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    java.lang.String var40 = var38.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var41 = new com.martiansoftware.jsap.SimpleJSAP(var40);
    boolean var42 = var41.messagePrinted();
    java.lang.String var43 = var41.getHelp();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var53 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var54 = var53.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var55 = var41.setScreenWidth(var54);
    boolean var56 = var55.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var61 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var62 = var58.setHelp("hi!");
    var58.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var65 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    java.lang.String var68 = var66.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var69 = new com.martiansoftware.jsap.SimpleJSAP(var68);
    boolean var70 = var69.messagePrinted();
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var76 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var80 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var81 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var82 = var71.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var83 = new com.martiansoftware.jsap.SimpleJSAP(var82);
    com.martiansoftware.jsap.UnflaggedOption var84 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var65, var70, var82);
    boolean var85 = var84.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var89 = var87.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var90 = var84.setList(false);
    boolean var91 = var90.isGreedy();
    junit.framework.Assert.assertEquals(var56, var91);
    junit.framework.Assert.assertEquals(var35, var91);
    var0.setIslist(var91);
    junit.framework.Assert.assertNotNull((java.lang.Object)var0);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + '4'+ "'", var31.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var43.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "hi!"+ "'", var61.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + ""+ "'", var82.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);

  }

  public void test474() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigDecimalStringParser var0 = com.martiansoftware.jsap.stringparsers.BigDecimalStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var10 = var9.getShortFlag();
    char var11 = var9.getShortFlag();
    java.lang.Character var12 = var9.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var22 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var25 = var9.setDefault("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var26 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var27 = var26.getParameter();
    boolean var28 = var26.declaredListSeparator();
    char var29 = var26.getShortflag();
    char var30 = var26.getShortflag();
    com.martiansoftware.jsap.Switch var31 = var9.setShortFlag(var30);
    java.lang.String var32 = var9.getSyntax();
    java.lang.Character var33 = var9.getShortFlagCharacter();
    java.lang.String var34 = var9.getUsage();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var35 = var0.parse(var34);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + '4'+ "'", var12.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "[--hi!]"+ "'", var32.equals("[--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "[--hi!]"+ "'", var34.equals("[--hi!]"));

  }

  public void test475() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    java.lang.String var28 = var26.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var29 = new com.martiansoftware.jsap.SimpleJSAP(var28);
    com.martiansoftware.jsap.IDMap var30 = var29.getIDMap();
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var42 = var31.getHelp((-1), "hi!");
    java.lang.String var43 = var30.getIDByLongFlag(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var53 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var61 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var53, "hi!", true, '4', "", var60);
    java.util.List var63 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var64 = var30.getIDByLongFlag("");
    long[] var65 = var14.getLongArray("");
    com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource var66 = new com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource();
    int var67 = var66.countTestCases();
    com.martiansoftware.jsap.TestOption var68 = new com.martiansoftware.jsap.TestOption();
    int var69 = var68.countTestCases();
    int var70 = var68.countTestCases();
    int var71 = var68.countTestCases();
    junit.framework.Assert.assertEquals("", var67, var71);
    com.martiansoftware.jsap.JSAP var73 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var74 = var73.getHelp();
    java.lang.String var75 = var73.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var76 = new com.martiansoftware.jsap.SimpleJSAP(var75);
    boolean var77 = var76.messagePrinted();
    boolean var78 = var76.messagePrinted();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var79 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var80 = var79.hasProperties();
    java.lang.String var81 = var79.getStringparser();
    boolean var82 = var79.declaredListSeparator();
    boolean var83 = var79.getGreedy();
    char var84 = var79.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var85 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var86 = var85.getRequired();
    boolean var87 = var85.hasProperties();
    boolean var88 = var85.getGreedy();
    var79.setGreedy(var88);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var90 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser("", var78, var88);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == false);

  }

  public void test476() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    java.lang.String var37 = var0.toString();
    com.martiansoftware.jsap.UnspecifiedParameterException var38 = new com.martiansoftware.jsap.UnspecifiedParameterException(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));

  }

  public void test477() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testRequired();
    var0.testConfig();
    var0.testConfig();
    var0.testOneLevelDefaults();
    var0.testOneLevelDefaults();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testDefaults2();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test478() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.Character var18 = var17.getShortFlagCharacter();
    java.lang.String var19 = var17.getLongFlag();
    java.lang.String var20 = var17.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + '4'+ "'", var18.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var20.equals("(-4|--)[:<hi!>]"));

  }

  public void test479() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    char var11 = var8.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var16 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var17 = var13.setHelp("hi!");
    var13.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var20 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    boolean var25 = var24.messagePrinted();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.UnflaggedOption var39 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var20, var25, var37);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    com.martiansoftware.jsap.UnflaggedOption var58 = var39.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var59 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var60 = var58.setStringParser((com.martiansoftware.jsap.StringParser)var59);
    char var61 = var58.getListSeparator();
    com.martiansoftware.jsap.Switch var62 = var8.setShortFlag(var61);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = var8.setLongFlag("hi!");
    com.martiansoftware.jsap.Switch var67 = new com.martiansoftware.jsap.Switch("hi!");
    junit.framework.Assert.assertEquals("hi!", 0L, 0L);
    com.martiansoftware.jsap.RequiredParameterMissingException var71 = new com.martiansoftware.jsap.RequiredParameterMissingException("hi!");
    com.martiansoftware.jsap.SimpleJSAP var72 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    java.lang.String var73 = var72.getUsage();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!"+ "'", var16.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "[--help]"+ "'", var73.equals("[--help]"));

  }

  public void test480() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.util.Iterator var4 = var3.idIterator();
    java.util.Iterator var5 = var3.idIterator();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var6 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var7 = var6.getParameter();
    boolean var8 = var6.declaredListSeparator();
    boolean var9 = var6.getIslist();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var14 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var15 = var11.setHelp("hi!");
    var11.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var18 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    boolean var23 = var22.messagePrinted();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var29 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var34 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var35 = var24.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var36 = new com.martiansoftware.jsap.SimpleJSAP(var35);
    com.martiansoftware.jsap.UnflaggedOption var37 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var18, var23, var35);
    com.martiansoftware.jsap.ant.SwitchConfiguration var38 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var39 = var38.getLongflag();
    var38.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var59 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var51, "hi!", true, '4', "", var58);
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var6.setListseparator('#');
    java.lang.String var62 = var3.getIDByShortFlag('#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!"+ "'", var14.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == null);

  }

  public void test481() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var6 = var4.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var8 = var4.setRequired(false);
    var0.setAllowmultipledeclarations(false);
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var19 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var26 = var25.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var27 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var19, "hi!", true, '4', "", var26);
    java.lang.Character var28 = var27.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var31 = var27.setLongFlag("hi!");
    boolean var32 = var27.isList();
    var0.setRequired(var32);
    com.martiansoftware.jsap.ant.ParserProperty[] var34 = var0.getParserProperties();
    com.martiansoftware.jsap.Defaults var35 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var36 = var35.idIterator();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var48 = var37.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var58 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var66 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var58, "hi!", true, '4', "", var65);
    java.lang.String[] var67 = new java.lang.String[] { var65};
    var35.addDefault(var48, var67);
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch(var48);
    var0.setDefault(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + '4'+ "'", var28.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);

  }

  public void test482() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test3();
    var0.test8();

  }

  public void test483() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    java.lang.String var7 = var4.getHelp();
    var0.setId(var7);
    java.lang.String var9 = var0.getStringparser();
    boolean var10 = var0.getRequired();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var7.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);

  }

  public void test484() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.getRequired();
    boolean var2 = var0.getGreedy();
    boolean var3 = var0.getGreedy();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);

  }

  public void test485() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    char var11 = var8.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var16 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var17 = var13.setHelp("hi!");
    var13.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var20 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    boolean var25 = var24.messagePrinted();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.UnflaggedOption var39 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var20, var25, var37);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    com.martiansoftware.jsap.UnflaggedOption var58 = var39.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var59 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var60 = var58.setStringParser((com.martiansoftware.jsap.StringParser)var59);
    char var61 = var58.getListSeparator();
    com.martiansoftware.jsap.Switch var62 = var8.setShortFlag(var61);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = var8.setLongFlag("hi!");
    com.martiansoftware.jsap.Switch var67 = new com.martiansoftware.jsap.Switch("hi!");
    com.martiansoftware.jsap.ParseException var68 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.JSAPException var69 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!"+ "'", var16.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);

  }

  public void test486() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    java.lang.String var7 = var3.getUsage();
    java.lang.String var8 = var3.getUsage();
    com.martiansoftware.jsap.TestUsageString var9 = new com.martiansoftware.jsap.TestUsageString(var8);
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch(var8);
    com.martiansoftware.jsap.stringparsers.URLStringParser var11 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.JSAP var12 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var17 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var21 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var22 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var23 = var12.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var28 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var29 = var25.setHelp("hi!");
    var25.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var32 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    java.lang.String var35 = var33.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var36 = new com.martiansoftware.jsap.SimpleJSAP(var35);
    boolean var37 = var36.messagePrinted();
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var49 = var38.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    com.martiansoftware.jsap.UnflaggedOption var51 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var32, var37, var49);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var61 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var69 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var61, "hi!", true, '4', "", var68);
    com.martiansoftware.jsap.UnflaggedOption var70 = var51.setRequired(true);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var71 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var72 = var71.hasProperties();
    com.martiansoftware.jsap.Parameter var73 = var71.getParameter();
    boolean var74 = var71.hasProperties();
    boolean var75 = var71.getRequired();
    junit.framework.Assert.assertFalse(var75);
    com.martiansoftware.jsap.UnflaggedOption var77 = new com.martiansoftware.jsap.UnflaggedOption(var8, (com.martiansoftware.jsap.StringParser)var11, "hi!", true, var75);
    com.martiansoftware.jsap.SyntaxException var78 = new com.martiansoftware.jsap.SyntaxException(var8);
    com.martiansoftware.jsap.ParseException var79 = new com.martiansoftware.jsap.ParseException(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "[--help]"+ "'", var7.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "[--help]"+ "'", var8.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);

  }

  public void test487() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var13 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var14 = var13.getSyntax();
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var18 = var16.setRequired(false);
    java.lang.String var19 = var16.getID();
    boolean var20 = var16.allowMultipleDeclarations();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var23 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var24 = var23.getLongflag();
    var23.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var27 = var22.setListSeparator('#');
    char var28 = var27.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var29 = var16.setShortFlag(var28);
    java.lang.String var30 = var29.getSyntax();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var31 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var32 = var31.getParameter();
    boolean var33 = var31.declaredListSeparator();
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var37 = var35.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var39 = var35.setRequired(false);
    var31.setAllowmultipledeclarations(false);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    java.lang.Character var59 = var58.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var62 = var58.setLongFlag("hi!");
    boolean var63 = var58.isList();
    var31.setRequired(var63);
    boolean var65 = var31.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var66 = var29.setRequired(var65);
    com.martiansoftware.jsap.FlaggedOption var67 = var13.setAllowMultipleDeclarations(var65);
    java.lang.String var68 = var13.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "[[:<hi!>]]"+ "'", var14.equals("[[:<hi!>]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "hi!"+ "'", var19.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "[<hi!>]"+ "'", var30.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + '4'+ "'", var59.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "[[:<hi!>]]"+ "'", var68.equals("[[:<hi!>]]"));

  }

  public void test488() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    java.lang.String var1 = var0.getStringparser();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);

  }

  public void test489() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.Character var18 = var17.getShortFlagCharacter();
    java.lang.String var19 = var17.getLongFlag();
    char var20 = var17.getShortFlag();
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + '4'+ "'", var18.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == '4');

  }

  public void test490() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.util.Iterator var17 = var15.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var18 = var15.getIDMap();
    java.lang.String var19 = var15.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var23 = var14.getByte(var19, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var24 = new com.martiansoftware.jsap.QualifiedSwitch(var19);
    boolean var25 = var24.required();
    junit.framework.Assert.assertNotNull((java.lang.Object)var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);

  }

  public void test491() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    java.lang.String[] var6 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize(var5);
    com.martiansoftware.jsap.QualifiedSwitch var7 = new com.martiansoftware.jsap.QualifiedSwitch(var5);
    boolean var8 = var7.required();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);

  }

  public void test492() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    java.lang.String var28 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var29 = var14.getURLArray(var28);
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.util.Iterator var32 = var30.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var33 = var30.getIDMap();
    java.lang.String var34 = var30.getHelp();
    java.lang.String var35 = var30.toString();
    java.lang.Object[] var36 = var14.getObjectArray(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    java.lang.String var55 = var54.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var55);
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption(var55);
    int[] var58 = var14.getIntArray(var55);
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    java.lang.String var61 = var59.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var62 = new com.martiansoftware.jsap.SimpleJSAP(var61);
    boolean var63 = var62.messagePrinted();
    java.lang.String var64 = var62.getHelp();
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var74 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var75 = var74.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var76 = var62.setScreenWidth(var75);
    boolean var77 = var76.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var81 = var79.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var83 = var79.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var87 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var90 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var91 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var92 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var93 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var83.addDefault("hi!");
    com.martiansoftware.jsap.JSAPResult var97 = var76.parse("hi!");
    java.lang.String var98 = var76.toString();
    short[] var99 = var14.getShortArray(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var55.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var64.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var97 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var98 + "' != '" + "[--help]"+ "'", var98.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var99 == null);

  }

  public void test493() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.util.Iterator var22 = var20.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var23 = var20.getIDMap();
    java.lang.String var24 = var20.getUsage();
    java.lang.Exception[] var25 = var14.getExceptionArray(var24);
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    java.lang.String var28 = var26.getUsage();
    com.martiansoftware.jsap.IDMap var29 = var26.getIDMap();
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var31 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var32 = var31.idIterator();
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var44 = var33.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var54 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, "hi!", true, '4', "", var61);
    java.lang.String[] var63 = new java.lang.String[] { var61};
    var31.addDefault(var44, var63);
    java.lang.String[] var65 = new java.lang.String[] { var44};
    com.martiansoftware.jsap.JSAPResult var66 = var30.parse(var65);
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var70 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var74 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var75 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var76 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var79 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var80 = var66.contains("hi!");
    java.math.BigInteger[] var82 = var66.getBigIntegerArray("");
    boolean var83 = var29.idExists("");
    java.lang.Exception[] var84 = var14.getExceptionArray("");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);

  }

  public void test494() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var41 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var42 = var38.setHelp("hi!");
    var38.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var45 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    boolean var50 = var49.messagePrinted();
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var62 = var51.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var63 = new com.martiansoftware.jsap.SimpleJSAP(var62);
    com.martiansoftware.jsap.UnflaggedOption var64 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var45, var50, var62);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.Object[] var67 = new java.lang.Object[] { var66};
    java.lang.Object[] var68 = var36.getObjectArray("", var67);
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var74 = var36.getByte("hi!", (byte)(-1));
    java.util.Iterator var75 = var36.getBadParameterIDIterator();
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var79 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var83 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var84 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var85 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var88 = new com.martiansoftware.jsap.ParseException("hi!");
    java.net.InetAddress var89 = var36.getInetAddress("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "hi!"+ "'", var41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == null);

  }

  public void test495() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.Character var18 = var17.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = var17.setLongFlag("hi!");
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    com.martiansoftware.jsap.stringparsers.FileStringParser var47 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var47.tearDown();
    boolean var49 = var47.mustBeDirectory();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var50 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var51 = var50.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var52 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var53 = var52.getLongflag();
    var52.setShortflag('#');
    java.lang.String var56 = var52.getLongflag();
    char var57 = var52.getShortflag();
    var50.setShortflag(var57);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!", (com.martiansoftware.jsap.StringParser)var31, var45, var49, var57, "hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var62 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var63 = var62.getParameter();
    java.lang.String var64 = var62.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var69 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var70 = var66.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var71 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var72 = var71.getID();
    java.lang.String var73 = var71.getID();
    var62.setLongflag(var73);
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var75 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException(var73);
    java.lang.String var76 = var75.getID();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var77 = var31.parse(var76);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + '4'+ "'", var18.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "hi!"+ "'", var69.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "hi!"+ "'", var72.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "hi!"+ "'", var73.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "hi!"+ "'", var76.equals("hi!"));

  }

  public void test496() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var9.testSwitchParse();
    var9.testLongFlag();
    var9.testSwitchParse();
    java.lang.String var13 = var9.getName();
    var9.testShortFlag();
    var9.testSwitchParse();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "hi!"+ "'", var13.equals("hi!"));

  }

  public void test497() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    char var11 = var8.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var16 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var17 = var13.setHelp("hi!");
    var13.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var20 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    boolean var25 = var24.messagePrinted();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.UnflaggedOption var39 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var20, var25, var37);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    com.martiansoftware.jsap.UnflaggedOption var58 = var39.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var59 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var60 = var58.setStringParser((com.martiansoftware.jsap.StringParser)var59);
    char var61 = var58.getListSeparator();
    com.martiansoftware.jsap.Switch var62 = var8.setShortFlag(var61);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = var8.setLongFlag("hi!");
    com.martiansoftware.jsap.Switch var67 = new com.martiansoftware.jsap.Switch("hi!");
    com.martiansoftware.jsap.ParseException var68 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String var69 = var68.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!"+ "'", var16.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "com.martiansoftware.jsap.ParseException: hi!"+ "'", var69.equals("com.martiansoftware.jsap.ParseException: hi!"));

  }

  public void test498() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    boolean var3 = var0.mustExist();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var13 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var21 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var13, "hi!", true, '4', "", var20);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var27 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var28 = var24.setHelp("hi!");
    var24.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var31 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.lang.String var34 = var32.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    boolean var36 = var35.messagePrinted();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var48 = var37.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    com.martiansoftware.jsap.UnflaggedOption var50 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var31, var36, var48);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.UnflaggedOption var69 = var50.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var70 = var22.setList(true);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var75 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var76 = var72.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var77 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var78 = var72.setStringParser((com.martiansoftware.jsap.StringParser)var77);
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var86 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var87 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var88 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var91 = var78.setHelp("hi!");
    com.martiansoftware.jsap.FlaggedOption var92 = var22.setUsageName("hi!");
    com.martiansoftware.jsap.FlaggedOption var94 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var95 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    java.lang.String var96 = var0.getProperty("hi!", "hi!");
    boolean var97 = var0.mustBeFile();
    var0.tearDown();
    var0.tearDown();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi!"+ "'", var27.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "hi!"+ "'", var75.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "hi!"+ "'", var96.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);

  }

  public void test499() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var3 = var2.getHelp();
    java.lang.String var4 = var2.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var5 = new com.martiansoftware.jsap.SimpleJSAP(var4);
    boolean var6 = var5.messagePrinted();
    java.lang.String var7 = var5.getHelp();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var9 = var8.getHelp();
    java.lang.String var10 = var8.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var11 = new com.martiansoftware.jsap.SimpleJSAP(var10);
    boolean var12 = var11.messagePrinted();
    java.lang.String var13 = var11.getHelp();
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException(var13);
    java.lang.String[] var15 = new java.lang.String[] { var13};
    com.martiansoftware.jsap.JSAPResult var16 = var5.parse(var15);
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var26 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var27 = var16.getClass("hi!");
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var39 = var28.getHelp((-1), "hi!");
    double var41 = var16.getDouble(var39, 0.0d);
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    boolean var46 = var45.messagePrinted();
    java.lang.String var47 = var45.getHelp();
    com.martiansoftware.jsap.ParseException var48 = new com.martiansoftware.jsap.ParseException(var47);
    java.util.Iterator var49 = var16.getExceptionIterator(var47);
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var59 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var67 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var59, "hi!", true, '4', "", var66);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var68 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    java.lang.String var71 = var69.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var72 = new com.martiansoftware.jsap.SimpleJSAP(var71);
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var76 = var74.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var78 = var74.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var80 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var83 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var84 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var68, var71, false, '4', "hi!");
    java.lang.String var87 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var88 = com.martiansoftware.util.StringUtils.wrapToList(var71, 1);
    java.util.List var90 = com.martiansoftware.util.StringUtils.wrapToList(var71, 1);
    char[] var91 = var16.getCharArray(var71);
    com.martiansoftware.jsap.TestUsageString var92 = new com.martiansoftware.jsap.TestUsageString(var71);
    var92.testUsage2();
    var92.testUsage2();
    var92.testUsage1();
    junit.framework.TestResult var96 = var92.run();
    var0.run(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var7.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var13.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var47.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + "hi!"+ "'", var87.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);

  }

  public void test500() throws Throwable {

    com.martiansoftware.jsap.xml.JSAPConfig var0 = new com.martiansoftware.jsap.xml.JSAPConfig();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    java.lang.String var3 = var0.getUsage();
    java.util.Iterator var4 = var0.parameters();
    java.lang.String var5 = var0.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var12 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var13 = var12.getID();
    java.lang.String var14 = var12.getID();
    com.martiansoftware.jsap.JSAPException var15 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var12);
    java.lang.String var16 = var15.toString();
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch(var16);
    var0.setUsage(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "hi!"+ "'", var13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!"+ "'", var14.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "com.martiansoftware.jsap.JSAPException: com.martiansoftware.jsap.IllegalMultipleDeclarationException: Parameter 'hi!' cannot be declared more than once."+ "'", var16.equals("com.martiansoftware.jsap.JSAPException: com.martiansoftware.jsap.IllegalMultipleDeclarationException: Parameter 'hi!' cannot be declared more than once."));

  }

}
