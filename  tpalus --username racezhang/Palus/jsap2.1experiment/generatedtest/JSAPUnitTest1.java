package generatedtest;

import junit.framework.*;

public class JSAPUnitTest1 extends TestCase {

  // Runs all the tests in this file.
  public static void main(String[] args) {
    junit.textui.TestRunner.run(JSAPUnitTest1.class);
  }

  public void test1() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    char var11 = var8.getShortFlag();
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');

  }

  public void test2() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    boolean var3 = var0.getIslist();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var8 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var9 = var5.setHelp("hi!");
    var5.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var12 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var14 = var13.getHelp();
    java.lang.String var15 = var13.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var16 = new com.martiansoftware.jsap.SimpleJSAP(var15);
    boolean var17 = var16.messagePrinted();
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var29 = var18.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var30 = new com.martiansoftware.jsap.SimpleJSAP(var29);
    com.martiansoftware.jsap.UnflaggedOption var31 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var12, var17, var29);
    com.martiansoftware.jsap.ant.SwitchConfiguration var32 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var33 = var32.getLongflag();
    var32.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var0.setListseparator('#');
    com.martiansoftware.jsap.ant.DefaultValue var56 = new com.martiansoftware.jsap.ant.DefaultValue();
    java.lang.String var57 = var56.getValue();
    var0.addConfiguredDefault(var56);
    boolean var59 = var0.declaredListSeparator();
    junit.framework.Assert.assertNotNull((java.lang.Object)var0);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == true);

  }

  public void test3() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var51 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var52 = var48.setHelp("hi!");
    var48.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var55 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    boolean var60 = var59.messagePrinted();
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var72 = var61.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var73 = new com.martiansoftware.jsap.SimpleJSAP(var72);
    com.martiansoftware.jsap.UnflaggedOption var74 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var55, var60, var72);
    com.martiansoftware.jsap.UnflaggedOption var75 = var27.setStringParser((com.martiansoftware.jsap.StringParser)var55);
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    java.lang.String var78 = var76.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var79 = new com.martiansoftware.jsap.SimpleJSAP(var78);
    boolean var80 = var79.messagePrinted();
    boolean var81 = var79.messagePrinted();
    com.martiansoftware.jsap.JSAP var83 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var86 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var88 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var91 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var92 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var93 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var94 = var83.getHelp((-1), "hi!");
    java.lang.String var95 = var79.getHelp(100, "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var96 = var55.parse(var95);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "hi!"+ "'", var51.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + ""+ "'", var94.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var95.equals("  [--help]\n        Prints this help message.\n"));

  }

  public void test4() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var6 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var7 = var1.setStringParser((com.martiansoftware.jsap.StringParser)var6);
    java.lang.String var8 = var1.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "[<hi!>]"+ "'", var8.equals("[<hi!>]"));

  }

  public void test5() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser("hi!");
    var51.testFloatRGB();
    var51.testHexRGB();
    var51.testByName();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);

  }

  public void test6() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    boolean var3 = var0.mustExist();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var4 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var5 = var4.hasProperties();
    java.lang.String var6 = var4.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var7 = new com.martiansoftware.jsap.ant.ParserProperty();
    var4.addConfiguredProperty(var7);
    boolean var9 = var4.getGreedy();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var19 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var26 = var25.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var27 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var19, "hi!", true, '4', "", var26);
    java.lang.Character var28 = var27.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var31 = var27.setLongFlag("hi!");
    boolean var32 = var27.isList();
    var4.setGreedy(var32);
    com.martiansoftware.jsap.stringparsers.FileStringParser var34 = var0.setMustBeDirectory(var32);
    boolean var35 = var34.mustExist();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + '4'+ "'", var28.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);

  }

  public void test7() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    boolean var6 = var1.allowMultipleDeclarations();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var7 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    junit.framework.Assert.assertNotSame((java.lang.Object)var6, (java.lang.Object)var7);
    char var9 = var7.getListseparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == ':');

  }

  public void test8() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var25 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var26 = var25.getParameter();
    boolean var27 = var25.declaredListSeparator();
    char var28 = var25.getShortflag();
    char var29 = var25.getShortflag();
    com.martiansoftware.jsap.Switch var30 = var8.setShortFlag(var29);
    java.lang.String var31 = var30.getSyntax();
    java.lang.String var32 = var30.getSyntax();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var42 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var49 = var48.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var50 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var42, "hi!", true, '4', "", var49);
    java.lang.Character var51 = var50.getShortFlagCharacter();
    char var52 = var50.getShortFlag();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var53 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var54 = var53.getParameter();
    java.lang.String var55 = var53.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var60 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var61 = var57.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var62 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var63 = var62.getID();
    java.lang.String var64 = var62.getID();
    var53.setLongflag(var64);
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var68 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var69 = var68.getLongflag();
    var68.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var72 = var67.setListSeparator('#');
    boolean var73 = var72.isList();
    var53.setAllowmultipledeclarations(var73);
    char var75 = var53.getShortflag();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var32, var52, var75);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "[--hi!]"+ "'", var31.equals("[--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "[--hi!]"+ "'", var32.equals("[--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + '4'+ "'", var51.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "hi!"+ "'", var60.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "hi!"+ "'", var63.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "hi!"+ "'", var64.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == '\u0000');

  }

  public void test9() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var9.testID();
    var9.testShortFlag();
    var9.testID();
    com.martiansoftware.jsap.TestOption var13 = new com.martiansoftware.jsap.TestOption();
    int var14 = var13.countTestCases();
    int var15 = var13.countTestCases();
    int var16 = var13.countTestCases();
    junit.framework.TestResult var17 = var13.run();
    var9.run(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);

  }

  public void test10() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("");
    com.martiansoftware.jsap.stringparsers.DateStringParser var19 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var19.setUp();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    java.lang.String var39 = var19.getProperty("");
    java.lang.String[] var41 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var51 = var19.getProperty("", "hi!");
    var19.tearDown();
    com.martiansoftware.jsap.FlaggedOption var53 = var18.setStringParser((com.martiansoftware.jsap.StringParser)var19);
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var62 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var63 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var71 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var63, "hi!", true, '4', "", var70);
    java.lang.String var72 = var71.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var72);
    com.martiansoftware.jsap.TestFlaggedOption var74 = new com.martiansoftware.jsap.TestFlaggedOption(var72);
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      java.lang.Object var75 = var19.parse(var72);
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test11() throws Throwable {

    java.lang.String var2 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var2, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 10.0f, 0.0f);
    java.lang.String var21 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var21, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(10.0f, 10.0f, 0.0f);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "hi!"+ "'", var2.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "hi!"+ "'", var21.equals("hi!"));

  }

  public void test12() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DoubleStringParser var0 = com.martiansoftware.jsap.stringparsers.DoubleStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var10 = var9.getShortFlag();
    char var11 = var9.getShortFlag();
    java.lang.Character var12 = var9.getShortFlagCharacter();
    java.lang.String var13 = var9.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var14 = var0.parse(var13);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + '4'+ "'", var12.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "[-4|--hi!]"+ "'", var13.equals("[-4|--hi!]"));

  }

  public void test13() throws Throwable {

    com.martiansoftware.jsap.stringparsers.PackageStringParser var0 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var4.unregisterParameter((com.martiansoftware.jsap.Parameter)var6);
    java.lang.String var8 = var6.getSyntax();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    java.lang.String var14 = var12.getHelp();
    com.martiansoftware.jsap.ParseException var15 = new com.martiansoftware.jsap.ParseException(var14);
    com.martiansoftware.jsap.FlaggedOption var16 = var6.setUsageName(var14);
    java.lang.String var17 = com.martiansoftware.util.StringUtils.noNull(var14);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var18 = var0.parse(var14);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "[<hi!>]"+ "'", var8.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var14.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var17.equals("  [--help]\n        Prints this help message.\n"));

  }

  public void test14() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.ant.SwitchConfiguration var28 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var29 = var28.getLongflag();
    var28.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var51 = new com.martiansoftware.jsap.UnflaggedOption("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var52 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var53 = var52.getParameter();
    java.lang.String var54 = var52.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var59 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var60 = var56.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var61 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var62 = var61.getID();
    java.lang.String var63 = var61.getID();
    var52.setLongflag(var63);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var67 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var68 = var67.getLongflag();
    var67.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var71 = var66.setListSeparator('#');
    boolean var72 = var71.isList();
    var52.setAllowmultipledeclarations(var72);
    com.martiansoftware.jsap.UnflaggedOption var74 = var51.setList(var72);
    com.martiansoftware.jsap.stringparsers.FileStringParser var75 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    var75.setUp();
    com.martiansoftware.jsap.UnflaggedOption var77 = var51.setStringParser((com.martiansoftware.jsap.StringParser)var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi!"+ "'", var59.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "hi!"+ "'", var62.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "hi!"+ "'", var63.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);

  }

  public void test15() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var36 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);

  }

  public void test16() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test7();
    var0.test9();
    var0.test10();
    var0.test8();

  }

  public void test17() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var9.testID();
    var9.testShortFlag();
    var9.testID();
    var9.testLongFlag();
    var9.testSwitchParse();

  }

  public void test18() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test5();
    var0.test7();
    var0.test4();
    var0.test6();

  }

  public void test19() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigDecimalStringParser var0 = new com.martiansoftware.jsap.stringparsers.BigDecimalStringParser();
    com.martiansoftware.jsap.xml.JSAPConfig var1 = new com.martiansoftware.jsap.xml.JSAPConfig();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var3 = var2.getHelp();
    java.lang.String var4 = var2.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var5 = new com.martiansoftware.jsap.SimpleJSAP(var4);
    boolean var6 = var5.messagePrinted();
    java.lang.String var7 = var5.getHelp();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var9 = var8.getHelp();
    java.lang.String var10 = var8.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var11 = new com.martiansoftware.jsap.SimpleJSAP(var10);
    boolean var12 = var11.messagePrinted();
    java.lang.String var13 = var11.getHelp();
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException(var13);
    java.lang.String[] var15 = new java.lang.String[] { var13};
    com.martiansoftware.jsap.JSAPResult var16 = var5.parse(var15);
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var26 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var27 = var16.getClass("hi!");
    java.lang.String var30 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var31 = var16.getURLArray(var30);
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.util.Iterator var34 = var32.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var35 = var32.getIDMap();
    java.lang.String var36 = var32.getHelp();
    java.lang.String var37 = var32.toString();
    java.lang.Object[] var38 = var16.getObjectArray(var37);
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var48 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var48, "hi!", true, '4', "", var55);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var57 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    java.lang.String var60 = var58.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var65 = var63.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var67 = var63.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var69 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var57, var60, false, '4', "hi!");
    java.lang.String var76 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var77 = com.martiansoftware.util.StringUtils.wrapToList(var60, 1);
    java.lang.String var78 = var16.getString(var60);
    com.martiansoftware.jsap.JSAP var79 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var84 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var88 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var89 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var90 = var79.getHelp((-1), "hi!");
    long[] var91 = var16.getLongArray("hi!");
    var1.setHelp("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var93 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var7.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var13.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "hi!"+ "'", var30.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "hi!"+ "'", var76.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + ""+ "'", var90.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);

  }

  public void test20() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    var0.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var0.setShortflag('4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var19 = var18.getShortFlag();
    var0.setShortflag(var19);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var24 = var22.setRequired(false);
    java.lang.String var25 = var22.getID();
    var0.setId(var25);
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "hi!"+ "'", var25.equals("hi!"));

  }

  public void test21() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.Defaults var3 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var4 = var3.idIterator();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var14 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.lang.Character var36 = var35.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var39 = var35.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var40 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var41 = new java.lang.String[] { "hi!"};
    var3.addDefault("hi!", var41);
    java.lang.String var43 = com.martiansoftware.util.StringUtils.noNull("hi!");
    var0.setId("hi!");
    com.martiansoftware.jsap.ant.ParserProperty var45 = new com.martiansoftware.jsap.ant.ParserProperty();
    java.lang.String var46 = var45.getValue();
    java.lang.String var47 = var45.getName();
    java.lang.String var48 = var45.getValue();
    var0.addConfiguredProperty(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + '4'+ "'", var36.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == null);

  }

  public void test22() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testRequired();
    var0.testConfig();
    var0.testSimpleDefault();
    var0.setUp();

  }

  public void test23() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    boolean var3 = var0.mustExist();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var13 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var21 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var13, "hi!", true, '4', "", var20);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var27 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var28 = var24.setHelp("hi!");
    var24.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var31 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.lang.String var34 = var32.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    boolean var36 = var35.messagePrinted();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var48 = var37.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    com.martiansoftware.jsap.UnflaggedOption var50 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var31, var36, var48);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.UnflaggedOption var69 = var50.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var70 = var22.setList(true);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var75 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var76 = var72.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var77 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var78 = var72.setStringParser((com.martiansoftware.jsap.StringParser)var77);
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var86 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var87 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var88 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var91 = var78.setHelp("hi!");
    com.martiansoftware.jsap.FlaggedOption var92 = var22.setUsageName("hi!");
    com.martiansoftware.jsap.FlaggedOption var94 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var95 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    java.lang.String var96 = var0.getProperty("hi!", "hi!");
    var0.tearDown();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi!"+ "'", var27.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "hi!"+ "'", var75.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "hi!"+ "'", var96.equals("hi!"));

  }

  public void test24() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var12 = new com.martiansoftware.jsap.TestOption();
    int var13 = var12.countTestCases();
    int var14 = var12.countTestCases();
    java.lang.String var15 = com.martiansoftware.util.StringUtils.padRight("hi!", var14);
    com.martiansoftware.jsap.TestUsageString var16 = new com.martiansoftware.jsap.TestUsageString(var15);
    junit.framework.Assert.assertNotNull((java.lang.Object)var16);
    var16.testUsage1();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi! "+ "'", var15.equals("hi! "));

  }

  public void test25() throws Throwable {

    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var4 = var3.getHelp();
    java.lang.String var5 = var3.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var6 = new com.martiansoftware.jsap.SimpleJSAP(var5);
    boolean var7 = var6.messagePrinted();
    java.lang.String var8 = var6.getHelp();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    java.lang.String var14 = var12.getHelp();
    com.martiansoftware.jsap.ParseException var15 = new com.martiansoftware.jsap.ParseException(var14);
    java.lang.String[] var16 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var17 = var6.parse(var16);
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    java.lang.String var20 = var18.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var21 = new com.martiansoftware.jsap.SimpleJSAP(var20);
    boolean var22 = var21.messagePrinted();
    boolean var23 = var21.messagePrinted();
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var36 = var25.getHelp((-1), "hi!");
    java.lang.String var37 = var21.getHelp(100, "hi!");
    java.util.Date[] var38 = var17.getDateArray(var37);
    com.martiansoftware.jsap.JSAP var39 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var40 = var39.getHelp();
    java.lang.String var41 = var39.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var42 = new com.martiansoftware.jsap.SimpleJSAP(var41);
    boolean var43 = var42.messagePrinted();
    java.lang.String var44 = var42.getHelp();
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    java.lang.String var47 = var45.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var48 = new com.martiansoftware.jsap.SimpleJSAP(var47);
    boolean var49 = var48.messagePrinted();
    java.lang.String var50 = var48.getHelp();
    com.martiansoftware.jsap.ParseException var51 = new com.martiansoftware.jsap.ParseException(var50);
    java.lang.String[] var52 = new java.lang.String[] { var50};
    com.martiansoftware.jsap.JSAPResult var53 = var42.parse(var52);
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    java.util.Iterator var56 = var54.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var57 = var54.getIDMap();
    java.lang.String var58 = var54.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var62 = var53.getByte(var58, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var63 = new com.martiansoftware.jsap.QualifiedSwitch(var58);
    java.net.InetAddress[] var64 = var17.getInetAddressArray(var58);
    junit.framework.Assert.assertEquals(var58, (byte)10, (byte)10);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((byte)(-1), (byte)10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var8.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var14.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var37.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var44.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var50.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);

  }

  public void test26() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var7 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var8 = var4.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var9 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var10 = var9.getID();
    java.lang.String var11 = var9.getID();
    var0.setLongflag(var11);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var13 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var14 = var13.getParameter();
    java.lang.String var15 = var13.getLongflag();
    java.lang.String var16 = var13.getId();
    java.lang.String var19 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var19, 10.0f, 10.0f, 1.0f);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame(var11, (java.lang.Object)var13, (java.lang.Object)10.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "hi!"+ "'", var19.equals("hi!"));

  }

  public void test27() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var9.testSwitchParse();
    var9.testLongFlag();
    var9.testID();
    java.lang.String var13 = var9.getName();
    var9.testID();
    java.lang.String[] var16 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    var9.setName("");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var36 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var44 = var42.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var46 = var42.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var52 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var36, var39, false, '4', "hi!");
    java.lang.String var53 = var52.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var9, (java.lang.Object)var53);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "hi!"+ "'", var13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var53.equals("[(-4|--hi!)[:<hi!>]]"));

  }

  public void test28() throws Throwable {

    com.martiansoftware.jsap.ant.ParserProperty var0 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    java.util.List var20 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    var0.setName("");
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var26 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var27 = var23.setHelp("hi!");
    var23.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var30 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    java.lang.String var33 = var31.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var34 = new com.martiansoftware.jsap.SimpleJSAP(var33);
    boolean var35 = var34.messagePrinted();
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var47 = var36.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var48 = new com.martiansoftware.jsap.SimpleJSAP(var47);
    com.martiansoftware.jsap.UnflaggedOption var49 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var30, var35, var47);
    com.martiansoftware.jsap.ant.SwitchConfiguration var50 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var51 = var50.getLongflag();
    var50.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var62 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var63 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var71 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var63, "hi!", true, '4', "", var70);
    com.martiansoftware.jsap.Switch var72 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var73 = new com.martiansoftware.jsap.UnflaggedOption("hi!");
    var0.setName("hi!");
    java.lang.String[] var75 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "hi!"+ "'", var26.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);

  }

  public void test29() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test2();
    var0.test9();
    var0.test5();

  }

  public void test30() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    java.lang.String[] var35 = var34.getDefault();
    java.lang.String var36 = var34.getHelp();
    java.lang.String var37 = var34.getSyntax();
    java.lang.String var38 = var34.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var37.equals("[(-4|--hi!)[:<hi!>]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var38.equals("[(-4|--hi!)[:<hi!>]]"));

  }

  public void test31() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    java.lang.String var7 = var5.getSyntax();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var9 = var8.getHelp();
    java.lang.String var10 = var8.getUsage();
    com.martiansoftware.jsap.IDMap var11 = var8.getIDMap();
    java.lang.String var12 = var8.toString();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var14 = var13.getHelp();
    java.lang.String var15 = var13.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var16 = new com.martiansoftware.jsap.SimpleJSAP(var15);
    boolean var17 = var16.messagePrinted();
    java.lang.String var18 = var16.getHelp();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    boolean var23 = var22.messagePrinted();
    java.lang.String var24 = var22.getHelp();
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException(var24);
    java.lang.String[] var26 = new java.lang.String[] { var24};
    com.martiansoftware.jsap.JSAPResult var27 = var16.parse(var26);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var46 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var47 = new java.lang.Object[] { var46};
    java.lang.Object[] var48 = var27.getObjectArray(var44, var47);
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    java.lang.String var51 = var49.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    boolean var53 = var52.messagePrinted();
    java.lang.String var54 = var52.getHelp();
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    java.lang.String var57 = var55.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var58 = new com.martiansoftware.jsap.SimpleJSAP(var57);
    boolean var59 = var58.messagePrinted();
    java.lang.String var60 = var58.getHelp();
    com.martiansoftware.jsap.ParseException var61 = new com.martiansoftware.jsap.ParseException(var60);
    java.lang.String[] var62 = new java.lang.String[] { var60};
    com.martiansoftware.jsap.JSAPResult var63 = var52.parse(var62);
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var71 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var72 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var73 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var79 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var80 = var79.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var81 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var73, "hi!", true, '4', "", var80);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var82 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var83 = new java.lang.Object[] { var82};
    java.lang.Object[] var84 = var63.getObjectArray(var80, var83);
    boolean var85 = var27.userSpecified(var80);
    com.martiansoftware.jsap.defaultsources.PropertyDefaultSource var86 = new com.martiansoftware.jsap.defaultsources.PropertyDefaultSource(var12, var85);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var87 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var88 = var87.getParameter();
    boolean var89 = var87.declaredListSeparator();
    char var90 = var87.getShortflag();
    boolean var91 = var87.getIslist();
    junit.framework.Assert.assertFalse(var91);
    com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var93 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var7, var85, var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "[<hi!>]"+ "'", var7.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var18.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var24.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var54.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var60.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + ""+ "'", var80.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);

  }

  public void test32() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var6 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var5);
    java.lang.String var7 = var5.toString();
    var0.setLongflag(var7);
    com.martiansoftware.jsap.TestUsageString var9 = new com.martiansoftware.jsap.TestUsageString(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var7.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));

  }

  public void test33() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var29 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var30 = var26.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var31 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var32 = var31.getID();
    java.lang.String var33 = var31.getID();
    com.martiansoftware.jsap.Switch var34 = var24.setDefault(var33);
    java.lang.String var35 = var24.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "hi!"+ "'", var29.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "hi!"+ "'", var33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "[-4|--hi!]"+ "'", var35.equals("[-4|--hi!]"));

  }

  public void test34() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var21 = var10.getHelp((-1), "hi!");
    java.lang.String[] var22 = new java.lang.String[] { var21};
    com.martiansoftware.jsap.Switch var23 = var8.setDefault(var22);
    java.lang.Character var24 = var23.getShortFlagCharacter();
    char var25 = var23.getShortFlag();
    java.lang.Character var26 = var23.getShortFlagCharacter();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + '4'+ "'", var24.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + '4'+ "'", var26.equals('4'));

  }

  public void test35() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    java.lang.String var39 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.InetAddress[] var40 = var36.getInetAddressArray(var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var45 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var46 = var42.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var47 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = var42.setStringParser((com.martiansoftware.jsap.StringParser)var47);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var58 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var61 = var48.setHelp("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      float var62 = var36.getFloat("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "hi!"+ "'", var39.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "hi!"+ "'", var45.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);

  }

  public void test36() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var6 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var7 = var1.setStringParser((com.martiansoftware.jsap.StringParser)var6);
    com.martiansoftware.jsap.ant.SwitchConfiguration var8 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var9 = var8.getLongflag();
    var8.setShortflag('#');
    java.lang.String var12 = var8.getLongflag();
    var8.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var15 = var1.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var25 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var33 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var25, "hi!", true, '4', "", var32);
    java.lang.String[] var34 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.FlaggedOption var35 = var15.setDefault(var34);
    java.lang.String var36 = var15.getLongFlag();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String[] var56 = var55.getDefault();
    char var57 = var55.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var58 = var15.setShortFlag(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);

  }

  public void test37() throws Throwable {

    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(1L, 100L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test38() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.Defaults var3 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var4 = var3.idIterator();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var14 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.lang.Character var36 = var35.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var39 = var35.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var40 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var41 = new java.lang.String[] { "hi!"};
    var3.addDefault("hi!", var41);
    java.lang.String var43 = com.martiansoftware.util.StringUtils.noNull("hi!");
    var0.setId("hi!");
    char var45 = var0.getShortflag();
    char var46 = var0.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + '4'+ "'", var36.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == '\u0000');

  }

  public void test39() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.IDMap var5 = var3.getIDMap();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.util.Iterator var8 = var6.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var9 = var6.getIDMap();
    java.lang.String var10 = var6.getHelp();
    java.lang.String var11 = var6.toString();
    com.martiansoftware.jsap.JSAP var12 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var17 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var21 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var22 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var23 = var12.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var43 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var51 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var43, "hi!", true, '4', "", var50);
    java.lang.String var52 = var51.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var52);
    com.martiansoftware.jsap.TestFlaggedOption var54 = new com.martiansoftware.jsap.TestFlaggedOption(var52);
    com.martiansoftware.jsap.Switch var55 = new com.martiansoftware.jsap.Switch(var23, '4', var52);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var65 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var65, "hi!", true, '4', "", var72);
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var77 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var81 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var82 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var83 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals(var23, "hi!", "hi!");
    var6.setHelp(var23);
    com.martiansoftware.jsap.JSAP var86 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var91 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var94 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var95 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var96 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var97 = var86.getHelp((-1), "hi!");
    var6.setUsage(var97);
    java.lang.String var99 = var5.getIDByLongFlag(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var52.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var97 + "' != '" + ""+ "'", var97.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var99 == null);

  }

  public void test40() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    var35.setUsage(var38);
    java.lang.String var41 = var35.toString();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var42 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var43 = var42.getParameter();
    boolean var44 = var42.declaredListSeparator();
    char var45 = var42.getListseparator();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var55 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var60 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var61 = var57.setHelp("hi!");
    var57.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var64 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    java.lang.String var67 = var65.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var68 = new com.martiansoftware.jsap.SimpleJSAP(var67);
    boolean var69 = var68.messagePrinted();
    com.martiansoftware.jsap.JSAP var70 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var75 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var79 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var80 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var81 = var70.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var82 = new com.martiansoftware.jsap.SimpleJSAP(var81);
    com.martiansoftware.jsap.UnflaggedOption var83 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var64, var69, var81);
    boolean var84 = var83.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var86 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var88 = var86.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var89 = var83.setList(false);
    java.lang.String var90 = var89.getUsageName();
    com.martiansoftware.jsap.Switch var91 = new com.martiansoftware.jsap.Switch(var41, var45, "hi!", var90);
    com.martiansoftware.jsap.UnflaggedOption var92 = new com.martiansoftware.jsap.UnflaggedOption(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "hi!"+ "'", var60.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + ""+ "'", var90.equals(""));

  }

  public void test41() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    boolean var40 = var39.messagePrinted();
    java.lang.String var41 = var39.getHelp();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    boolean var46 = var45.messagePrinted();
    java.lang.String var47 = var45.getHelp();
    com.martiansoftware.jsap.ParseException var48 = new com.martiansoftware.jsap.ParseException(var47);
    java.lang.String[] var49 = new java.lang.String[] { var47};
    com.martiansoftware.jsap.JSAPResult var50 = var39.parse(var49);
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    java.lang.String var53 = var51.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var54 = new com.martiansoftware.jsap.SimpleJSAP(var53);
    float[] var55 = var50.getFloatArray(var53);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var65 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var68 = var50.getCharArray("hi!");
    java.lang.Class[] var69 = var14.getClassArray("hi!");
    java.util.Iterator var70 = var14.getBadParameterIDIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var41.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var47.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);

  }

  public void test42() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    boolean var21 = var19.messagePrinted();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var34 = var23.getHelp((-1), "hi!");
    java.lang.String var35 = var19.getHelp(100, "hi!");
    java.util.Date[] var36 = var15.getDateArray(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    java.lang.String var45 = var43.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var46 = new com.martiansoftware.jsap.SimpleJSAP(var45);
    boolean var47 = var46.messagePrinted();
    java.lang.String var48 = var46.getHelp();
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException(var48);
    java.lang.String[] var50 = new java.lang.String[] { var48};
    com.martiansoftware.jsap.JSAPResult var51 = var40.parse(var50);
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    java.util.Iterator var54 = var52.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var55 = var52.getIDMap();
    java.lang.String var56 = var52.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var60 = var51.getByte(var56, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var61 = new com.martiansoftware.jsap.QualifiedSwitch(var56);
    java.net.InetAddress[] var62 = var15.getInetAddressArray(var56);
    com.martiansoftware.jsap.TestOption var63 = new com.martiansoftware.jsap.TestOption();
    int var64 = var63.countTestCases();
    var63.testSettersAndGetters();
    var63.testSettersAndGetters();
    int var67 = var63.countTestCases();
    java.util.List var68 = com.martiansoftware.util.StringUtils.wrapToList(var56, var67);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var69 = var0.parse(var56);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var35.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var48.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);

  }

  public void test43() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var12 = new com.martiansoftware.jsap.TestOption();
    int var13 = var12.countTestCases();
    int var14 = var12.countTestCases();
    java.lang.String var15 = com.martiansoftware.util.StringUtils.padRight("hi!", var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    java.lang.String var21 = var19.getHelp();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var23 = var22.getHelp();
    java.lang.String var24 = var22.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var25 = new com.martiansoftware.jsap.SimpleJSAP(var24);
    boolean var26 = var25.messagePrinted();
    java.lang.String var27 = var25.getHelp();
    com.martiansoftware.jsap.ParseException var28 = new com.martiansoftware.jsap.ParseException(var27);
    java.lang.String[] var29 = new java.lang.String[] { var27};
    com.martiansoftware.jsap.JSAPResult var30 = var19.parse(var29);
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var40 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var41 = var30.getClass("hi!");
    java.lang.String var44 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var45 = var30.getURLArray(var44);
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.util.Iterator var48 = var46.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var49 = var46.getIDMap();
    java.lang.String var50 = var46.getHelp();
    java.lang.String var51 = var46.toString();
    java.lang.Object[] var52 = var30.getObjectArray(var51);
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var15, var51);
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    java.lang.String var56 = var54.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var57 = new com.martiansoftware.jsap.SimpleJSAP(var56);
    boolean var58 = var57.messagePrinted();
    java.lang.String var59 = var57.getHelp();
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var68 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var69 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var70 = var69.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var71 = var57.setScreenWidth(var70);
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var73 = var72.getHelp();
    java.lang.String var74 = var72.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var75 = new com.martiansoftware.jsap.SimpleJSAP(var74);
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var75.unregisterParameter((com.martiansoftware.jsap.Parameter)var77);
    com.martiansoftware.jsap.TestOption var79 = new com.martiansoftware.jsap.TestOption();
    int var80 = var79.countTestCases();
    int var81 = var79.countTestCases();
    int var82 = var79.countTestCases();
    java.lang.String var83 = var75.getHelp(var82);
    junit.framework.Assert.assertEquals(var70, var82);
    java.lang.String var85 = var53.getHelp(var70);
    com.martiansoftware.jsap.JSAP var86 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var87 = var86.getHelp();
    java.lang.String var88 = var86.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var89 = new com.martiansoftware.jsap.SimpleJSAP(var88);
    java.lang.String[] var90 = new java.lang.String[] { var88};
    com.martiansoftware.jsap.JSAPResult var91 = var53.parse(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi! "+ "'", var15.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var21.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var27.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "hi!"+ "'", var44.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var59.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var83.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var85.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + ""+ "'", var87.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + ""+ "'", var88.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);

  }

  public void test44() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    boolean var29 = var28.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var34 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var35 = var31.setHelp("hi!");
    var31.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var38 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var39 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var40 = var39.getHelp();
    java.lang.String var41 = var39.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var42 = new com.martiansoftware.jsap.SimpleJSAP(var41);
    boolean var43 = var42.messagePrinted();
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var55 = var44.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var56 = new com.martiansoftware.jsap.SimpleJSAP(var55);
    com.martiansoftware.jsap.UnflaggedOption var57 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var38, var43, var55);
    com.martiansoftware.jsap.ant.SwitchConfiguration var58 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var59 = var58.getLongflag();
    var58.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var65 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var69 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var70 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var71 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var77 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var78 = var77.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var79 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var71, "hi!", true, '4', "", var78);
    com.martiansoftware.jsap.Switch var80 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var81 = var28.setUsageName("hi!");
    com.martiansoftware.jsap.JSAP var82 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var87 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var90 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var91 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var92 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var93 = var82.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var94 = new com.martiansoftware.jsap.SimpleJSAP(var93);
    com.martiansoftware.jsap.JSAPException var95 = new com.martiansoftware.jsap.JSAPException(var93);
    com.martiansoftware.jsap.UnflaggedOption var96 = var28.setUsageName(var93);
    com.martiansoftware.jsap.UnknownFlagException var97 = new com.martiansoftware.jsap.UnknownFlagException(var93);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var98 = var0.parse(var93);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "hi!"+ "'", var34.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ""+ "'", var93.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);

  }

  public void test45() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var14 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var22 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var14, "hi!", true, '4', "", var21);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var23 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var31 = var29.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var33 = var29.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var23, var26, false, '4', "hi!");
    var3.setUsage(var26);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var59 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    java.lang.String var62 = var60.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var63 = new com.martiansoftware.jsap.SimpleJSAP(var62);
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var67 = var65.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var69 = var65.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var74 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var75 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var59, var62, false, '4', "hi!");
    java.lang.String var78 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var79 = com.martiansoftware.util.StringUtils.wrapToList(var62, 1);
    java.util.List var81 = com.martiansoftware.util.StringUtils.wrapToList(var62, 1);
    com.martiansoftware.jsap.SyntaxException var82 = new com.martiansoftware.jsap.SyntaxException(var62);
    com.martiansoftware.jsap.JSAPResult var83 = var3.parse(var62);
    com.martiansoftware.jsap.IDMap var84 = var3.getIDMap();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "hi!"+ "'", var78.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);

  }

  public void test46() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var16 = var15.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var17 = var3.setScreenWidth(var16);
    boolean var18 = var17.messagePrinted();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)var18);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);

  }

  public void test47() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigDecimalStringParser var0 = new com.martiansoftware.jsap.stringparsers.BigDecimalStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var2 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var3 = var2.idIterator();
    com.martiansoftware.jsap.JSAP var4 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var15 = var4.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var25 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var33 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var25, "hi!", true, '4', "", var32);
    java.lang.String[] var34 = new java.lang.String[] { var32};
    var2.addDefault(var15, var34);
    java.lang.String[] var36 = new java.lang.String[] { var15};
    com.martiansoftware.jsap.JSAPResult var37 = var1.parse(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var47 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var50 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var51 = var37.contains("hi!");
    java.math.BigInteger[] var53 = var37.getBigIntegerArray("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var54 = var0.parse("");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);

  }

  public void test48() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    java.util.Iterator var9 = var6.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    boolean var15 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var28 = var17.getHelp((-1), "hi!");
    java.lang.String var29 = var13.getHelp(100, "hi!");
    java.lang.String var30 = var6.getHelp(100);
    com.martiansoftware.jsap.Flagged var31 = var3.getByLongFlag(var30);
    boolean var32 = var3.messagePrinted();
    junit.framework.Assert.assertFalse(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var29.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);

  }

  public void test49() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    java.lang.String var35 = var33.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var36 = new com.martiansoftware.jsap.SimpleJSAP(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var36.unregisterParameter((com.martiansoftware.jsap.Parameter)var38);
    com.martiansoftware.jsap.TestOption var40 = new com.martiansoftware.jsap.TestOption();
    int var41 = var40.countTestCases();
    int var42 = var40.countTestCases();
    int var43 = var40.countTestCases();
    java.lang.String var44 = var36.getHelp(var43);
    char[] var45 = var14.getCharArray(var44);
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var55 = var54.getShortFlag();
    char var56 = var54.getShortFlag();
    java.lang.Character var57 = var54.getShortFlagCharacter();
    java.lang.String var58 = var54.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      float var59 = var14.getFloat(var58);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var44.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + '4'+ "'", var57.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "[-4|--hi!]"+ "'", var58.equals("[-4|--hi!]"));

  }

  public void test50() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var51 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);

  }

  public void test51() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.Character var18 = var17.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = var17.setLongFlag("hi!");
    boolean var22 = var17.isList();
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var25 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var24);
    java.lang.String var26 = var24.toString();
    java.lang.String var27 = com.martiansoftware.util.StringUtils.noNull(var26);
    com.martiansoftware.jsap.Parameter var28 = var17.setHelp(var27);
    junit.framework.Assert.assertNotNull((java.lang.Object)var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + '4'+ "'", var18.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var26.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var27.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);

  }

  public void test52() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test10();
    var0.test10();
    var0.test5();

  }

  public void test53() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    var0.setUp();
    com.martiansoftware.jsap.JSAP var4 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var5 = var4.getHelp();
    java.lang.String var6 = var4.getUsage();
    com.martiansoftware.jsap.IDMap var7 = var4.getIDMap();
    com.martiansoftware.jsap.stringparsers.DateStringParser var8 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var13 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var14 = var10.setHelp("hi!");
    var10.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var17 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    java.lang.String var20 = var18.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var21 = new com.martiansoftware.jsap.SimpleJSAP(var20);
    boolean var22 = var21.messagePrinted();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var34 = var23.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    com.martiansoftware.jsap.UnflaggedOption var36 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var17, var22, var34);
    com.martiansoftware.jsap.ant.SwitchConfiguration var37 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var38 = var37.getLongflag();
    var37.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var68 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var8.setProperty("", "hi!");
    boolean var70 = var7.idExists("hi!");
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var75 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var76 = var72.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var77 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var78 = var72.setStringParser((com.martiansoftware.jsap.StringParser)var77);
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var86 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var87 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var88 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var91 = var78.setHelp("hi!");
    java.lang.String var92 = var7.getIDByLongFlag("hi!");
    java.lang.Object var93 = var0.parse("hi!");
    boolean var94 = var0.mustBeFile();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "hi!"+ "'", var13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "hi!"+ "'", var75.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == false);

  }

  public void test54() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var47 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var48 = var46.setStringParser((com.martiansoftware.jsap.StringParser)var47);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var49 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var50 = var49.getParameter();
    boolean var51 = var49.declaredListSeparator();
    char var52 = var49.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var53 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var54 = var53.hasProperties();
    var49.setRequired(var54);
    com.martiansoftware.jsap.UnflaggedOption var56 = var46.setGreedy(var54);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var60 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var64 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var65 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var66 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var73 = var72.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var74 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var66, "hi!", true, '4', "", var73);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var75 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    java.lang.String var78 = var76.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var79 = new com.martiansoftware.jsap.SimpleJSAP(var78);
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var83 = var81.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var85 = var81.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var87 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var90 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var91 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var75, var78, false, '4', "hi!");
    java.lang.String var94 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var95 = com.martiansoftware.util.StringUtils.wrapToList(var78, 1);
    com.martiansoftware.jsap.UnflaggedOption var96 = var46.setUsageName(var78);
    boolean var97 = var46.isGreedy();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "hi!"+ "'", var94.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);

  }

  public void test55() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    com.martiansoftware.jsap.Parameter var5 = var0.getParameter();
    java.lang.String[] var6 = var0.getDefaults();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == null);

  }

  public void test56() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    java.lang.String var12 = var8.getSyntax();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var14 = var13.getHelp();
    java.lang.String var15 = var13.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var16 = new com.martiansoftware.jsap.SimpleJSAP(var15);
    boolean var17 = var16.messagePrinted();
    java.lang.String var18 = var16.getHelp();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    boolean var23 = var22.messagePrinted();
    java.lang.String var24 = var22.getHelp();
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException(var24);
    java.lang.String[] var26 = new java.lang.String[] { var24};
    com.martiansoftware.jsap.JSAPResult var27 = var16.parse(var26);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var37 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var38 = var27.getClass("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var40 = var39.getID();
    com.martiansoftware.jsap.Switch var41 = var8.setLongFlag(var40);
    char var42 = var8.getShortFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "[-4|--hi!]"+ "'", var12.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var18.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var24.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!"+ "'", var40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == '4');

  }

  public void test57() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test7();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test58() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    boolean var48 = var14.success();
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    java.lang.String var51 = var49.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    boolean var53 = var52.messagePrinted();
    java.lang.String var54 = var52.getHelp();
    java.lang.String var57 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var57, 10.0f, 10.0f, 1.0f);
    var52.setHelp(var57);
    java.util.Date[] var69 = var14.getDateArray(var57);
    com.martiansoftware.jsap.JSAPException var70 = new com.martiansoftware.jsap.JSAPException(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var54.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "hi!"+ "'", var57.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);

  }

  public void test59() throws Throwable {

    com.martiansoftware.jsap.xml.JSAPConfig var0 = new com.martiansoftware.jsap.xml.JSAPConfig();
    java.lang.String var1 = var0.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var2 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    java.lang.String var3 = var2.getStringparser();
    com.martiansoftware.jsap.Defaults var4 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var5 = var4.idIterator();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var17 = var6.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.lang.String[] var36 = new java.lang.String[] { var34};
    var4.addDefault(var17, var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var47 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var55 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var56 = var52.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var57 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var58 = var57.getID();
    java.lang.String[] var59 = new java.lang.String[] { var58};
    var4.addDefault("hi!", var59);
    var2.setId("hi!");
    var0.setUsage("hi!");
    java.util.Iterator var63 = var0.parameters();
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    java.lang.String var66 = var64.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var67 = new com.martiansoftware.jsap.SimpleJSAP(var66);
    boolean var68 = var67.messagePrinted();
    java.lang.String var69 = var67.getHelp();
    com.martiansoftware.jsap.JSAP var70 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var71 = var70.getHelp();
    java.lang.String var72 = var70.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var73 = new com.martiansoftware.jsap.SimpleJSAP(var72);
    boolean var74 = var73.messagePrinted();
    java.lang.String var75 = var73.getHelp();
    com.martiansoftware.jsap.ParseException var76 = new com.martiansoftware.jsap.ParseException(var75);
    java.lang.String[] var77 = new java.lang.String[] { var75};
    com.martiansoftware.jsap.JSAPResult var78 = var67.parse(var77);
    com.martiansoftware.jsap.JSAP var79 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var80 = var79.getHelp();
    java.util.Iterator var81 = var79.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var82 = var79.getIDMap();
    java.lang.String var83 = var79.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var87 = var78.getByte(var83, (byte)(-1));
    com.martiansoftware.jsap.SimpleJSAP var88 = new com.martiansoftware.jsap.SimpleJSAP(var83);
    var0.setHelp(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!"+ "'", var55.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "hi!"+ "'", var58.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var69.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var75.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + ""+ "'", var80.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + ""+ "'", var83.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == (byte)(-1));

  }

  public void test60() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    java.lang.String[] var3 = var0.getDefaults();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);

  }

  public void test61() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntegerStringParser var0 = com.martiansoftware.jsap.stringparsers.IntegerStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var3 = var2.getHelp();
    java.lang.String var4 = var2.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var5 = new com.martiansoftware.jsap.SimpleJSAP(var4);
    boolean var6 = var5.messagePrinted();
    java.lang.String var7 = var5.getHelp();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var9 = var8.getHelp();
    java.lang.String var10 = var8.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var11 = new com.martiansoftware.jsap.SimpleJSAP(var10);
    boolean var12 = var11.messagePrinted();
    java.lang.String var13 = var11.getHelp();
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException(var13);
    java.lang.String[] var15 = new java.lang.String[] { var13};
    com.martiansoftware.jsap.JSAPResult var16 = var5.parse(var15);
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var26 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var27 = var16.getClass("hi!");
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var39 = var28.getHelp((-1), "hi!");
    double var41 = var16.getDouble(var39, 0.0d);
    com.martiansoftware.jsap.UnflaggedOption var42 = new com.martiansoftware.jsap.UnflaggedOption(var39);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var43 = var0.parse(var39);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var7.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var13.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 0.0d);

  }

  public void test62() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ByteStringParser var0 = com.martiansoftware.jsap.stringparsers.ByteStringParser.getParser();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)var0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);

  }

  public void test63() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ShortStringParser var0 = new com.martiansoftware.jsap.stringparsers.ShortStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var26 = var15.getClass("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var38 = var27.getHelp((-1), "hi!");
    double var40 = var15.getDouble(var38, 0.0d);
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.ParseException var47 = new com.martiansoftware.jsap.ParseException(var46);
    java.util.Iterator var48 = var15.getExceptionIterator(var46);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var52 = var50.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var54 = var50.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var62 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var63 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var64 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var54.addDefault("hi!");
    boolean var68 = var15.contains("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var69 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);

  }

  public void test64() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    var0.setShortflag('#');
    com.martiansoftware.jsap.Parameter var7 = var0.getParameter();
    com.martiansoftware.jsap.Parameter var8 = var0.getParameter();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);

  }

  public void test65() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch(var21);
    java.lang.Character var36 = var35.getShortFlagCharacter();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    java.lang.String var45 = var43.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var46 = new com.martiansoftware.jsap.SimpleJSAP(var45);
    boolean var47 = var46.messagePrinted();
    java.lang.String var48 = var46.getHelp();
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException(var48);
    java.lang.String[] var50 = new java.lang.String[] { var48};
    com.martiansoftware.jsap.JSAPResult var51 = var40.parse(var50);
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    java.lang.String var54 = var52.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var55 = new com.martiansoftware.jsap.SimpleJSAP(var54);
    float[] var56 = var51.getFloatArray(var54);
    com.martiansoftware.jsap.JSAPException var57 = new com.martiansoftware.jsap.JSAPException(var54);
    com.martiansoftware.jsap.Switch var58 = var35.setDefault(var54);
    char var59 = var35.getShortFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var48.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == '\u0000');

  }

  public void test66() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var6 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var7 = var6.hasProperties();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var8 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var9 = var8.hasProperties();
    java.lang.String var10 = var8.getStringparser();
    boolean var11 = var8.getIslist();
    com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var12 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var5, var7, var11);
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var22 = var21.getShortFlag();
    char var23 = var21.getShortFlag();
    char var24 = var21.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var29 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var30 = var26.setHelp("hi!");
    var26.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var33 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var35 = var34.getHelp();
    java.lang.String var36 = var34.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var37 = new com.martiansoftware.jsap.SimpleJSAP(var36);
    boolean var38 = var37.messagePrinted();
    com.martiansoftware.jsap.JSAP var39 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var50 = var39.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var51 = new com.martiansoftware.jsap.SimpleJSAP(var50);
    com.martiansoftware.jsap.UnflaggedOption var52 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var33, var38, var50);
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var62 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var68 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var69 = var68.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var70 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var62, "hi!", true, '4', "", var69);
    com.martiansoftware.jsap.UnflaggedOption var71 = var52.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var72 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var73 = var71.setStringParser((com.martiansoftware.jsap.StringParser)var72);
    char var74 = var71.getListSeparator();
    com.martiansoftware.jsap.Switch var75 = var21.setShortFlag(var74);
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var78 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var79 = var21.setLongFlag("hi!");
    com.martiansoftware.jsap.Switch var80 = new com.martiansoftware.jsap.Switch("hi!");
    com.martiansoftware.jsap.ParseException var81 = new com.martiansoftware.jsap.ParseException("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var82 = var12.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "hi!"+ "'", var29.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);

  }

  public void test67() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var12 = new com.martiansoftware.jsap.TestOption();
    int var13 = var12.countTestCases();
    int var14 = var12.countTestCases();
    java.lang.String var15 = com.martiansoftware.util.StringUtils.padRight("hi!", var14);
    com.martiansoftware.jsap.TestUsageString var16 = new com.martiansoftware.jsap.TestUsageString(var15);
    var16.testUsage2();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi! "+ "'", var15.equals("hi! "));

  }

  public void test68() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    boolean var1 = var0.mustBeDirectory();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);

  }

  public void test69() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.ant.SwitchConfiguration var28 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var29 = var28.getLongflag();
    var28.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var51 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var52 = var51.getParameter();
    java.lang.String var53 = var51.getLongflag();
    com.martiansoftware.jsap.Defaults var54 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var55 = var54.idIterator();
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var65 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var68 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var72 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var76 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var77 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var78 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var84 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var85 = var84.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var86 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var78, "hi!", true, '4', "", var85);
    java.lang.Character var87 = var86.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var90 = var86.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var91 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var92 = new java.lang.String[] { "hi!"};
    var54.addDefault("hi!", var92);
    java.lang.String var94 = com.martiansoftware.util.StringUtils.noNull("hi!");
    var51.setId("hi!");
    com.martiansoftware.jsap.Parameter var96 = var50.setHelp("hi!");
    com.martiansoftware.jsap.Switch var98 = var50.setShortFlag('4');
    java.lang.String var99 = var98.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + ""+ "'", var85.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + '4'+ "'", var87.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "hi!"+ "'", var94.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var98 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var99 + "' != '" + "[-4|--hi!]"+ "'", var99.equals("[-4|--hi!]"));

  }

  public void test70() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test5();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var14 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var22 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var14, "hi!", true, '4', "", var21);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var23 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var31 = var29.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var33 = var29.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var23, var26, false, '4', "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var0, (java.lang.Object)var26);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);

  }

  public void test71() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var30 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var43 = var0.getProperty("hi!", "hi!");
    com.martiansoftware.jsap.UnflaggedOption var44 = new com.martiansoftware.jsap.UnflaggedOption(var43);
    com.martiansoftware.jsap.UnknownFlagException var46 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.UnflaggedOption var47 = var44.setListSeparator('4');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);

  }

  public void test72() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));

  }

  public void test73() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ClassStringParser var0 = com.martiansoftware.jsap.stringparsers.ClassStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    float[] var20 = var15.getFloatArray(var18);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var30 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var33 = var15.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var38 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var39 = var35.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var40 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = var35.setStringParser((com.martiansoftware.jsap.StringParser)var40);
    com.martiansoftware.jsap.ant.SwitchConfiguration var42 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var43 = var42.getLongflag();
    var42.setShortflag('#');
    java.lang.String var46 = var42.getLongflag();
    var42.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var49 = var35.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var59 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var67 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var59, "hi!", true, '4', "", var66);
    java.lang.String[] var68 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.FlaggedOption var69 = var49.setDefault(var68);
    com.martiansoftware.jsap.ant.SwitchConfiguration var70 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    boolean var71 = var70.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var72 = var69.setList(var71);
    java.lang.String var73 = var72.getSyntax();
    char[] var74 = var15.getCharArray(var73);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var75 = var0.parse(var73);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "hi!"+ "'", var38.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "[<hi!>]"+ "'", var73.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);

  }

  public void test74() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var51 = var27.setList(false);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var55 = var53.setRequired(false);
    java.lang.String var56 = var53.getID();
    boolean var57 = var53.allowMultipleDeclarations();
    com.martiansoftware.jsap.UnflaggedOption var58 = var51.setList(var57);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var62 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var66 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var67 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var68 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var71 = new com.martiansoftware.jsap.ParseException();
    com.martiansoftware.jsap.JSAPException var72 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var71);
    junit.framework.Assert.assertNotNull("hi!", (java.lang.Object)var71);
    com.martiansoftware.jsap.UnflaggedOption var74 = var51.setUsageName("hi!");
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var78 = var76.setRequired(false);
    java.lang.String var79 = var76.getID();
    boolean var80 = var76.allowMultipleDeclarations();
    com.martiansoftware.jsap.stringparsers.FileStringParser var81 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var81.tearDown();
    var81.setUp();
    boolean var84 = var81.mustExist();
    junit.framework.Assert.assertEquals("hi!", var80, var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "hi!"+ "'", var56.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "hi!"+ "'", var79.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == false);

  }

  public void test75() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    java.lang.String var4 = var1.getID();
    java.lang.String[] var5 = var1.getDefault();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    var7.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var14 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var31 = var20.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    com.martiansoftware.jsap.UnflaggedOption var33 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var14, var19, var31);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var43 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var51 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var43, "hi!", true, '4', "", var50);
    com.martiansoftware.jsap.UnflaggedOption var52 = var33.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var53 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var54 = var52.setStringParser((com.martiansoftware.jsap.StringParser)var53);
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var62 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var63 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var64 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var70 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var71 = var70.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var72 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var64, "hi!", true, '4', "", var71);
    java.lang.String var73 = var72.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var73);
    com.martiansoftware.jsap.UnflaggedOption var75 = var52.setUsageName(var73);
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var80 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var81 = var77.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var82 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var83 = var77.setStringParser((com.martiansoftware.jsap.StringParser)var82);
    com.martiansoftware.jsap.ant.SwitchConfiguration var84 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var85 = var84.getLongflag();
    var84.setShortflag('#');
    java.lang.String var88 = var84.getLongflag();
    var84.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var91 = var77.setListSeparator('#');
    com.martiansoftware.jsap.UnflaggedOption var92 = var52.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var93 = var1.setShortFlag('#');
    char var94 = var93.getListSeparator();
    char var95 = var93.getListSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var73.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "hi!"+ "'", var80.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == ':');

  }

  public void test76() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testSimpleDefault();
    var0.setUp();
    var0.testDefaults2();
    var0.testSimpleDefault();
    var0.testDefaults2();
    var0.testConfig();

  }

  public void test77() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.Defaults var3 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var4 = var3.idIterator();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var14 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.lang.Character var36 = var35.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var39 = var35.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var40 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var41 = new java.lang.String[] { "hi!"};
    var3.addDefault("hi!", var41);
    java.lang.String var43 = com.martiansoftware.util.StringUtils.noNull("hi!");
    var0.setId("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    java.lang.String var47 = var45.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var48 = new com.martiansoftware.jsap.SimpleJSAP(var47);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var48.unregisterParameter((com.martiansoftware.jsap.Parameter)var50);
    java.lang.String var52 = var50.getSyntax();
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    java.lang.String var55 = var53.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var56 = new com.martiansoftware.jsap.SimpleJSAP(var55);
    boolean var57 = var56.messagePrinted();
    java.lang.String var58 = var56.getHelp();
    com.martiansoftware.jsap.ParseException var59 = new com.martiansoftware.jsap.ParseException(var58);
    com.martiansoftware.jsap.FlaggedOption var60 = var50.setUsageName(var58);
    java.lang.String var61 = var60.getHelp();
    var0.setStringparser(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + '4'+ "'", var36.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "[<hi!>]"+ "'", var52.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var58.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));

  }

  public void test78() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.IntSizeStringParser.getParser();
    var0.tearDown();
    com.martiansoftware.jsap.ant.ParserProperty var2 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var7 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var8 = var4.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var9 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var2.setValue("hi!");
    java.lang.String var11 = var2.getValue();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var12 = var0.parse(var11);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));

  }

  public void test79() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    java.util.Iterator var3 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var4 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var5 = var4.getHelp();
    java.lang.String var6 = var4.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var7 = new com.martiansoftware.jsap.SimpleJSAP(var6);
    boolean var8 = var7.messagePrinted();
    boolean var9 = var7.messagePrinted();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var22 = var11.getHelp((-1), "hi!");
    java.lang.String var23 = var7.getHelp(100, "hi!");
    java.lang.String var24 = var0.getHelp(100);
    com.martiansoftware.jsap.TestUsageString var25 = new com.martiansoftware.jsap.TestUsageString(var24);
    var25.testUsage2();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var23.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));

  }

  public void test80() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    boolean var3 = var0.declaredListSeparator();
    java.lang.String var4 = var0.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty[] var5 = var0.getParserProperties();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);

  }

  public void test81() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var12 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = var7.setStringParser((com.martiansoftware.jsap.StringParser)var12);
    com.martiansoftware.jsap.ant.SwitchConfiguration var14 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var15 = var14.getLongflag();
    var14.setShortflag('#');
    java.lang.String var18 = var14.getLongflag();
    var14.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var21 = var7.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    java.lang.String[] var40 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.FlaggedOption var41 = var21.setDefault(var40);
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var41);
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    java.lang.String var45 = var43.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var46 = new com.martiansoftware.jsap.SimpleJSAP(var45);
    boolean var47 = var46.messagePrinted();
    java.lang.String var48 = var46.getHelp();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var58 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var59 = var58.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var60 = var46.setScreenWidth(var59);
    boolean var61 = var60.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var65 = var63.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var67 = var63.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var76 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var77 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var67.addDefault("hi!");
    com.martiansoftware.jsap.JSAPResult var81 = var60.parse("hi!");
    java.lang.String var82 = var60.toString();
    java.lang.String[] var83 = new java.lang.String[] { var82};
    com.martiansoftware.jsap.FlaggedOption var84 = var41.setDefault(var83);
    java.lang.String var85 = var41.getUsageName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var48.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "[--help]"+ "'", var82.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi!"+ "'", var85.equals("hi!"));

  }

  public void test82() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var57 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var65 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var57, "hi!", true, '4', "", var64);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var66 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    java.lang.String var69 = var67.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var70 = new com.martiansoftware.jsap.SimpleJSAP(var69);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var74 = var72.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var76 = var72.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var78 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var81 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var66, var69, false, '4', "hi!");
    java.lang.String var85 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var86 = com.martiansoftware.util.StringUtils.wrapToList(var69, 1);
    java.util.List var88 = com.martiansoftware.util.StringUtils.wrapToList(var69, 1);
    char[] var89 = var14.getCharArray(var69);
    com.martiansoftware.jsap.TestUsageString var90 = new com.martiansoftware.jsap.TestUsageString(var69);
    var90.testUsage2();
    var90.testUsage2();
    var90.testUsage1();
    junit.framework.TestResult var94 = var90.run();
    var90.testUsage1();
    var90.testUsage1();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi!"+ "'", var85.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);

  }

  public void test83() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    java.lang.String var17 = var4.getIDByLongFlag(var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.lang.Character var36 = var35.getShortFlagCharacter();
    java.lang.Character var37 = var35.getShortFlagCharacter();
    java.lang.String var38 = var4.getIDByShortFlag((char)var37);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var39 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var40 = var39.getParameter();
    boolean var41 = var39.declaredListSeparator();
    boolean var42 = var39.getIslist();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var47 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var48 = var44.setHelp("hi!");
    var44.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var51 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    java.lang.String var54 = var52.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var55 = new com.martiansoftware.jsap.SimpleJSAP(var54);
    boolean var56 = var55.messagePrinted();
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var62 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var66 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var67 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var68 = var57.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var69 = new com.martiansoftware.jsap.SimpleJSAP(var68);
    com.martiansoftware.jsap.UnflaggedOption var70 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var51, var56, var68);
    com.martiansoftware.jsap.ant.SwitchConfiguration var71 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var72 = var71.getLongflag();
    var71.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var78 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var82 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var83 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var84 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var86 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var90 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var91 = var90.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var92 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var84, "hi!", true, '4', "", var91);
    com.martiansoftware.jsap.Switch var93 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var39.setListseparator('#');
    java.lang.String var95 = var4.getIDByShortFlag('#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + '4'+ "'", var36.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + '4'+ "'", var37.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "hi!"+ "'", var47.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + ""+ "'", var91.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == null);

  }

  public void test84() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ShortStringParser var0 = new com.martiansoftware.jsap.stringparsers.ShortStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var26 = var15.getClass("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var38 = var27.getHelp((-1), "hi!");
    double var40 = var15.getDouble(var38, 0.0d);
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.ParseException var47 = new com.martiansoftware.jsap.ParseException(var46);
    java.util.Iterator var48 = var15.getExceptionIterator(var46);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var58 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var66 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var58, "hi!", true, '4', "", var65);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var67 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var68 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var69 = var68.getHelp();
    java.lang.String var70 = var68.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var71 = new com.martiansoftware.jsap.SimpleJSAP(var70);
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var75 = var73.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var77 = var73.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var79 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var82 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var83 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var67, var70, false, '4', "hi!");
    java.lang.String var86 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var87 = com.martiansoftware.util.StringUtils.wrapToList(var70, 1);
    java.util.List var89 = com.martiansoftware.util.StringUtils.wrapToList(var70, 1);
    char[] var90 = var15.getCharArray(var70);
    com.martiansoftware.jsap.TestUsageString var91 = new com.martiansoftware.jsap.TestUsageString(var70);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var92 = var0.parse(var70);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + "hi!"+ "'", var86.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);

  }

  public void test85() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testSimpleDefault();
    var0.setUp();
    var0.tearDown();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    var7.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var14 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var31 = var20.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    com.martiansoftware.jsap.UnflaggedOption var33 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var14, var19, var31);
    boolean var34 = var33.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var39 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var40 = var36.setHelp("hi!");
    var36.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var43 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    java.lang.String var46 = var44.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var47 = new com.martiansoftware.jsap.SimpleJSAP(var46);
    boolean var48 = var47.messagePrinted();
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var60 = var49.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    com.martiansoftware.jsap.UnflaggedOption var62 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var43, var48, var60);
    com.martiansoftware.jsap.ant.SwitchConfiguration var63 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var64 = var63.getLongflag();
    var63.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var70 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var74 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var75 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var76 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var82 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var83 = var82.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var84 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var76, "hi!", true, '4', "", var83);
    com.martiansoftware.jsap.Switch var85 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var86 = var33.setUsageName("hi!");
    com.martiansoftware.jsap.TestOption var87 = new com.martiansoftware.jsap.TestOption();
    int var88 = var87.countTestCases();
    int var89 = var87.countTestCases();
    java.lang.String var90 = com.martiansoftware.util.StringUtils.padRight("hi!", var89);
    var0.setName(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "hi!"+ "'", var39.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + ""+ "'", var83.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + "hi! "+ "'", var90.equals("hi! "));

  }

  public void test86() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test5();
    int var5 = var0.countTestCases();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);

  }

  public void test87() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    java.lang.String[] var22 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var32 = var0.getProperty("", "hi!");
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var33 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser("");
    var33.testBasicParse();
    var33.testBasicParse();
    var33.testBasicParse();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));

  }

  public void test88() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var51 = var27.setList(false);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var61 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var69 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var61, "hi!", true, '4', "", var68);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var70 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    java.lang.String var73 = var71.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var74 = new com.martiansoftware.jsap.SimpleJSAP(var73);
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var78 = var76.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var80 = var76.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var85 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var86 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, var73, false, '4', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var87 = var51.setListSeparator('4');
    com.martiansoftware.jsap.UnknownFlagException var88 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    java.lang.String var89 = var88.getFlag();
    java.lang.String var90 = var88.getFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + "4"+ "'", var89.equals("4"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + "4"+ "'", var90.equals("4"));

  }

  public void test89() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    boolean var5 = var3.messagePrinted();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var18 = var7.getHelp((-1), "hi!");
    java.lang.String var19 = var3.getHelp(100, "hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var23 = var21.setRequired(false);
    java.lang.String var24 = var21.getID();
    java.lang.String[] var25 = var21.getDefault();
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    java.lang.String var28 = var27.getFlag();
    com.martiansoftware.jsap.FlaggedOption var29 = var21.setDefault(var28);
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.lang.String var32 = var30.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var33 = new com.martiansoftware.jsap.SimpleJSAP(var32);
    boolean var34 = var33.messagePrinted();
    java.lang.String var35 = var33.getHelp();
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    boolean var40 = var39.messagePrinted();
    java.lang.String var41 = var39.getHelp();
    com.martiansoftware.jsap.ParseException var42 = new com.martiansoftware.jsap.ParseException(var41);
    java.lang.String[] var43 = new java.lang.String[] { var41};
    com.martiansoftware.jsap.JSAPResult var44 = var33.parse(var43);
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var54 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var55 = var44.getClass("hi!");
    java.lang.String var57 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 100);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("hi!", (java.lang.Object)var29, (java.lang.Object)var57);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var19.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "hi!"+ "'", var24.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "4"+ "'", var28.equals("4"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var35.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var41.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "hi!                                                                                                 "+ "'", var57.equals("hi!                                                                                                 "));

  }

  public void test90() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    java.lang.String var28 = var26.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var29 = new com.martiansoftware.jsap.SimpleJSAP(var28);
    com.martiansoftware.jsap.IDMap var30 = var29.getIDMap();
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var42 = var31.getHelp((-1), "hi!");
    java.lang.String var43 = var30.getIDByLongFlag(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var53 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var61 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var53, "hi!", true, '4', "", var60);
    java.util.List var63 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var64 = var30.getIDByLongFlag("");
    long[] var65 = var14.getLongArray("");
    com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource var66 = new com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource();
    int var67 = var66.countTestCases();
    com.martiansoftware.jsap.TestOption var68 = new com.martiansoftware.jsap.TestOption();
    int var69 = var68.countTestCases();
    int var70 = var68.countTestCases();
    int var71 = var68.countTestCases();
    junit.framework.Assert.assertEquals("", var67, var71);
    com.martiansoftware.jsap.TestCommandLineTokenizer var73 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var73.test7();
    var73.test2();
    var73.test6();
    var73.test4();
    int var78 = var73.countTestCases();
    junit.framework.Assert.assertEquals(var67, var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);

  }

  public void test91() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var57 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var65 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var57, "hi!", true, '4', "", var64);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var66 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    java.lang.String var69 = var67.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var70 = new com.martiansoftware.jsap.SimpleJSAP(var69);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var74 = var72.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var76 = var72.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var78 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var81 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var66, var69, false, '4', "hi!");
    java.lang.String var85 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var86 = com.martiansoftware.util.StringUtils.wrapToList(var69, 1);
    java.util.List var88 = com.martiansoftware.util.StringUtils.wrapToList(var69, 1);
    char[] var89 = var14.getCharArray(var69);
    com.martiansoftware.jsap.TestUsageString var90 = new com.martiansoftware.jsap.TestUsageString(var69);
    var90.testUsage2();
    var90.testUsage2();
    var90.testUsage1();
    var90.testUsage1();
    var90.testUsage2();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi!"+ "'", var85.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);

  }

  public void test92() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test5();
    var0.test7();
    var0.test4();
    var0.test9();

  }

  public void test93() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var40 = var34.setRequired(var39);
    java.lang.String[] var42 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.FlaggedOption var43 = var34.setDefault(var42);
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var46 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var45);
    java.lang.String var47 = var45.toString();
    com.martiansoftware.jsap.Parameter var48 = var34.setHelp(var47);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var58 = var57.getShortFlag();
    char var59 = var57.getShortFlag();
    java.lang.Character var60 = var57.getShortFlagCharacter();
    java.lang.String var61 = var57.getSyntax();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption(var61);
    java.lang.String[] var63 = new java.lang.String[] { var61};
    com.martiansoftware.jsap.FlaggedOption var64 = var34.setDefault(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var47.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + '4'+ "'", var60.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "[-4|--hi!]"+ "'", var61.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);

  }

  public void test94() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    java.lang.String var4 = var1.getID();
    java.lang.String[] var5 = var1.getDefault();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    var7.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var14 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var31 = var20.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    com.martiansoftware.jsap.UnflaggedOption var33 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var14, var19, var31);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var43 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var51 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var43, "hi!", true, '4', "", var50);
    com.martiansoftware.jsap.UnflaggedOption var52 = var33.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var53 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var54 = var52.setStringParser((com.martiansoftware.jsap.StringParser)var53);
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var62 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var63 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var64 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var70 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var71 = var70.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var72 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var64, "hi!", true, '4', "", var71);
    java.lang.String var73 = var72.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var73);
    com.martiansoftware.jsap.UnflaggedOption var75 = var52.setUsageName(var73);
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var80 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var81 = var77.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var82 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var83 = var77.setStringParser((com.martiansoftware.jsap.StringParser)var82);
    com.martiansoftware.jsap.ant.SwitchConfiguration var84 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var85 = var84.getLongflag();
    var84.setShortflag('#');
    java.lang.String var88 = var84.getLongflag();
    var84.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var91 = var77.setListSeparator('#');
    com.martiansoftware.jsap.UnflaggedOption var92 = var52.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var93 = var1.setShortFlag('#');
    char var94 = var93.getListSeparator();
    java.lang.String var95 = var93.getLongFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var73.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "hi!"+ "'", var80.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == null);

  }

  public void test95() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var51 = var27.setList(false);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var61 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var69 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var61, "hi!", true, '4', "", var68);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var70 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    java.lang.String var73 = var71.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var74 = new com.martiansoftware.jsap.SimpleJSAP(var73);
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var78 = var76.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var80 = var76.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var85 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var86 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, var73, false, '4', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var87 = var51.setListSeparator('4');
    com.martiansoftware.jsap.StringParser var88 = var51.getStringParser();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);

  }

  public void test96() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    java.lang.String[] var22 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var32 = var0.getProperty("", "hi!");
    var0.setUp();
    var0.setUp();
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    boolean var40 = var38.messagePrinted();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var53 = var42.getHelp((-1), "hi!");
    java.lang.String var54 = var38.getHelp(100, "hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    java.lang.String var57 = var55.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var58 = new com.martiansoftware.jsap.SimpleJSAP(var57);
    boolean var59 = var58.messagePrinted();
    java.lang.String var60 = var58.getHelp();
    com.martiansoftware.jsap.ParseException var61 = new com.martiansoftware.jsap.ParseException(var60);
    com.martiansoftware.jsap.JSAPException var62 = new com.martiansoftware.jsap.JSAPException(var54, (java.lang.Throwable)var61);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var63 = var0.parse(var54);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var54.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var60.equals("  [--help]\n        Prints this help message.\n"));

  }

  public void test97() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testRequired();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test98() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty[] var3 = var0.getParserProperties();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);

  }

  public void test99() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.Flagged var37 = var35.getByShortFlag('4');
    com.martiansoftware.jsap.IDMap var38 = var35.getIDMap();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);

  }

  public void test100() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.util.Iterator var3 = var1.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var4 = var1.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var14 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var22 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var14, "hi!", true, '4', "", var21);
    java.util.List var24 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var25 = var1.getHelp(1);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var26 = var0.parse(var25);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));

  }

  public void test101() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ClassStringParser var0 = com.martiansoftware.jsap.stringparsers.ClassStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.util.Iterator var18 = var16.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var19 = var16.getIDMap();
    java.lang.String var20 = var16.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var24 = var15.getByte(var20, (byte)(-1));
    com.martiansoftware.jsap.SimpleJSAP var25 = new com.martiansoftware.jsap.SimpleJSAP(var20);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var26 = var0.parse(var20);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == (byte)(-1));

  }

  public void test102() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var33 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var34 = var30.setHelp("hi!");
    var30.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var37 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    java.lang.String var40 = var38.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var41 = new com.martiansoftware.jsap.SimpleJSAP(var40);
    boolean var42 = var41.messagePrinted();
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var54 = var43.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var55 = new com.martiansoftware.jsap.SimpleJSAP(var54);
    com.martiansoftware.jsap.UnflaggedOption var56 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var37, var42, var54);
    com.martiansoftware.jsap.ant.SwitchConfiguration var57 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var58 = var57.getLongflag();
    var57.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var70 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var78 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, "hi!", true, '4', "", var77);
    com.martiansoftware.jsap.Switch var79 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var80 = var27.setUsageName("hi!");
    com.martiansoftware.jsap.TestOption var81 = new com.martiansoftware.jsap.TestOption();
    int var82 = var81.countTestCases();
    int var83 = var81.countTestCases();
    java.lang.String var84 = com.martiansoftware.util.StringUtils.padRight("hi!", var83);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var85 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser("hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "hi!"+ "'", var33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + "hi! "+ "'", var84.equals("hi! "));

  }

  public void test103() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    java.lang.String var7 = var4.getHelp();
    var0.setId(var7);
    com.martiansoftware.jsap.UnspecifiedParameterException var9 = new com.martiansoftware.jsap.UnspecifiedParameterException(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var7.equals("  [--help]\n        Prints this help message.\n"));

  }

  public void test104() throws Throwable {

    com.martiansoftware.jsap.ant.ParserProperty var0 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var7 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var0.setValue("hi!");
    java.lang.String var9 = var0.getName();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var11 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var12 = var11.idIterator();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var24 = var13.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var34 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var42 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var34, "hi!", true, '4', "", var41);
    java.lang.String[] var43 = new java.lang.String[] { var41};
    var11.addDefault(var24, var43);
    java.lang.String[] var45 = new java.lang.String[] { var24};
    com.martiansoftware.jsap.JSAPResult var46 = var10.parse(var45);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var51 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var52 = var48.setHelp("hi!");
    var48.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var55 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    boolean var60 = var59.messagePrinted();
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var72 = var61.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var73 = new com.martiansoftware.jsap.SimpleJSAP(var72);
    com.martiansoftware.jsap.UnflaggedOption var74 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var55, var60, var72);
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.Object[] var77 = new java.lang.Object[] { var76};
    java.lang.Object[] var78 = var46.getObjectArray("", var77);
    var0.setName("");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "hi!"+ "'", var51.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);

  }

  public void test105() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BooleanStringParser var0 = new com.martiansoftware.jsap.stringparsers.BooleanStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var10 = new com.martiansoftware.jsap.TestSwitch("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var11 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }

  }

  public void test106() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var38 = var34.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var39 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var40 = var39.getID();
    boolean[] var41 = var14.getBooleanArray(var40);
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    boolean var46 = var45.messagePrinted();
    java.lang.String var47 = var45.getHelp();
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var49 = var48.getHelp();
    java.lang.String var50 = var48.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var51 = new com.martiansoftware.jsap.SimpleJSAP(var50);
    boolean var52 = var51.messagePrinted();
    java.lang.String var53 = var51.getHelp();
    com.martiansoftware.jsap.ParseException var54 = new com.martiansoftware.jsap.ParseException(var53);
    java.lang.String[] var55 = new java.lang.String[] { var53};
    com.martiansoftware.jsap.JSAPResult var56 = var45.parse(var55);
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    java.lang.String var59 = var57.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var60 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    float[] var61 = var56.getFloatArray(var59);
    java.math.BigInteger[] var62 = var14.getBigIntegerArray(var59);
    junit.framework.Assert.assertNotNull((java.lang.Object)var14);
    junit.framework.Assert.assertNotNull((java.lang.Object)var14);
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    java.lang.String var67 = var65.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var68 = new com.martiansoftware.jsap.SimpleJSAP(var67);
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var68.unregisterParameter((com.martiansoftware.jsap.Parameter)var70);
    java.lang.String var72 = var68.getUsage();
    java.lang.String var73 = var68.getUsage();
    com.martiansoftware.jsap.TestUsageString var74 = new com.martiansoftware.jsap.TestUsageString(var73);
    char[] var75 = var14.getCharArray(var73);
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var79 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var83 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var84 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var85 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var88 = new com.martiansoftware.jsap.ParseException();
    com.martiansoftware.jsap.JSAPException var89 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var88);
    junit.framework.Assert.assertNotNull("hi!", (java.lang.Object)var88);
    boolean var91 = var14.contains("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!"+ "'", var40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var47.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var53.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "[--help]"+ "'", var72.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "[--help]"+ "'", var73.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);

  }

  public void test107() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var32 = var30.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var33 = var27.setList(false);
    java.lang.String var34 = var33.getUsageName();
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption(var34);
    var35.testShortFlag();
    var35.testLongFlag();
    var35.testLongFlag();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var35.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));

  }

  public void test108() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var41 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var42 = var38.setHelp("hi!");
    var38.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var45 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    boolean var50 = var49.messagePrinted();
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var62 = var51.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var63 = new com.martiansoftware.jsap.SimpleJSAP(var62);
    com.martiansoftware.jsap.UnflaggedOption var64 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var45, var50, var62);
    com.martiansoftware.jsap.ant.SwitchConfiguration var65 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var66 = var65.getLongflag();
    var65.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var72 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var76 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var77 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var78 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var84 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var85 = var84.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var86 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var78, "hi!", true, '4', "", var85);
    com.martiansoftware.jsap.Switch var87 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var0.unregisterParameter((com.martiansoftware.jsap.Parameter)var87);
    var0.finalize();
    var0.finalize();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "hi!"+ "'", var41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + ""+ "'", var85.equals(""));

  }

  public void test109() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var47 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var48 = var46.setStringParser((com.martiansoftware.jsap.StringParser)var47);
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    java.lang.String var51 = var49.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    boolean var53 = var52.messagePrinted();
    java.lang.String var54 = var52.getHelp();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var55 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var56 = var55.getParameter();
    boolean var57 = var55.declaredListSeparator();
    char var58 = var55.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var59 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var60 = var59.hasProperties();
    var55.setRequired(var60);
    junit.framework.Assert.assertFalse(var54, var60);
    com.martiansoftware.jsap.UnflaggedOption var63 = var46.setRequired(var60);
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var68 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var69 = var65.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var70 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var46, (java.lang.Object)var70);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var54.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "hi!"+ "'", var68.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);

  }

  public void test110() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.ant.ParserProperty var26 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var31 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var32 = var28.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var33 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var26.setValue("hi!");
    java.io.File[] var35 = var14.getFileArray("hi!");
    com.martiansoftware.jsap.TestOption var37 = new com.martiansoftware.jsap.TestOption();
    int var38 = var37.countTestCases();
    var37.testSettersAndGetters();
    var37.testSettersAndGetters();
    int var41 = var37.countTestCases();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!", (-1), var41);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "hi!"+ "'", var31.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);

  }

  public void test111() throws Throwable {

    com.martiansoftware.jsap.ant.DefaultValue var0 = new com.martiansoftware.jsap.ant.DefaultValue();
    java.lang.String var1 = var0.getValue();
    java.lang.String var2 = var0.getValue();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var6 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var10 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var11 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var12 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var20 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var12, "hi!", true, '4', "", var19);
    com.martiansoftware.jsap.stringparsers.ColorStringParser var21 = com.martiansoftware.jsap.stringparsers.ColorStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var58 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    java.lang.String var61 = var59.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var62 = new com.martiansoftware.jsap.SimpleJSAP(var61);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var66 = var64.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var68 = var64.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var70 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var73 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var74 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var58, var61, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    java.lang.String var77 = var75.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var78 = new com.martiansoftware.jsap.SimpleJSAP(var77);
    boolean var79 = var78.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var83 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var86 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var87 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var88 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var89 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var91 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var95 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var96 = var95.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var97 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var89, "hi!", true, '4', "", var96);
    com.martiansoftware.jsap.UnflaggedOption var98 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var21, "hi!", false, var79, "hi!");
    var0.addText("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + ""+ "'", var96.equals(""));

  }

  public void test112() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.Character var18 = var17.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = var17.setLongFlag("hi!");
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    com.martiansoftware.jsap.stringparsers.FileStringParser var47 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var47.tearDown();
    boolean var49 = var47.mustBeDirectory();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var50 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var51 = var50.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var52 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var53 = var52.getLongflag();
    var52.setShortflag('#');
    java.lang.String var56 = var52.getLongflag();
    char var57 = var52.getShortflag();
    var50.setShortflag(var57);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!", (com.martiansoftware.jsap.StringParser)var31, var45, var49, var57, "hi!");
    java.lang.String[] var62 = var61.getDefault();
    com.martiansoftware.jsap.stringparsers.FileStringParser var63 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var68 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var69 = var65.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var70 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var71 = var70.getID();
    java.lang.Object var72 = var63.parse(var71);
    com.martiansoftware.jsap.FlaggedOption var73 = var61.setUsageName(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + '4'+ "'", var18.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "hi!"+ "'", var68.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "hi!"+ "'", var71.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);

  }

  public void test113() throws Throwable {

    com.martiansoftware.jsap.TestOption var0 = new com.martiansoftware.jsap.TestOption();
    int var1 = var0.countTestCases();
    var0.testParsing();
    var0.testSettersAndGetters();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == 1);

  }

  public void test114() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getUsage();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAPResult var7 = var0.parse("hi!");
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var12 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var13 = var9.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var14 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.math.BigInteger[] var15 = var7.getBigIntegerArray("hi!");
    com.martiansoftware.jsap.Defaults var16 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var17 = var16.idIterator();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var27 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var30 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var40 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var48 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var40, "hi!", true, '4', "", var47);
    java.lang.Character var49 = var48.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var52 = var48.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var53 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var54 = new java.lang.String[] { "hi!"};
    var16.addDefault("hi!", var54);
    java.lang.String var56 = com.martiansoftware.util.StringUtils.noNull("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      boolean var57 = var7.getBoolean(var56);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!"+ "'", var12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + '4'+ "'", var49.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "hi!"+ "'", var56.equals("hi!"));

  }

  public void test115() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var13 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var21 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var13, "hi!", true, '4', "", var20);
    java.util.List var23 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var24 = var0.getHelp(1);
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var26 = var25.getHelp();
    java.lang.String var27 = var25.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var28 = new com.martiansoftware.jsap.SimpleJSAP(var27);
    boolean var29 = var28.messagePrinted();
    java.lang.String var30 = var28.getHelp();
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    java.lang.String var33 = var31.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var34 = new com.martiansoftware.jsap.SimpleJSAP(var33);
    boolean var35 = var34.messagePrinted();
    java.lang.String var36 = var34.getHelp();
    com.martiansoftware.jsap.ParseException var37 = new com.martiansoftware.jsap.ParseException(var36);
    java.lang.String[] var38 = new java.lang.String[] { var36};
    com.martiansoftware.jsap.JSAPResult var39 = var28.parse(var38);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var50 = var39.getClass("hi!");
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var60 = var59.getShortFlag();
    char var61 = var59.getShortFlag();
    com.martiansoftware.jsap.JSAP var62 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var63 = var62.getHelp();
    java.lang.String var64 = var62.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var65 = new com.martiansoftware.jsap.SimpleJSAP(var64);
    com.martiansoftware.jsap.Switch var66 = var59.setDefault(var64);
    com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource var67 = new com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource();
    int var68 = var67.countTestCases();
    int var69 = var39.getInt(var64, var68);
    junit.framework.Assert.assertEquals(1, var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var30.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var36.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);

  }

  public void test116() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.tearDown();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = var0.getProperty("hi!");
    var0.setUp();
    var0.tearDown();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);

  }

  public void test117() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    java.lang.Character var25 = var24.getShortFlagCharacter();
    char var26 = var24.getShortFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + '4'+ "'", var25.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == '4');

  }

  public void test118() throws Throwable {

    com.martiansoftware.jsap.TestJSAPConfiguration var0 = new com.martiansoftware.jsap.TestJSAPConfiguration();
    var0.testConfigurationGymnastics();
    var0.testConfigurationGymnastics();
    var0.testConfigurationGymnastics();
    var0.testConfigurationGymnastics();

  }

  public void test119() throws Throwable {

    com.martiansoftware.jsap.UnknownFlagException var1 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var2 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var1);
    java.lang.String var3 = var1.toString();
    com.martiansoftware.jsap.TestSwitch var4 = new com.martiansoftware.jsap.TestSwitch(var3);
    var4.testLongFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var3.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));

  }

  public void test120() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var26 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var27 = var26.getID();
    java.lang.Character var28 = var26.getShortFlagCharacter();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var29 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var30 = var29.getParameter();
    boolean var31 = var29.declaredListSeparator();
    boolean var32 = var29.getIslist();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var38 = var34.setHelp("hi!");
    var34.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var41 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    boolean var46 = var45.messagePrinted();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var58 = var47.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    com.martiansoftware.jsap.UnflaggedOption var60 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var41, var46, var58);
    com.martiansoftware.jsap.ant.SwitchConfiguration var61 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var62 = var61.getLongflag();
    var61.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var74 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var80 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var81 = var80.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var74, "hi!", true, '4', "", var81);
    com.martiansoftware.jsap.Switch var83 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var29.setListseparator('#');
    com.martiansoftware.jsap.FlaggedOption var85 = var26.setShortFlag('#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi!"+ "'", var27.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);

  }

  public void test121() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test9();
    var0.test7();
    var0.test10();
    var0.test8();

  }

  public void test122() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    com.martiansoftware.jsap.Parameter var2 = var0.getParameter();
    boolean var3 = var0.hasProperties();
    boolean var4 = var0.getRequired();
    boolean var5 = var0.declaredListSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);

  }

  public void test123() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testOneLevelDefaults();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testSimpleDefault();
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }

  }

  public void test124() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var38 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var46 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var38, "hi!", true, '4', "", var45);
    com.martiansoftware.jsap.UnflaggedOption var47 = var28.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var51 = var49.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var52 = var28.setList(false);
    com.martiansoftware.jsap.stringparsers.FileStringParser var53 = var0.setMustBeFile(false);
    var0.tearDown();
    var0.setUp();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);

  }

  public void test125() throws Throwable {

    com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource var0 = new com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource();
    java.lang.String var1 = var0.getName();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var6 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var7 = var3.setHelp("hi!");
    var3.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var10 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var28 = new com.martiansoftware.jsap.SimpleJSAP(var27);
    com.martiansoftware.jsap.UnflaggedOption var29 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var10, var15, var27);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    com.martiansoftware.jsap.UnflaggedOption var48 = var29.setRequired(true);
    java.lang.String var49 = var29.getID();
    var0.setName(var49);
    var0.testUnexpectedProperties();
    var0.testUnexpectedProperties();
    var0.testUnexpectedProperties();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "hi!"+ "'", var6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));

  }

  public void test126() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    java.lang.String var39 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.InetAddress[] var40 = var36.getInetAddressArray(var39);
    com.martiansoftware.jsap.stringparsers.DateStringParser var41 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var41.setUp();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var46 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var50 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var52 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var60 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var52, "hi!", true, '4', "", var59);
    java.lang.String var61 = var41.getProperty("");
    java.lang.String[] var63 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var71 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var72 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var73 = var41.getProperty("", "hi!");
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var74 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser("");
    java.math.BigDecimal[] var75 = var36.getBigDecimalArray("");
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var78 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var79 = var78.getLongflag();
    var78.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var82 = var77.setListSeparator('#');
    char var83 = var82.getShortFlag();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var75, (java.lang.Object)var83);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "hi!"+ "'", var39.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "hi!"+ "'", var73.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == '\u0000');

  }

  public void test127() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testRequired();
    var0.testConfig();
    var0.testConfig();
    var0.tearDown();

  }

  public void test128() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test3();
    var0.test7();
    var0.test2();
    var0.test3();

  }

  public void test129() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var40 = var34.setRequired(var39);
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var47 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var48 = var47.getParameter();
    boolean var49 = var47.declaredListSeparator();
    char var50 = var47.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var51 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var52 = var51.hasProperties();
    var47.setRequired(var52);
    junit.framework.Assert.assertFalse(var46, var52);
    com.martiansoftware.jsap.FlaggedOption var55 = var40.setList(var52);
    java.lang.String var56 = var55.getHelp();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));

  }

  public void test130() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.stringparsers.DateStringParser var3 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var3.tearDown();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var7 = var3.getProperty("hi!");
    java.lang.String[] var8 = new java.lang.String[] { "hi!"};
    com.martiansoftware.jsap.JSAPResult var9 = var0.parse(var8);
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var19 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var26 = var25.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var27 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var19, "hi!", true, '4', "", var26);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var28 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var30 = var29.getHelp();
    java.lang.String var31 = var29.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var36 = var34.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var38 = var34.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var44 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var28, var31, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    java.lang.String var47 = var45.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var48 = new com.martiansoftware.jsap.SimpleJSAP(var47);
    boolean var49 = var48.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var50 = var44.setRequired(var49);
    java.lang.Character var51 = var50.getShortFlagCharacter();
    java.lang.String var52 = var50.getLongFlag();
    com.martiansoftware.jsap.Flagged var53 = var0.getByLongFlag(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + '4'+ "'", var51.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "hi!"+ "'", var52.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == null);

  }

  public void test131() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    java.lang.String var37 = var0.toString();
    java.lang.String[] var38 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);

  }

  public void test132() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch(var21);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    com.martiansoftware.jsap.UnspecifiedParameterException var54 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var57 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var56);
    com.martiansoftware.jsap.ParseException var58 = new com.martiansoftware.jsap.ParseException("", (java.lang.Throwable)var57);
    com.martiansoftware.jsap.Switch var59 = var35.setDefault("");
    com.martiansoftware.jsap.RequiredParameterMissingException var60 = new com.martiansoftware.jsap.RequiredParameterMissingException("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP("");
      fail("Expected exception of type com.thoughtworks.xstream.io.StreamException");
    } catch (com.thoughtworks.xstream.io.StreamException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);

  }

  public void test133() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    java.lang.String[] var35 = var34.getDefault();
    java.lang.String var36 = var34.getHelp();
    com.martiansoftware.jsap.stringparsers.FileStringParser var37 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var42 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var43 = var39.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var44 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var45 = var44.getID();
    java.lang.Object var46 = var37.parse(var45);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var51 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var52 = var48.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var53 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var54 = var48.setStringParser((com.martiansoftware.jsap.StringParser)var53);
    com.martiansoftware.jsap.ant.SwitchConfiguration var55 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var56 = var55.getLongflag();
    var55.setShortflag('#');
    java.lang.String var59 = var55.getLongflag();
    var55.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var62 = var48.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var72 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var78 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var79 = var78.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var80 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var72, "hi!", true, '4', "", var79);
    java.lang.String[] var81 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.FlaggedOption var82 = var62.setDefault(var81);
    com.martiansoftware.jsap.ant.SwitchConfiguration var83 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    boolean var84 = var83.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var85 = var82.setList(var84);
    java.lang.String var86 = var85.getSyntax();
    java.lang.Object var87 = var37.parse(var86);
    com.martiansoftware.jsap.FlaggedOption var88 = var34.setUsageName(var86);
    com.martiansoftware.jsap.stringparsers.FileStringParser var89 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var89.tearDown();
    boolean var91 = var89.mustBeDirectory();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var92 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var93 = var92.getRequired();
    boolean var94 = var92.getGreedy();
    boolean var95 = var92.declaredListSeparator();
    com.martiansoftware.jsap.stringparsers.FileStringParser var96 = var89.setMustExist(var95);
    com.martiansoftware.jsap.FlaggedOption var97 = var34.setAllowMultipleDeclarations(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "hi!"+ "'", var42.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "hi!"+ "'", var45.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "hi!"+ "'", var51.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + "[<hi!>]"+ "'", var86.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var97 == null);

  }

  public void test134() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    var0.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var0.setShortflag('4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var19 = var18.getShortFlag();
    var0.setShortflag(var19);
    java.lang.String var21 = var0.getLongflag();
    char var22 = var0.getShortflag();
    char var23 = var0.getShortflag();
    java.lang.String[] var24 = var0.getDefaults();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var34 = var33.getShortFlag();
    char var35 = var33.getShortFlag();
    java.lang.Character var36 = var33.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var49 = var33.setDefault("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var50 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var51 = var50.getParameter();
    boolean var52 = var50.declaredListSeparator();
    char var53 = var50.getShortflag();
    char var54 = var50.getShortflag();
    com.martiansoftware.jsap.Switch var55 = var33.setShortFlag(var54);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var65 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var65, "hi!", true, '4', "", var72);
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String[] var75 = var74.getDefault();
    char var76 = var74.getShortFlag();
    junit.framework.Assert.assertEquals(var54, var76);
    var0.setShortflag(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + '4'+ "'", var36.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == '\u0000');

  }

  public void test135() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var2 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    var2.testShortFlag();
    var2.testShortFlag();
    var2.testLongFlag();

  }

  public void test136() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    boolean var3 = var0.mustExist();
    var0.tearDown();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var8 = new com.martiansoftware.jsap.SimpleJSAP(var7);
    boolean var9 = var8.messagePrinted();
    java.lang.String var10 = var8.getHelp();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    java.lang.String var16 = var14.getHelp();
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException(var16);
    java.lang.String[] var18 = new java.lang.String[] { var16};
    com.martiansoftware.jsap.JSAPResult var19 = var8.parse(var18);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var29 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var37 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var29, "hi!", true, '4', "", var36);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var38 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var39 = new java.lang.Object[] { var38};
    java.lang.Object[] var40 = var19.getObjectArray(var36, var39);
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var41 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException(var36);
    java.lang.String var42 = var0.getProperty(var36);
    var0.tearDown();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var10.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var16.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == null);

  }

  public void test137() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.TestOption var33 = new com.martiansoftware.jsap.TestOption();
    int var34 = var33.countTestCases();
    java.lang.String var35 = var33.toString();
    java.lang.Exception var36 = var14.getException(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var48 = var37.getHelp((-1), "hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    java.lang.String var51 = var49.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    boolean var53 = var52.messagePrinted();
    boolean var54 = var52.messagePrinted();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var61 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var67 = var56.getHelp((-1), "hi!");
    java.lang.String var68 = var52.getHelp(100, "hi!");
    java.lang.String var69 = var37.getHelp(100);
    short var71 = var14.getShort(var69, (short)1);
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var75 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var79 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var80 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var81 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var81.testSwitchParse();
    var81.testLongFlag();
    var81.testID();
    java.lang.String var85 = var81.getName();
    var81.testID();
    java.lang.String[] var88 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    var81.setName("");
    double[] var90 = var14.getDoubleArray("");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "null(com.martiansoftware.jsap.TestOption)"+ "'", var35.equals("null(com.martiansoftware.jsap.TestOption)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var68.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == (short)1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi!"+ "'", var85.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);

  }

  public void test138() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var47 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var48 = var46.setStringParser((com.martiansoftware.jsap.StringParser)var47);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var58 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var66 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var58, "hi!", true, '4', "", var65);
    java.lang.String var67 = var66.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var67);
    com.martiansoftware.jsap.UnflaggedOption var69 = var46.setUsageName(var67);
    boolean var70 = var46.isGreedy();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var67.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);

  }

  public void test139() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var33 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var34 = var30.setHelp("hi!");
    var30.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var37 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    java.lang.String var40 = var38.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var41 = new com.martiansoftware.jsap.SimpleJSAP(var40);
    boolean var42 = var41.messagePrinted();
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var54 = var43.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var55 = new com.martiansoftware.jsap.SimpleJSAP(var54);
    com.martiansoftware.jsap.UnflaggedOption var56 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var37, var42, var54);
    com.martiansoftware.jsap.ant.SwitchConfiguration var57 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var58 = var57.getLongflag();
    var57.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var70 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var78 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, "hi!", true, '4', "", var77);
    com.martiansoftware.jsap.Switch var79 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var80 = var27.setUsageName("hi!");
    com.martiansoftware.jsap.JSAP var81 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var86 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var90 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var91 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var92 = var81.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var93 = new com.martiansoftware.jsap.SimpleJSAP(var92);
    com.martiansoftware.jsap.JSAPException var94 = new com.martiansoftware.jsap.JSAPException(var92);
    com.martiansoftware.jsap.UnflaggedOption var95 = var27.setUsageName(var92);
    com.martiansoftware.jsap.UnknownFlagException var96 = new com.martiansoftware.jsap.UnknownFlagException(var92);
    com.martiansoftware.jsap.TestFlaggedOption var97 = new com.martiansoftware.jsap.TestFlaggedOption(var92);
    var97.testLongFlag();
    var97.testShortFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "hi!"+ "'", var33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + ""+ "'", var92.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);

  }

  public void test140() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    java.lang.String var39 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.InetAddress[] var40 = var36.getInetAddressArray(var39);
    com.martiansoftware.jsap.stringparsers.DateStringParser var41 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var41.setUp();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var46 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var50 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var52 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var60 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var52, "hi!", true, '4', "", var59);
    java.lang.String var61 = var41.getProperty("");
    java.lang.String[] var63 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var71 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var72 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var73 = var41.getProperty("", "hi!");
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var74 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser("");
    java.math.BigInteger var75 = var36.getBigInteger("");
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var79 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var83 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var84 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var85 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var91 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var92 = var91.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var93 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var85, "hi!", true, '4', "", var92);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      long var94 = var36.getLong("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "hi!"+ "'", var39.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "hi!"+ "'", var73.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + ""+ "'", var92.equals(""));

  }

  public void test141() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.Character var18 = var17.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = var17.setLongFlag("hi!");
    boolean var22 = var17.isList();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var23 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var24 = var23.hasProperties();
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var26 = var25.getHelp();
    java.lang.String var27 = var25.getUsage();
    com.martiansoftware.jsap.IDMap var28 = var25.getIDMap();
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var30 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var31 = var30.idIterator();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var43 = var32.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var53 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var61 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var53, "hi!", true, '4', "", var60);
    java.lang.String[] var62 = new java.lang.String[] { var60};
    var30.addDefault(var43, var62);
    java.lang.String[] var64 = new java.lang.String[] { var43};
    com.martiansoftware.jsap.JSAPResult var65 = var29.parse(var64);
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var69 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var73 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var74 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var75 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var78 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var79 = var65.contains("hi!");
    java.math.BigInteger[] var81 = var65.getBigIntegerArray("");
    boolean var82 = var28.idExists("");
    var23.setId("");
    var17.addDefault("");
    char var85 = var17.getListSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + '4'+ "'", var18.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == ':');

  }

  public void test142() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    com.martiansoftware.jsap.TestOption var7 = new com.martiansoftware.jsap.TestOption();
    int var8 = var7.countTestCases();
    int var9 = var7.countTestCases();
    int var10 = var7.countTestCases();
    java.lang.String var11 = var3.getHelp(var10);
    com.martiansoftware.jsap.TestUsageString var12 = new com.martiansoftware.jsap.TestUsageString(var11);
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException();
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException((java.lang.Throwable)var13);
    com.martiansoftware.jsap.JSAPException var15 = new com.martiansoftware.jsap.JSAPException(var11, (java.lang.Throwable)var13);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.JSAPException var26 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var25);
    com.martiansoftware.jsap.ParseException var27 = new com.martiansoftware.jsap.ParseException(var11, (java.lang.Throwable)var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var11.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));

  }

  public void test143() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    java.lang.String var35 = var33.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var36 = new com.martiansoftware.jsap.SimpleJSAP(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var36.unregisterParameter((com.martiansoftware.jsap.Parameter)var38);
    com.martiansoftware.jsap.TestOption var40 = new com.martiansoftware.jsap.TestOption();
    int var41 = var40.countTestCases();
    int var42 = var40.countTestCases();
    int var43 = var40.countTestCases();
    java.lang.String var44 = var36.getHelp(var43);
    char[] var45 = var14.getCharArray(var44);
    com.martiansoftware.jsap.UnspecifiedParameterException var46 = new com.martiansoftware.jsap.UnspecifiedParameterException(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var44.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);

  }

  public void test144() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DoubleStringParser var0 = com.martiansoftware.jsap.stringparsers.DoubleStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var7 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var8 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var9 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);

  }

  public void test145() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    boolean var29 = var28.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var34 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var35 = var31.setHelp("hi!");
    var31.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var38 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var39 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var40 = var39.getHelp();
    java.lang.String var41 = var39.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var42 = new com.martiansoftware.jsap.SimpleJSAP(var41);
    boolean var43 = var42.messagePrinted();
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var55 = var44.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var56 = new com.martiansoftware.jsap.SimpleJSAP(var55);
    com.martiansoftware.jsap.UnflaggedOption var57 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var38, var43, var55);
    com.martiansoftware.jsap.ant.SwitchConfiguration var58 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var59 = var58.getLongflag();
    var58.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var65 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var69 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var70 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var71 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var77 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var78 = var77.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var79 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var71, "hi!", true, '4', "", var78);
    com.martiansoftware.jsap.Switch var80 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var81 = var28.setUsageName("hi!");
    com.martiansoftware.jsap.JSAP var82 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var87 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var90 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var91 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var92 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var93 = var82.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var94 = new com.martiansoftware.jsap.SimpleJSAP(var93);
    com.martiansoftware.jsap.JSAPException var95 = new com.martiansoftware.jsap.JSAPException(var93);
    com.martiansoftware.jsap.UnflaggedOption var96 = var28.setUsageName(var93);
    com.martiansoftware.jsap.UnknownFlagException var97 = new com.martiansoftware.jsap.UnknownFlagException(var93);
    java.lang.String[] var98 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize(var93);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var99 = var0.parse(var93);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "hi!"+ "'", var34.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ""+ "'", var93.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var98 == null);

  }

  public void test146() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var9.testSwitchParse();
    var9.testLongFlag();
    var9.testID();
    var9.testID();
    var9.testLongFlag();

  }

  public void test147() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.tearDown();
    var0.tearDown();

  }

  public void test148() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var30 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var43 = var0.getProperty("hi!", "hi!");
    com.martiansoftware.jsap.UnflaggedOption var44 = new com.martiansoftware.jsap.UnflaggedOption(var43);
    com.martiansoftware.jsap.stringparsers.FileStringParser var45 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var45.tearDown();
    boolean var47 = var45.mustBeDirectory();
    com.martiansoftware.jsap.UnflaggedOption var48 = var44.setGreedy(var47);
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    java.lang.String var51 = var49.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    boolean var53 = var52.messagePrinted();
    java.lang.String var54 = var52.getHelp();
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    java.lang.String var57 = var55.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var58 = new com.martiansoftware.jsap.SimpleJSAP(var57);
    boolean var59 = var58.messagePrinted();
    java.lang.String var60 = var58.getHelp();
    com.martiansoftware.jsap.ParseException var61 = new com.martiansoftware.jsap.ParseException(var60);
    java.lang.String[] var62 = new java.lang.String[] { var60};
    com.martiansoftware.jsap.JSAPResult var63 = var52.parse(var62);
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    java.lang.String var66 = var64.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var67 = new com.martiansoftware.jsap.SimpleJSAP(var66);
    float[] var68 = var63.getFloatArray(var66);
    com.martiansoftware.jsap.JSAPException var69 = new com.martiansoftware.jsap.JSAPException(var66);
    com.martiansoftware.jsap.UnflaggedOption var70 = var44.setUsageName(var66);
    com.martiansoftware.jsap.TestUsageString var71 = new com.martiansoftware.jsap.TestUsageString(var66);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var72 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var66);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var54.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var60.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);

  }

  public void test149() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var57 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var65 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var57, "hi!", true, '4', "", var64);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var66 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    java.lang.String var69 = var67.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var70 = new com.martiansoftware.jsap.SimpleJSAP(var69);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var74 = var72.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var76 = var72.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var78 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var81 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var66, var69, false, '4', "hi!");
    java.lang.String var85 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var86 = com.martiansoftware.util.StringUtils.wrapToList(var69, 1);
    java.util.List var88 = com.martiansoftware.util.StringUtils.wrapToList(var69, 1);
    char[] var89 = var14.getCharArray(var69);
    com.martiansoftware.jsap.TestUsageString var90 = new com.martiansoftware.jsap.TestUsageString(var69);
    var90.testUsage2();
    var90.testUsage2();
    var90.testUsage1();
    var90.testUsage1();
    var90.testUsage1();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi!"+ "'", var85.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);

  }

  public void test150() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var51 = var27.setList(false);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var61 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var69 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var61, "hi!", true, '4', "", var68);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var70 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    java.lang.String var73 = var71.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var74 = new com.martiansoftware.jsap.SimpleJSAP(var73);
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var78 = var76.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var80 = var76.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var85 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var86 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, var73, false, '4', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var87 = var51.setListSeparator('4');
    com.martiansoftware.jsap.UnknownFlagException var88 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.UnknownFlagException var89 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    java.lang.String var90 = var89.toString();
    com.martiansoftware.jsap.JSAPException var91 = new com.martiansoftware.jsap.JSAPException(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var90.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));

  }

  public void test151() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    java.lang.Character var19 = var18.getShortFlagCharacter();
    com.martiansoftware.jsap.Flagged var20 = var0.getByShortFlag(var19);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var23 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var24 = var23.getLongflag();
    var23.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var27 = var22.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    java.lang.Character var46 = var45.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var47 = var22.setShortFlag((char)var46);
    com.martiansoftware.jsap.Flagged var48 = var0.getByShortFlag(var46);
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + '4'+ "'", var19.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + '4'+ "'", var46.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == null);

  }

  public void test152() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    boolean var5 = var3.messagePrinted();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var18 = var7.getHelp((-1), "hi!");
    java.lang.String var19 = var3.getHelp(100, "hi!");
    com.martiansoftware.jsap.IDMap var20 = var3.getIDMap();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var24.unregisterParameter((com.martiansoftware.jsap.Parameter)var26);
    java.lang.String var28 = var26.getSyntax();
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var30 = var29.getHelp();
    java.lang.String var31 = var29.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    boolean var33 = var32.messagePrinted();
    java.lang.String var34 = var32.getHelp();
    com.martiansoftware.jsap.ParseException var35 = new com.martiansoftware.jsap.ParseException(var34);
    com.martiansoftware.jsap.FlaggedOption var36 = var26.setUsageName(var34);
    java.lang.String var37 = com.martiansoftware.util.StringUtils.noNull(var34);
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var39 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var40 = var39.idIterator();
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var46 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var50 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var52 = var41.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var62 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var68 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var69 = var68.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var70 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var62, "hi!", true, '4', "", var69);
    java.lang.String[] var71 = new java.lang.String[] { var69};
    var39.addDefault(var52, var71);
    java.lang.String[] var73 = new java.lang.String[] { var52};
    com.martiansoftware.jsap.JSAPResult var74 = var38.parse(var73);
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    java.lang.String var77 = var75.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var78 = new com.martiansoftware.jsap.SimpleJSAP(var77);
    boolean var79 = var78.messagePrinted();
    java.lang.String var80 = var78.getHelp();
    com.martiansoftware.jsap.JSAPResult var81 = var38.parse(var80);
    junit.framework.Assert.assertNotNull(var34, (java.lang.Object)var80);
    com.martiansoftware.jsap.Parameter var83 = var3.getByID(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var19.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "[<hi!>]"+ "'", var28.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var37.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var80.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == null);

  }

  public void test153() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var40 = var34.setRequired(var39);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var41 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var42 = var41.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var43 = var34.setAllowMultipleDeclarations(var42);
    boolean var44 = var43.required();
    boolean var45 = var43.required();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);

  }

  public void test154() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var33 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var34 = var30.setHelp("hi!");
    var30.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var37 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    java.lang.String var40 = var38.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var41 = new com.martiansoftware.jsap.SimpleJSAP(var40);
    boolean var42 = var41.messagePrinted();
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var54 = var43.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var55 = new com.martiansoftware.jsap.SimpleJSAP(var54);
    com.martiansoftware.jsap.UnflaggedOption var56 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var37, var42, var54);
    com.martiansoftware.jsap.ant.SwitchConfiguration var57 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var58 = var57.getLongflag();
    var57.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var70 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var78 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, "hi!", true, '4', "", var77);
    com.martiansoftware.jsap.Switch var79 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var80 = var27.setUsageName("hi!");
    com.martiansoftware.jsap.JSAP var81 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var86 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var90 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var91 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var92 = var81.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var93 = new com.martiansoftware.jsap.SimpleJSAP(var92);
    com.martiansoftware.jsap.JSAPException var94 = new com.martiansoftware.jsap.JSAPException(var92);
    com.martiansoftware.jsap.UnflaggedOption var95 = var27.setUsageName(var92);
    com.martiansoftware.jsap.UnknownFlagException var96 = new com.martiansoftware.jsap.UnknownFlagException(var92);
    com.martiansoftware.jsap.JSAPException var97 = new com.martiansoftware.jsap.JSAPException(var92);
    java.lang.String var98 = var97.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "hi!"+ "'", var33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + ""+ "'", var92.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var98 + "' != '" + "com.martiansoftware.jsap.JSAPException: "+ "'", var98.equals("com.martiansoftware.jsap.JSAPException: "));

  }

  public void test155() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String[] var19 = var18.getDefault();
    com.martiansoftware.jsap.StringParser var20 = var18.getStringParser();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    boolean var25 = var24.messagePrinted();
    java.lang.String var26 = var24.getHelp();
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var28 = var27.getHelp();
    java.lang.String var29 = var27.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var30 = new com.martiansoftware.jsap.SimpleJSAP(var29);
    boolean var31 = var30.messagePrinted();
    java.lang.String var32 = var30.getHelp();
    com.martiansoftware.jsap.ParseException var33 = new com.martiansoftware.jsap.ParseException(var32);
    java.lang.String[] var34 = new java.lang.String[] { var32};
    com.martiansoftware.jsap.JSAPResult var35 = var24.parse(var34);
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    float[] var40 = var35.getFloatArray(var38);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var50 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var53 = var35.getCharArray("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    java.lang.String var56 = var54.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var57 = new com.martiansoftware.jsap.SimpleJSAP(var56);
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var57.unregisterParameter((com.martiansoftware.jsap.Parameter)var59);
    com.martiansoftware.jsap.TestOption var61 = new com.martiansoftware.jsap.TestOption();
    int var62 = var61.countTestCases();
    int var63 = var61.countTestCases();
    int var64 = var61.countTestCases();
    java.lang.String var65 = var57.getHelp(var64);
    char[] var66 = var35.getCharArray(var65);
    com.martiansoftware.jsap.Parameter var67 = var18.setHelp(var65);
    char var68 = var18.getShortFlag();
    junit.framework.Assert.assertNotNull((java.lang.Object)var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var26.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var32.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var65.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == '\u0000');

  }

  public void test156() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.tearDown();
    java.lang.String var2 = var0.getName();
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      var0.testOneLevelDefaults();
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test157() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var29 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var30 = var29.getParameter();
    boolean var31 = var29.declaredListSeparator();
    char var32 = var29.getShortflag();
    boolean var33 = var29.getIslist();
    com.martiansoftware.jsap.UnflaggedOption var34 = var27.setRequired(var33);
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var44 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var52 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var44, "hi!", true, '4', "", var51);
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.UnflaggedOption var54 = var34.setUsageName("hi!");
    java.lang.String var55 = var34.getUsageName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!"+ "'", var55.equals("hi!"));

  }

  public void test158() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var38 = var34.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var39 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var40 = var39.getID();
    boolean[] var41 = var14.getBooleanArray(var40);
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var46 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var47 = var43.setHelp("hi!");
    java.lang.String[] var48 = var14.getStringArray("hi!");
    java.util.Iterator var49 = var14.getErrorMessageIterator();
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    java.util.Iterator var52 = var50.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var53 = var50.getIDMap();
    java.lang.String var54 = var50.getUsage();
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException(var54);
    java.net.InetAddress[] var56 = var14.getInetAddressArray(var54);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var61 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var62 = var58.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var63 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String[] var64 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("hi!");
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var74 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var80 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var81 = var80.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var74, "hi!", true, '4', "", var81);
    java.lang.Character var83 = var82.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var86 = var82.setLongFlag("hi!");
    boolean var87 = var82.isList();
    boolean var88 = var14.getBoolean("hi!", var87);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)var88);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!"+ "'", var40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "hi!"+ "'", var46.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "hi!"+ "'", var61.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + '4'+ "'", var83.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == false);

  }

  public void test159() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test2();
    var0.test1();
    var0.test5();

  }

  public void test160() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var6 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var7 = var1.setStringParser((com.martiansoftware.jsap.StringParser)var6);
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var17 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var20 = var7.setHelp("hi!");
    java.lang.String var21 = var20.getUsageName();
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var22 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var32 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var40 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var32, "hi!", true, '4', "", var39);
    java.lang.Character var41 = var40.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var44 = var40.setLongFlag("hi!");
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var54 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, "hi!", true, '4', "", var61);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var63 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    java.lang.String var66 = var64.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var67 = new com.martiansoftware.jsap.SimpleJSAP(var66);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var71 = var69.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var73 = var69.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var75 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var78 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var79 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var63, var66, false, '4', "hi!");
    com.martiansoftware.jsap.FlaggedOption var80 = var40.setLongFlag("hi!");
    java.lang.String var81 = var40.getSyntax();
    var22.setName(var81);
    com.martiansoftware.jsap.SimpleJSAP var83 = new com.martiansoftware.jsap.SimpleJSAP(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "hi!"+ "'", var21.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + '4'+ "'", var41.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "(-4|--hi!)[:<hi!>]"+ "'", var81.equals("(-4|--hi!)[:<hi!>]"));

  }

  public void test161() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var2 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var3 = var2.getLongflag();
    var2.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var6 = var1.setListSeparator('#');
    java.lang.Character var7 = var6.getShortFlagCharacter();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.stringparsers.FileStringParser var9 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var9.setUp();
    boolean var11 = var9.mustBeDirectory();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var12 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var13 = var12.getRequired();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var18 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var19 = var15.setHelp("hi!");
    var15.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var22 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var24 = var23.getHelp();
    java.lang.String var25 = var23.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    boolean var27 = var26.messagePrinted();
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var39 = var28.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    com.martiansoftware.jsap.UnflaggedOption var41 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var22, var27, var39);
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var59 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var51, "hi!", true, '4', "", var58);
    com.martiansoftware.jsap.UnflaggedOption var60 = var41.setRequired(true);
    java.lang.String var61 = var41.getID();
    com.martiansoftware.jsap.UnflaggedOption var62 = new com.martiansoftware.jsap.UnflaggedOption(var8, (com.martiansoftware.jsap.StringParser)var9, var13, var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "[<hi!>]"+ "'", var8.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "hi!"+ "'", var18.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));

  }

  public void test162() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntegerStringParser var0 = new com.martiansoftware.jsap.stringparsers.IntegerStringParser();
    com.martiansoftware.jsap.stringparsers.FileStringParser var1 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    var1.setUp();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var6 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var10 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var11 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.JSAP var12 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var13 = var12.getHelp();
    java.lang.String var14 = var12.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var15 = new com.martiansoftware.jsap.SimpleJSAP(var14);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var16 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var28 = var17.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var32 = var30.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var42 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var49 = var48.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var50 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var42, "hi!", true, '4', "", var49);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption(var14, (com.martiansoftware.jsap.StringParser)var16, var28, false, '4', "hi!");
    com.martiansoftware.jsap.Switch var70 = new com.martiansoftware.jsap.Switch(var14);
    var1.setProperty("hi!", var14);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var72 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));

  }

  public void test163() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    com.martiansoftware.jsap.Switch var15 = var8.setDefault(var13);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var25 = var24.getShortFlag();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    java.lang.String[] var38 = new java.lang.String[] { var37};
    com.martiansoftware.jsap.Switch var39 = var24.setDefault(var38);
    char var40 = var39.getShortFlag();
    com.martiansoftware.jsap.ant.SwitchConfiguration var41 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var42 = var41.getLongflag();
    var41.setShortflag('#');
    java.lang.String var45 = var41.getLongflag();
    var41.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var41.setShortflag('4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var60 = var59.getShortFlag();
    var41.setShortflag(var60);
    junit.framework.Assert.assertEquals(var40, var60);
    com.martiansoftware.jsap.Switch var63 = var15.setShortFlag(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);

  }

  public void test164() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ShortStringParser var0 = new com.martiansoftware.jsap.stringparsers.ShortStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var19 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var27 = var25.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var29 = var25.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var19, var22, false, '4', "hi!");
    java.lang.String var36 = var35.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var37 = var0.parse(var36);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var36.equals("[(-4|--hi!)[:<hi!>]]"));

  }

  public void test165() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.IntSizeStringParser.getParser();
    var0.tearDown();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var20 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var28 = var26.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var30 = var26.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var36 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var20, var23, false, '4', "hi!");
    java.lang.String var39 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var40 = com.martiansoftware.util.StringUtils.wrapToList(var23, 1);
    java.util.List var42 = com.martiansoftware.util.StringUtils.wrapToList(var23, 1);
    com.martiansoftware.jsap.TestSwitch var43 = new com.martiansoftware.jsap.TestSwitch(var23);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var44 = var0.parse(var23);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "hi!"+ "'", var39.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);

  }

  public void test166() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test5();
    var0.test7();
    var0.test10();
    var0.test1();

  }

  public void test167() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String[] var19 = var18.getDefault();
    com.martiansoftware.jsap.stringparsers.LongStringParser var20 = com.martiansoftware.jsap.stringparsers.LongStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var21 = var18.setStringParser((com.martiansoftware.jsap.StringParser)var20);
    java.lang.String var22 = var18.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame(var22);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "[<>]"+ "'", var22.equals("[<>]"));

  }

  public void test168() throws Throwable {

    com.martiansoftware.jsap.ant.ParserProperty var0 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    java.util.List var20 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    var0.setName("");
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var26 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var27 = var23.setHelp("hi!");
    var23.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var30 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    java.lang.String var33 = var31.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var34 = new com.martiansoftware.jsap.SimpleJSAP(var33);
    boolean var35 = var34.messagePrinted();
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var47 = var36.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var48 = new com.martiansoftware.jsap.SimpleJSAP(var47);
    com.martiansoftware.jsap.UnflaggedOption var49 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var30, var35, var47);
    com.martiansoftware.jsap.ant.SwitchConfiguration var50 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var51 = var50.getLongflag();
    var50.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var62 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var63 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var71 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var63, "hi!", true, '4', "", var70);
    com.martiansoftware.jsap.Switch var72 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var73 = new com.martiansoftware.jsap.UnflaggedOption("hi!");
    var0.setName("hi!");
    com.martiansoftware.jsap.RequiredParameterMissingException var75 = new com.martiansoftware.jsap.RequiredParameterMissingException("hi!");
    java.lang.String var76 = var75.getID();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "hi!"+ "'", var26.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "hi!"+ "'", var76.equals("hi!"));

  }

  public void test169() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var12 = new com.martiansoftware.jsap.TestOption();
    int var13 = var12.countTestCases();
    int var14 = var12.countTestCases();
    java.lang.String var15 = com.martiansoftware.util.StringUtils.padRight("hi!", var14);
    com.martiansoftware.jsap.SimpleJSAP var16 = new com.martiansoftware.jsap.SimpleJSAP(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi! "+ "'", var15.equals("hi! "));

  }

  public void test170() throws Throwable {

    com.martiansoftware.jsap.xml.JSAPConfig var0 = new com.martiansoftware.jsap.xml.JSAPConfig();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    java.util.Iterator var3 = var0.parameters();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);

  }

  public void test171() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var3 = new com.martiansoftware.jsap.ant.ParserProperty();
    var0.addConfiguredProperty(var3);
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var17 = new com.martiansoftware.jsap.SimpleJSAP(var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var36 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var44 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var36, "hi!", true, '4', "", var43);
    java.lang.String var45 = var44.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var45);
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption(var45);
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch(var16, '4', var45);
    var0.setStringparser(var16);
    com.martiansoftware.jsap.Defaults var50 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var51 = var50.idIterator();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var61 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var64 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var74 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var80 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var81 = var80.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var74, "hi!", true, '4', "", var81);
    java.lang.Character var83 = var82.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var86 = var82.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var87 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var88 = new java.lang.String[] { "hi!"};
    var50.addDefault("hi!", var88);
    var0.setId("hi!");
    boolean var91 = var0.getGreedy();
    java.lang.String var94 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    var0.setDefault(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var45.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + '4'+ "'", var83.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "hi!"+ "'", var94.equals("hi!"));

  }

  public void test172() throws Throwable {

    com.martiansoftware.jsap.xml.JSAPConfig var0 = new com.martiansoftware.jsap.xml.JSAPConfig();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    java.lang.String var3 = var0.getHelp();
    java.lang.String var4 = var0.getHelp();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var14 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var22 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var14, "hi!", true, '4', "", var21);
    java.lang.String var23 = var22.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var23);
    com.martiansoftware.jsap.TestOption var25 = new com.martiansoftware.jsap.TestOption();
    int var26 = var25.countTestCases();
    int var27 = var25.countTestCases();
    int var28 = var25.countTestCases();
    java.lang.String var29 = com.martiansoftware.util.StringUtils.padRightToWidth(var23, var28);
    var0.setUsage(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var23.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var29.equals("(-4|--)[:<hi!>]"));

  }

  public void test173() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    java.lang.String var28 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var29 = var14.getURLArray(var28);
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.util.Iterator var32 = var30.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var33 = var30.getIDMap();
    java.lang.String var34 = var30.getHelp();
    java.lang.String var35 = var30.toString();
    java.lang.Object[] var36 = var14.getObjectArray(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var46 = var45.getShortFlag();
    char var47 = var45.getShortFlag();
    java.lang.Character var48 = var45.getShortFlagCharacter();
    java.lang.String var49 = var45.getSyntax();
    long var51 = var14.getLong(var49, (-1L));
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var51, 10L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + '4'+ "'", var48.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "[-4|--hi!]"+ "'", var49.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == (-1L));

  }

  public void test174() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var26 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    com.martiansoftware.jsap.stringparsers.FileStringParser var27 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var27.tearDown();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var38 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var46 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var38, "hi!", true, '4', "", var45);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var47 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var49 = var48.getHelp();
    java.lang.String var50 = var48.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var51 = new com.martiansoftware.jsap.SimpleJSAP(var50);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var55 = var53.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var57 = var53.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var62 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var63 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var47, var50, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    java.lang.String var66 = var64.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var67 = new com.martiansoftware.jsap.SimpleJSAP(var66);
    boolean var68 = var67.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var69 = var63.setRequired(var68);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var70 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var71 = var70.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var72 = var63.setAllowMultipleDeclarations(var71);
    com.martiansoftware.jsap.stringparsers.FileStringParser var73 = var27.setMustExist(var71);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var74 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser("hi!", var71);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);

  }

  public void test175() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.TestFlaggedOption var18 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    var18.testShortFlag();
    java.lang.String var20 = var18.getName();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var25 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var26 = var22.setHelp("hi!");
    var22.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var29 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.lang.String var32 = var30.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var33 = new com.martiansoftware.jsap.SimpleJSAP(var32);
    boolean var34 = var33.messagePrinted();
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var46 = var35.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var47 = new com.martiansoftware.jsap.SimpleJSAP(var46);
    com.martiansoftware.jsap.UnflaggedOption var48 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var29, var34, var46);
    com.martiansoftware.jsap.ant.SwitchConfiguration var49 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var50 = var49.getLongflag();
    var49.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var62 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var68 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var69 = var68.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var70 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var62, "hi!", true, '4', "", var69);
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var72 = new com.martiansoftware.jsap.UnflaggedOption("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var73 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var74 = var73.getParameter();
    java.lang.String var75 = var73.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var80 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var81 = var77.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var82 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var83 = var82.getID();
    java.lang.String var84 = var82.getID();
    var73.setLongflag(var84);
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var88 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var89 = var88.getLongflag();
    var88.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var92 = var87.setListSeparator('#');
    boolean var93 = var92.isList();
    var73.setAllowmultipledeclarations(var93);
    com.martiansoftware.jsap.UnflaggedOption var95 = var72.setList(var93);
    junit.framework.Assert.assertNotNull(var20, (java.lang.Object)var72);
    boolean var97 = var72.isGreedy();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "hi!"+ "'", var20.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "hi!"+ "'", var25.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "hi!"+ "'", var80.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + "hi!"+ "'", var83.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + "hi!"+ "'", var84.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);

  }

  public void test176() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var32 = var30.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var33 = var27.setList(false);
    java.lang.String var34 = var33.getUsageName();
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    java.lang.String var40 = var38.getHelp();
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.ParseException var47 = new com.martiansoftware.jsap.ParseException(var46);
    java.lang.String[] var48 = new java.lang.String[] { var46};
    com.martiansoftware.jsap.JSAPResult var49 = var38.parse(var48);
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    java.lang.String var52 = var50.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var52);
    float[] var54 = var49.getFloatArray(var52);
    boolean var55 = var49.success();
    com.martiansoftware.jsap.UnflaggedOption var56 = var33.setList(var55);
    com.martiansoftware.jsap.stringparsers.LongStringParser var57 = com.martiansoftware.jsap.stringparsers.LongStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var58 = var56.setStringParser((com.martiansoftware.jsap.StringParser)var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var40.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);

  }

  public void test177() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var6 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var5);
    java.lang.String var7 = var5.toString();
    var0.setLongflag(var7);
    boolean var9 = var0.hasProperties();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var7.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);

  }

  public void test178() throws Throwable {

    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    boolean var21 = var19.messagePrinted();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var34 = var23.getHelp((-1), "hi!");
    java.lang.String var35 = var19.getHelp(100, "hi!");
    java.util.Date[] var36 = var15.getDateArray(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    java.lang.String var45 = var43.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var46 = new com.martiansoftware.jsap.SimpleJSAP(var45);
    boolean var47 = var46.messagePrinted();
    java.lang.String var48 = var46.getHelp();
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException(var48);
    java.lang.String[] var50 = new java.lang.String[] { var48};
    com.martiansoftware.jsap.JSAPResult var51 = var40.parse(var50);
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    java.util.Iterator var54 = var52.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var55 = var52.getIDMap();
    java.lang.String var56 = var52.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var60 = var51.getByte(var56, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var61 = new com.martiansoftware.jsap.QualifiedSwitch(var56);
    java.net.InetAddress[] var62 = var15.getInetAddressArray(var56);
    junit.framework.Assert.assertEquals(var56, (byte)10, (byte)10);
    junit.framework.Assert.assertEquals((byte)10, (byte)10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var35.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var48.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);

  }

  public void test179() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    java.util.Iterator var9 = var6.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    boolean var15 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var28 = var17.getHelp((-1), "hi!");
    java.lang.String var29 = var13.getHelp(100, "hi!");
    java.lang.String var30 = var6.getHelp(100);
    com.martiansoftware.jsap.Flagged var31 = var3.getByLongFlag(var30);
    java.lang.String var32 = var3.getHelp();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var29.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));

  }

  public void test180() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    java.lang.String var8 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.SimpleJSAP var9 = var3.setScreenWidth(1);
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var19 = var18.getShortFlag();
    char var20 = var18.getShortFlag();
    java.lang.Character var21 = var18.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var31 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var34 = var18.setDefault("hi!");
    java.lang.String var35 = var18.getHelp();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.JSAPResult var36 = var3.parse(var35);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + '4'+ "'", var21.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "hi!"+ "'", var35.equals("hi!"));

  }

  public void test181() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ClassStringParser var0 = com.martiansoftware.jsap.stringparsers.ClassStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var19 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var27 = var25.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var29 = var25.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var19, var22, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var36 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    var36.setUsage(var39);
    java.lang.String var42 = var36.toString();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var43 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var44 = var43.getParameter();
    boolean var45 = var43.declaredListSeparator();
    char var46 = var43.getListseparator();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var50 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var54 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var55 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var56 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var61 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var62 = var58.setHelp("hi!");
    var58.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var65 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    java.lang.String var68 = var66.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var69 = new com.martiansoftware.jsap.SimpleJSAP(var68);
    boolean var70 = var69.messagePrinted();
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var76 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var80 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var81 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var82 = var71.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var83 = new com.martiansoftware.jsap.SimpleJSAP(var82);
    com.martiansoftware.jsap.UnflaggedOption var84 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var65, var70, var82);
    boolean var85 = var84.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var89 = var87.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var90 = var84.setList(false);
    java.lang.String var91 = var90.getUsageName();
    com.martiansoftware.jsap.Switch var92 = new com.martiansoftware.jsap.Switch(var42, var46, "hi!", var91);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var93 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "hi!"+ "'", var61.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + ""+ "'", var82.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + ""+ "'", var91.equals(""));

  }

  public void test182() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ByteStringParser var0 = new com.martiansoftware.jsap.stringparsers.ByteStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    com.martiansoftware.jsap.ant.SwitchConfiguration var29 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var30 = var29.getLongflag();
    var29.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var42 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var49 = var48.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var50 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var42, "hi!", true, '4', "", var49);
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var52 = new com.martiansoftware.jsap.UnflaggedOption("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var53 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));

  }

  public void test183() throws Throwable {

    com.martiansoftware.jsap.stringparsers.StringStringParser var0 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var19 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var27 = var25.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var29 = var25.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var19, var22, false, '4', "hi!");
    java.lang.String var36 = var35.getSyntax();
    java.lang.Object var37 = var0.parse(var36);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    java.lang.String var44 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var44, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 10.0f, 0.0f);
    java.lang.String var63 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var63, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(var36, 1.0f, 10.0f, 10.0f);
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var78 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var82 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var83 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var84 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var86 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var90 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var91 = var90.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var92 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var84, "hi!", true, '4', "", var91);
    java.lang.Character var93 = var92.getShortFlagCharacter();
    char var94 = var92.getShortFlag();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)1.0f, (java.lang.Object)var92);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var36.equals("[(-4|--hi!)[:<hi!>]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var37.equals("[(-4|--hi!)[:<hi!>]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "hi!"+ "'", var44.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "hi!"+ "'", var63.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + ""+ "'", var91.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + '4'+ "'", var93.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == '4');

  }

  public void test184() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.JSAPResult var43 = var0.parse(var42);
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    java.util.Iterator var46 = var44.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var47 = var44.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var57 = var56.getShortFlag();
    char var58 = var56.getShortFlag();
    java.lang.Character var59 = var56.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var68 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var69 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var72 = var56.setDefault("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var73 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var74 = var73.getParameter();
    boolean var75 = var73.declaredListSeparator();
    char var76 = var73.getShortflag();
    char var77 = var73.getShortflag();
    com.martiansoftware.jsap.Switch var78 = var56.setShortFlag(var77);
    com.martiansoftware.jsap.ant.SwitchConfiguration var79 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var80 = var79.getLongflag();
    char var81 = var79.getShortflag();
    com.martiansoftware.jsap.Switch var82 = var56.setShortFlag(var81);
    java.lang.String var83 = var47.getIDByShortFlag((java.lang.Character)var81);
    com.martiansoftware.jsap.Flagged var84 = var0.getByShortFlag(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + '4'+ "'", var59.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == null);

  }

  public void test185() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var47 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var48 = var46.setStringParser((com.martiansoftware.jsap.StringParser)var47);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var58 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var66 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var58, "hi!", true, '4', "", var65);
    java.lang.String var67 = var66.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var67);
    com.martiansoftware.jsap.UnflaggedOption var69 = var46.setUsageName(var67);
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var74 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var75 = var71.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var76 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var77 = var71.setStringParser((com.martiansoftware.jsap.StringParser)var76);
    com.martiansoftware.jsap.ant.SwitchConfiguration var78 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var79 = var78.getLongflag();
    var78.setShortflag('#');
    java.lang.String var82 = var78.getLongflag();
    var78.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var85 = var71.setListSeparator('#');
    com.martiansoftware.jsap.UnflaggedOption var86 = var46.setListSeparator('#');
    java.lang.String var87 = var86.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var67.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "hi!"+ "'", var74.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + "<(-4|--)[:<hi!>]>"+ "'", var87.equals("<(-4|--)[:<hi!>]>"));

  }

  public void test186() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var47 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var48 = var46.setStringParser((com.martiansoftware.jsap.StringParser)var47);
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    java.lang.String var51 = var49.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    boolean var53 = var52.messagePrinted();
    java.lang.String var54 = var52.getHelp();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var55 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var56 = var55.getParameter();
    boolean var57 = var55.declaredListSeparator();
    char var58 = var55.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var59 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var60 = var59.hasProperties();
    var55.setRequired(var60);
    junit.framework.Assert.assertFalse(var54, var60);
    com.martiansoftware.jsap.UnflaggedOption var63 = var46.setRequired(var60);
    java.lang.String var64 = var63.getUsageName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var54.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));

  }

  public void test187() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var47 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var48 = var46.setStringParser((com.martiansoftware.jsap.StringParser)var47);
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    java.lang.String var51 = var49.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    boolean var53 = var52.messagePrinted();
    java.lang.String var54 = var52.getHelp();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var55 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var56 = var55.getParameter();
    boolean var57 = var55.declaredListSeparator();
    char var58 = var55.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var59 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var60 = var59.hasProperties();
    var55.setRequired(var60);
    junit.framework.Assert.assertFalse(var54, var60);
    com.martiansoftware.jsap.UnflaggedOption var63 = var46.setRequired(var60);
    boolean var64 = var46.isGreedy();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var54.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);

  }

  public void test188() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    com.martiansoftware.jsap.UnknownFlagException var6 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var0.setShortflag('4');
    char var8 = var0.getShortflag();
    com.martiansoftware.jsap.Parameter var9 = var0.getParameter();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);

  }

  public void test189() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var5.addDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var23 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var24 = var20.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var25 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = var20.setStringParser((com.martiansoftware.jsap.StringParser)var25);
    com.martiansoftware.jsap.FlaggedOption var27 = var5.setStringParser((com.martiansoftware.jsap.StringParser)var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var46 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var54 = var52.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var56 = var52.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, var49, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    java.lang.String var65 = var63.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var66 = new com.martiansoftware.jsap.SimpleJSAP(var65);
    boolean var67 = var66.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var68 = var62.setRequired(var67);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var69 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var70 = var69.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var71 = var62.setAllowMultipleDeclarations(var70);
    com.martiansoftware.jsap.FlaggedOption var72 = var5.setAllowMultipleDeclarations(var70);
    java.lang.String var73 = var5.getUsage();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var74 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var75 = var74.getParameter();
    boolean var76 = var74.declaredListSeparator();
    char var77 = var74.getShortflag();
    boolean var78 = var74.getIslist();
    junit.framework.Assert.assertFalse(var78);
    com.martiansoftware.jsap.FlaggedOption var80 = var5.setRequired(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!"+ "'", var23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "[<hi!>]"+ "'", var73.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);

  }

  public void test190() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    java.lang.String var8 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.SimpleJSAP var9 = var3.setScreenWidth(1);
    com.martiansoftware.jsap.TestOption var10 = new com.martiansoftware.jsap.TestOption();
    int var11 = var10.countTestCases();
    var10.testParsing();
    java.lang.String var13 = var10.toString();
    com.martiansoftware.jsap.Parameter var14 = var3.getByID(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null(com.martiansoftware.jsap.TestOption)"+ "'", var13.equals("null(com.martiansoftware.jsap.TestOption)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == null);

  }

  public void test191() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.stringparsers.InetAddressStringParser var29 = com.martiansoftware.jsap.stringparsers.InetAddressStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var30 = var27.setStringParser((com.martiansoftware.jsap.StringParser)var29);
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var34 = var32.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var36 = var32.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var36.addDefault("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var50 = var29.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);

  }

  public void test192() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var33 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser("hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);

  }

  public void test193() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    java.lang.String var7 = var3.getUsage();
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.SimpleJSAP var11 = var3.setScreenWidth(1);
    boolean var12 = var3.messagePrinted();
    java.lang.String var13 = var3.getUsage();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "[--help]"+ "'", var7.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "[--help]"+ "'", var13.equals("[--help]"));

  }

  public void test194() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    java.lang.String var12 = var8.getSyntax();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var14 = var13.getHelp();
    java.lang.String var15 = var13.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var16 = new com.martiansoftware.jsap.SimpleJSAP(var15);
    boolean var17 = var16.messagePrinted();
    java.lang.String var18 = var16.getHelp();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    boolean var23 = var22.messagePrinted();
    java.lang.String var24 = var22.getHelp();
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException(var24);
    java.lang.String[] var26 = new java.lang.String[] { var24};
    com.martiansoftware.jsap.JSAPResult var27 = var16.parse(var26);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var37 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var38 = var27.getClass("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var40 = var39.getID();
    com.martiansoftware.jsap.Switch var41 = var8.setLongFlag(var40);
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var59 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var51, "hi!", true, '4', "", var58);
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    var60.testShortFlag();
    java.lang.String var62 = var60.getName();
    com.martiansoftware.jsap.Switch var63 = var41.setLongFlag(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "[-4|--hi!]"+ "'", var12.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var18.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var24.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!"+ "'", var40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "hi!"+ "'", var62.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);

  }

  public void test195() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    java.lang.String var28 = var26.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var29 = new com.martiansoftware.jsap.SimpleJSAP(var28);
    boolean var30 = var29.messagePrinted();
    java.lang.String var31 = var29.getHelp();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.lang.String var34 = var32.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    boolean var36 = var35.messagePrinted();
    java.lang.String var37 = var35.getHelp();
    com.martiansoftware.jsap.ParseException var38 = new com.martiansoftware.jsap.ParseException(var37);
    java.lang.String[] var39 = new java.lang.String[] { var37};
    com.martiansoftware.jsap.JSAPResult var40 = var29.parse(var39);
    com.martiansoftware.jsap.stringparsers.DateStringParser var41 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var41.setUp();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var46 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var50 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var52 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var60 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var52, "hi!", true, '4', "", var59);
    java.lang.String var61 = var41.getProperty("");
    java.lang.String[] var62 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.JSAPResult var63 = var29.parse(var62);
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var67 = var65.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var69 = var65.setRequired(false);
    com.martiansoftware.jsap.JSAP var70 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var71 = var70.getHelp();
    java.lang.String var72 = var70.getUsage();
    com.martiansoftware.jsap.FlaggedOption var73 = var69.setUsageName(var72);
    java.lang.Exception var74 = var63.getException(var72);
    char[] var75 = var14.getCharArray(var72);
    com.martiansoftware.jsap.UnknownFlagException var77 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    java.lang.String var78 = var77.getFlag();
    java.util.Iterator var79 = var14.getExceptionIterator(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var31.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var37.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "4"+ "'", var78.equals("4"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);

  }

  public void test196() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var57 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var65 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var57, "hi!", true, '4', "", var64);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var66 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    java.lang.String var69 = var67.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var70 = new com.martiansoftware.jsap.SimpleJSAP(var69);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var74 = var72.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var76 = var72.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var78 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var81 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var66, var69, false, '4', "hi!");
    java.lang.String var85 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var86 = com.martiansoftware.util.StringUtils.wrapToList(var69, 1);
    java.util.List var88 = com.martiansoftware.util.StringUtils.wrapToList(var69, 1);
    char[] var89 = var14.getCharArray(var69);
    com.martiansoftware.jsap.TestUsageString var90 = new com.martiansoftware.jsap.TestUsageString(var69);
    var90.testUsage2();
    var90.testUsage2();
    var90.testUsage1();
    junit.framework.TestResult var94 = var90.run();
    var90.testUsage1();
    int var96 = var90.countTestCases();
    var90.testUsage1();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi!"+ "'", var85.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == 1);

  }

  public void test197() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    boolean var3 = var0.declaredListSeparator();
    boolean var4 = var0.getGreedy();
    char var5 = var0.getListseparator();
    boolean var6 = var0.declaredListSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);

  }

  public void test198() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var2 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var3 = var2.getLongflag();
    var2.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var6 = var1.setListSeparator('#');
    char var7 = var6.getShortFlag();
    boolean var8 = var6.isList();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);

  }

  public void test199() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.stringparsers.FileStringParser var3 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var3.tearDown();
    var3.setUp();
    boolean var6 = var3.mustExist();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var7 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var8 = var7.hasProperties();
    java.lang.String var9 = var7.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var10 = new com.martiansoftware.jsap.ant.ParserProperty();
    var7.addConfiguredProperty(var10);
    boolean var12 = var7.getGreedy();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var22 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var30 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var22, "hi!", true, '4', "", var29);
    java.lang.Character var31 = var30.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var34 = var30.setLongFlag("hi!");
    boolean var35 = var30.isList();
    var7.setGreedy(var35);
    com.martiansoftware.jsap.stringparsers.FileStringParser var37 = var3.setMustBeDirectory(var35);
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    java.lang.String var40 = var38.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var41 = new com.martiansoftware.jsap.SimpleJSAP(var40);
    boolean var42 = var41.messagePrinted();
    java.lang.String var43 = var41.getHelp();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var53 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var54 = var53.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var55 = var41.setScreenWidth(var54);
    boolean var56 = var55.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var61 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var62 = var58.setHelp("hi!");
    var58.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var65 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    java.lang.String var68 = var66.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var69 = new com.martiansoftware.jsap.SimpleJSAP(var68);
    boolean var70 = var69.messagePrinted();
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var76 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var80 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var81 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var82 = var71.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var83 = new com.martiansoftware.jsap.SimpleJSAP(var82);
    com.martiansoftware.jsap.UnflaggedOption var84 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var65, var70, var82);
    boolean var85 = var84.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var89 = var87.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var90 = var84.setList(false);
    boolean var91 = var90.isGreedy();
    junit.framework.Assert.assertEquals(var56, var91);
    junit.framework.Assert.assertEquals(var35, var91);
    var0.setIslist(var91);
    boolean var95 = var0.hasProperties();
    boolean var96 = var0.getRequired();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + '4'+ "'", var31.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var43.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "hi!"+ "'", var61.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + ""+ "'", var82.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == false);

  }

  public void test200() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FloatStringParser var0 = com.martiansoftware.jsap.stringparsers.FloatStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var26 = var15.getClass("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var38 = var27.getHelp((-1), "hi!");
    double var40 = var15.getDouble(var38, 0.0d);
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    boolean var51 = var50.messagePrinted();
    java.lang.String var52 = var50.getHelp();
    com.martiansoftware.jsap.ParseException var53 = new com.martiansoftware.jsap.ParseException(var52);
    java.lang.String[] var54 = new java.lang.String[] { var52};
    com.martiansoftware.jsap.JSAPResult var55 = var44.parse(var54);
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.util.Iterator var58 = var56.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var59 = var56.getIDMap();
    java.lang.String var60 = var56.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var64 = var55.getByte(var60, (byte)(-1));
    java.math.BigDecimal var65 = var15.getBigDecimal(var60);
    boolean var66 = var15.success();
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    java.util.Iterator var69 = var67.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var70 = var67.getIDMap();
    java.lang.String var71 = var67.getUsage();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var76 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var77 = var73.setHelp("hi!");
    java.lang.String var78 = var15.getString(var71, "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var79 = var0.parse(var71);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var52.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "hi!"+ "'", var76.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "hi!"+ "'", var78.equals("hi!"));

  }

  public void test201() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var14 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var22 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var14, "hi!", true, '4', "", var21);
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String[] var24 = var23.getDefault();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var3.registerParameter((com.martiansoftware.jsap.Parameter)var23);
      fail("Expected exception of type com.martiansoftware.jsap.JSAPException");
    } catch (com.martiansoftware.jsap.JSAPException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == null);

  }

  public void test202() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.Character var18 = var17.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = var17.setLongFlag("hi!");
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var40 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var48 = var46.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var50 = var46.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var40, var43, false, '4', "hi!");
    com.martiansoftware.jsap.FlaggedOption var57 = var17.setLongFlag("hi!");
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var61 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var67 = var66.getShortFlag();
    char var68 = var66.getShortFlag();
    java.lang.Character var69 = var66.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var73 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var77 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var78 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var79 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var82 = var66.setDefault("hi!");
    java.lang.String var83 = var66.getHelp();
    com.martiansoftware.jsap.RequiredParameterMissingException var84 = new com.martiansoftware.jsap.RequiredParameterMissingException(var83);
    java.lang.String[] var85 = new java.lang.String[] { var83};
    com.martiansoftware.jsap.FlaggedOption var86 = var57.setDefault(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + '4'+ "'", var18.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + '4'+ "'", var69.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + "hi!"+ "'", var83.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);

  }

  public void test203() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test7();
    com.martiansoftware.jsap.TestDefaults var5 = new com.martiansoftware.jsap.TestDefaults();
    var5.tearDown();
    junit.framework.TestResult var7 = var5.run();
    var0.run(var7);
    var0.test7();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);

  }

  public void test204() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    char var11 = var8.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var16 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var17 = var13.setHelp("hi!");
    var13.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var20 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    boolean var25 = var24.messagePrinted();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.UnflaggedOption var39 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var20, var25, var37);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    com.martiansoftware.jsap.UnflaggedOption var58 = var39.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var59 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var60 = var58.setStringParser((com.martiansoftware.jsap.StringParser)var59);
    char var61 = var58.getListSeparator();
    com.martiansoftware.jsap.Switch var62 = var8.setShortFlag(var61);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = var8.setLongFlag("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var67 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!"+ "'", var16.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);

  }

  public void test205() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.Parameter var3 = var0.getParameter();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var13 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var21 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var13, "hi!", true, '4', "", var20);
    com.martiansoftware.jsap.UnspecifiedParameterException var22 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    java.lang.String var23 = var22.getID();
    com.martiansoftware.jsap.JSAPException var24 = new com.martiansoftware.jsap.JSAPException(var23);
    junit.framework.Assert.assertNotSame((java.lang.Object)var3, (java.lang.Object)var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));

  }

  public void test206() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    java.lang.String var7 = var5.getSyntax();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var9 = var8.getHelp();
    java.lang.String var10 = var8.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var11 = new com.martiansoftware.jsap.SimpleJSAP(var10);
    boolean var12 = var11.messagePrinted();
    java.lang.String var13 = var11.getHelp();
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException(var13);
    com.martiansoftware.jsap.FlaggedOption var15 = var5.setUsageName(var13);
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getID();
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    java.lang.String var20 = var18.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var21 = new com.martiansoftware.jsap.SimpleJSAP(var20);
    com.martiansoftware.jsap.IDMap var22 = var21.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var32 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var40 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var32, "hi!", true, '4', "", var39);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var41 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var49 = var47.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var51 = var47.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, var44, false, '4', "hi!");
    var21.setUsage(var44);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var62 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var66 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var67 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var68 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var71 = new com.martiansoftware.jsap.TestOption();
    int var72 = var71.countTestCases();
    int var73 = var71.countTestCases();
    java.lang.String var74 = com.martiansoftware.util.StringUtils.padRight("hi!", var73);
    com.martiansoftware.jsap.SimpleJSAP var75 = var21.setScreenWidth(var73);
    java.lang.String var76 = com.martiansoftware.util.StringUtils.padRight(var17, var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "[<hi!>]"+ "'", var7.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var13.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "hi!"+ "'", var17.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "hi! "+ "'", var74.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "hi! "+ "'", var76.equals("hi! "));

  }

  public void test207() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigDecimalStringParser var0 = com.martiansoftware.jsap.stringparsers.BigDecimalStringParser.getParser();
    com.martiansoftware.jsap.ant.ParserProperty var1 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var6 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var7 = var3.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var8 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var1.setValue("hi!");
    java.lang.String var10 = var1.getValue();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var11 = var0.parse(var10);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "hi!"+ "'", var6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));

  }

  public void test208() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    junit.framework.Assert.assertNotNull((java.lang.Object)var1);
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    com.martiansoftware.jsap.IDMap var13 = var12.getIDMap();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    java.lang.String var26 = var13.getIDByLongFlag(var25);
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var36 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var44 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var36, "hi!", true, '4', "", var43);
    java.util.List var46 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var47 = var13.getIDByLongFlag("");
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var57 = var56.getShortFlag();
    char var58 = var56.getShortFlag();
    java.lang.String var59 = var13.getIDByShortFlag(var58);
    com.martiansoftware.jsap.FlaggedOption var60 = var1.setListSeparator(var58);
    boolean var61 = var1.allowMultipleDeclarations();
    java.lang.String var62 = var1.getLongFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == null);

  }

  public void test209() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    boolean var1 = var0.getIslist();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var11 = var10.getShortFlag();
    char var12 = var10.getShortFlag();
    java.lang.Character var13 = var10.getShortFlagCharacter();
    com.martiansoftware.jsap.UnknownFlagException var14 = new com.martiansoftware.jsap.UnknownFlagException(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var24 = var23.getShortFlag();
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var36 = var25.getHelp((-1), "hi!");
    java.lang.String[] var37 = new java.lang.String[] { var36};
    com.martiansoftware.jsap.Switch var38 = var23.setDefault(var37);
    java.lang.Character var39 = var38.getShortFlagCharacter();
    char var40 = var38.getShortFlag();
    junit.framework.Assert.assertEquals((char)var13, var40);
    var0.setShortflag((char)var13);
    com.martiansoftware.jsap.Parameter var43 = var0.getParameter();
    boolean var44 = var0.getIslist();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + '4'+ "'", var13.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + '4'+ "'", var39.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);

  }

  public void test210() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test7();
    junit.framework.TestResult var5 = var0.run();
    var0.test9();
    var0.test3();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);

  }

  public void test211() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    java.lang.Class[] var54 = var14.getClassArray("");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    java.lang.String var57 = var55.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var58 = new com.martiansoftware.jsap.SimpleJSAP(var57);
    boolean var59 = var58.messagePrinted();
    java.lang.String var60 = var58.getHelp();
    long[] var61 = var14.getLongArray(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var60.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);

  }

  public void test212() throws Throwable {

    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((short)1, (short)(-1));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test213() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.stringparsers.DateStringParser var15 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var15.setUp();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var26 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var26, "hi!", true, '4', "", var33);
    java.lang.String var35 = var15.getProperty("");
    java.lang.String[] var36 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.JSAPResult var37 = var3.parse(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var41 = var39.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var43 = var39.setRequired(false);
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    java.lang.String var46 = var44.getUsage();
    com.martiansoftware.jsap.FlaggedOption var47 = var43.setUsageName(var46);
    java.lang.Exception var48 = var37.getException(var46);
    boolean var49 = var37.success();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var59 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var67 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var59, "hi!", true, '4', "", var66);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var68 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    java.lang.String var71 = var69.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var72 = new com.martiansoftware.jsap.SimpleJSAP(var71);
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var76 = var74.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var78 = var74.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var80 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var83 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var84 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var68, var71, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var85 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.Flagged var87 = var85.getByShortFlag('4');
    com.martiansoftware.jsap.UnknownFlagException var89 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.Flagged var90 = var85.getByShortFlag('4');
    java.lang.String var91 = var85.getHelp();
    byte[] var92 = var37.getByteArray(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var91.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);

  }

  public void test214() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.String var18 = var17.getSyntax();
    java.lang.Character var19 = var17.getShortFlagCharacter();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    boolean var24 = var23.messagePrinted();
    java.lang.String var25 = var23.getHelp();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    java.lang.String var28 = var26.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var29 = new com.martiansoftware.jsap.SimpleJSAP(var28);
    boolean var30 = var29.messagePrinted();
    java.lang.String var31 = var29.getHelp();
    com.martiansoftware.jsap.ParseException var32 = new com.martiansoftware.jsap.ParseException(var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    com.martiansoftware.jsap.JSAPResult var34 = var23.parse(var33);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var35 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var36 = var35.getParameter();
    boolean var37 = var35.declaredListSeparator();
    char var38 = var35.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var41 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var40);
    java.lang.String var42 = var40.toString();
    var35.setLongflag(var42);
    java.lang.String[] var44 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize(var42);
    var23.setHelp(var42);
    com.martiansoftware.jsap.FlaggedOption var46 = var17.setLongFlag(var42);
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    com.martiansoftware.jsap.IDMap var51 = var50.getIDMap();
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var62 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var63 = var52.getHelp((-1), "hi!");
    java.lang.String var64 = var51.getIDByLongFlag(var63);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var74 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var80 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var81 = var80.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var74, "hi!", true, '4', "", var81);
    java.util.List var84 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var85 = var51.getIDByLongFlag("");
    com.martiansoftware.jsap.FlaggedOption var86 = var17.setDefault("");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var18.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + '4'+ "'", var19.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var25.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var31.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var42.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);

  }

  public void test215() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var7 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var8 = var7.getID();
    java.lang.Object var9 = var0.parse(var8);
    com.martiansoftware.jsap.Defaults var10 = new com.martiansoftware.jsap.Defaults();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    java.lang.String var16 = var14.getHelp();
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    java.lang.String var19 = var17.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var20 = new com.martiansoftware.jsap.SimpleJSAP(var19);
    boolean var21 = var20.messagePrinted();
    java.lang.String var22 = var20.getHelp();
    com.martiansoftware.jsap.ParseException var23 = new com.martiansoftware.jsap.ParseException(var22);
    java.lang.String[] var24 = new java.lang.String[] { var22};
    com.martiansoftware.jsap.JSAPResult var25 = var14.parse(var24);
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var29 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var34 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var35 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var36 = var25.getClass("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    java.lang.String var45 = var43.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var46 = new com.martiansoftware.jsap.SimpleJSAP(var45);
    boolean var47 = var46.messagePrinted();
    java.lang.String var48 = var46.getHelp();
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException(var48);
    java.lang.String[] var50 = new java.lang.String[] { var48};
    com.martiansoftware.jsap.JSAPResult var51 = var40.parse(var50);
    com.martiansoftware.jsap.stringparsers.DateStringParser var52 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var52.setUp();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var62 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var63 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var71 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var63, "hi!", true, '4', "", var70);
    java.lang.String var72 = var52.getProperty("");
    java.lang.String[] var73 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.JSAPResult var74 = var40.parse(var73);
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var78 = var76.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var80 = var76.setRequired(false);
    com.martiansoftware.jsap.JSAP var81 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var82 = var81.getHelp();
    java.lang.String var83 = var81.getUsage();
    com.martiansoftware.jsap.FlaggedOption var84 = var80.setUsageName(var83);
    java.lang.Exception var85 = var74.getException(var83);
    char[] var86 = var25.getCharArray(var83);
    com.martiansoftware.jsap.JSAP var87 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var88 = var87.getHelp();
    java.lang.String var89 = var87.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var90 = new com.martiansoftware.jsap.SimpleJSAP(var89);
    java.lang.Class var91 = var25.getClass(var89);
    java.lang.String[] var92 = var10.getDefault(var89);
    java.lang.String var93 = var0.getProperty(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var16.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var22.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var48.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + ""+ "'", var82.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + ""+ "'", var83.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + ""+ "'", var88.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + ""+ "'", var89.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == null);

  }

  public void test216() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var9.testID();
    var9.testLongFlag();

  }

  public void test217() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    java.lang.String var6 = var1.getUsage();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var11 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var12 = var8.setHelp("hi!");
    var8.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var15 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var32 = var21.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var33 = new com.martiansoftware.jsap.SimpleJSAP(var32);
    com.martiansoftware.jsap.UnflaggedOption var34 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var15, var20, var32);
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var44 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var52 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var44, "hi!", true, '4', "", var51);
    com.martiansoftware.jsap.UnflaggedOption var53 = var34.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var54 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var55 = var53.setStringParser((com.martiansoftware.jsap.StringParser)var54);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var65 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var65, "hi!", true, '4', "", var72);
    java.lang.String var74 = var73.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var74);
    com.martiansoftware.jsap.UnflaggedOption var76 = var53.setUsageName(var74);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var77 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var78 = var77.getRequired();
    com.martiansoftware.jsap.UnflaggedOption var79 = var76.setList(var78);
    com.martiansoftware.jsap.FlaggedOption var80 = var1.setRequired(var78);
    boolean var81 = var80.required();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "[<hi!>]"+ "'", var6.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var74.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);

  }

  public void test218() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.String var18 = var17.getSyntax();
    com.martiansoftware.jsap.StringParser var19 = var17.getStringParser();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var29 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var37 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var29, "hi!", true, '4', "", var36);
    com.martiansoftware.jsap.UnspecifiedParameterException var38 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var41 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var40);
    com.martiansoftware.jsap.ParseException var42 = new com.martiansoftware.jsap.ParseException("", (java.lang.Throwable)var41);
    com.martiansoftware.jsap.Parameter var43 = var17.setHelp("");
    java.lang.String var44 = var17.getSyntax();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var49 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var50 = var46.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var51 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var52 = var51.getID();
    java.lang.String var53 = var51.getID();
    com.martiansoftware.jsap.FlaggedOption var54 = var17.setDefault(var53);
    char var55 = var54.getListSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var18.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var44.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "hi!"+ "'", var49.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "hi!"+ "'", var52.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "hi!"+ "'", var53.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == ':');

  }

  public void test219() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var6 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var7 = var1.setStringParser((com.martiansoftware.jsap.StringParser)var6);
    java.lang.String var8 = var7.getSyntax();
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var9 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "[<hi!>]"+ "'", var8.equals("[<hi!>]"));

  }

  public void test220() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test7();
    var0.test8();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var13 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var21 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var13, "hi!", true, '4', "", var20);
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    junit.framework.TestResult var23 = var22.run();
    var0.run(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);

  }

  public void test221() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    boolean var3 = var0.mustExist();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var13 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var21 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var13, "hi!", true, '4', "", var20);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var27 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var28 = var24.setHelp("hi!");
    var24.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var31 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.lang.String var34 = var32.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    boolean var36 = var35.messagePrinted();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var48 = var37.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    com.martiansoftware.jsap.UnflaggedOption var50 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var31, var36, var48);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.UnflaggedOption var69 = var50.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var70 = var22.setList(true);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var75 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var76 = var72.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var77 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var78 = var72.setStringParser((com.martiansoftware.jsap.StringParser)var77);
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var86 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var87 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var88 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var91 = var78.setHelp("hi!");
    com.martiansoftware.jsap.FlaggedOption var92 = var22.setUsageName("hi!");
    com.martiansoftware.jsap.FlaggedOption var94 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var95 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    java.lang.String var96 = var0.getProperty("hi!", "hi!");
    var0.setUp();
    var0.setUp();
    boolean var99 = var0.mustExist();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi!"+ "'", var27.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "hi!"+ "'", var75.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "hi!"+ "'", var96.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var99 == false);

  }

  public void test222() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var6 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var7 = var6.getParameter();
    boolean var8 = var6.declaredListSeparator();
    char var9 = var6.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var10 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var11 = var10.hasProperties();
    var6.setRequired(var11);
    junit.framework.Assert.assertFalse(var5, var11);
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);

  }

  public void test223() throws Throwable {

    com.martiansoftware.jsap.ant.ParserProperty var0 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var7 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var0.setValue("hi!");
    com.martiansoftware.jsap.stringparsers.DateStringParser var9 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var9.setUp();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var14 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var18 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var19 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var20 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var28 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var20, "hi!", true, '4', "", var27);
    java.lang.String var29 = var9.getProperty("");
    java.lang.String[] var31 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var41 = var9.getProperty("", "hi!");
    var0.setValue("hi!");
    java.lang.String var43 = var0.getValue();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "hi!"+ "'", var41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));

  }

  public void test224() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var12 = new com.martiansoftware.jsap.TestOption();
    int var13 = var12.countTestCases();
    int var14 = var12.countTestCases();
    java.lang.String var15 = com.martiansoftware.util.StringUtils.padRight("hi!", var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var25 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var33 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var25, "hi!", true, '4', "", var32);
    java.lang.String var34 = var33.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var34);
    com.martiansoftware.jsap.TestOption var36 = new com.martiansoftware.jsap.TestOption();
    int var37 = var36.countTestCases();
    int var38 = var36.countTestCases();
    int var39 = var36.countTestCases();
    java.lang.String var40 = com.martiansoftware.util.StringUtils.padRightToWidth(var34, var39);
    java.lang.String var41 = com.martiansoftware.util.StringUtils.padRight(var15, var39);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail(var41);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi! "+ "'", var15.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var34.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var40.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "hi!  "+ "'", var41.equals("hi!  "));

  }

  public void test225() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.JSAPResult var43 = var0.parse(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var53 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var61 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var53, "hi!", true, '4', "", var60);
    java.lang.Character var62 = var61.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var65 = var61.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var66 = new com.martiansoftware.jsap.ParseException("hi!");
    int[] var67 = var43.getIntArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var76 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var77 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var80 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var81 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var82 = var81.getSyntax();
    java.lang.Package[] var83 = var43.getPackageArray(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + '4'+ "'", var62.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "[[:<hi!>]]"+ "'", var82.equals("[[:<hi!>]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);

  }

  public void test226() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    var35.setUsage(var38);
    java.lang.String var41 = var35.toString();
    com.martiansoftware.jsap.SimpleJSAP var43 = var35.setScreenWidth(1);
    boolean var44 = var35.messagePrinted();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var44);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);

  }

  public void test227() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    java.lang.String var17 = var4.getIDByLongFlag(var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var36 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var44 = var42.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var46 = var42.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var52 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var36, var39, false, '4', "hi!");
    java.lang.String var55 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var56 = com.martiansoftware.util.StringUtils.wrapToList(var39, 1);
    java.util.List var58 = com.martiansoftware.util.StringUtils.wrapToList(var39, 1);
    com.martiansoftware.jsap.SyntaxException var59 = new com.martiansoftware.jsap.SyntaxException(var39);
    boolean var60 = var4.idExists(var39);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var70 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var78 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, "hi!", true, '4', "", var77);
    java.lang.String var79 = var78.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var79);
    boolean var81 = var4.idExists(var79);
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!"+ "'", var55.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var79.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);

  }

  public void test228() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.util.Iterator var3 = var1.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var4 = var1.getIDMap();
    java.lang.String var5 = var1.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    java.util.Iterator var9 = var6.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    boolean var15 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var28 = var17.getHelp((-1), "hi!");
    java.lang.String var29 = var13.getHelp(100, "hi!");
    java.lang.String var30 = var6.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var40 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var48 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var40, "hi!", true, '4', "", var47);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var50 = var1.getHelp(100, "");
    java.lang.String var51 = var1.toString();
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    java.lang.String var55 = var53.getUsage();
    java.util.Iterator var56 = var53.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    java.lang.String var59 = var57.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var60 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    boolean var61 = var60.messagePrinted();
    boolean var62 = var60.messagePrinted();
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var69 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var73 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var74 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var75 = var64.getHelp((-1), "hi!");
    java.lang.String var76 = var60.getHelp(100, "hi!");
    java.lang.String var77 = var53.getHelp(100);
    java.lang.String var78 = var1.getHelp(1, var77);
    java.lang.String var79 = var0.getHelp(1);
    com.martiansoftware.jsap.JSAP var80 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var81 = var80.getHelp();
    java.lang.String var82 = var80.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var83 = new com.martiansoftware.jsap.SimpleJSAP(var82);
    boolean var84 = var83.messagePrinted();
    java.lang.String var85 = var83.getHelp();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var86 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var87 = var86.getParameter();
    boolean var88 = var86.declaredListSeparator();
    char var89 = var86.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var90 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var91 = var90.hasProperties();
    var86.setRequired(var91);
    junit.framework.Assert.assertFalse(var85, var91);
    com.martiansoftware.jsap.JSAPResult var94 = var0.parse(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var29.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var76.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + ""+ "'", var82.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var85.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);

  }

  public void test229() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongStringParser var0 = new com.martiansoftware.jsap.stringparsers.LongStringParser();
    var0.setUp();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var3 = var2.getHelp();
    java.lang.String var4 = var2.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var5 = new com.martiansoftware.jsap.SimpleJSAP(var4);
    com.martiansoftware.jsap.IDMap var6 = var5.getIDMap();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var18 = var7.getHelp((-1), "hi!");
    java.lang.String var19 = var6.getIDByLongFlag(var18);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var29 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var37 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var29, "hi!", true, '4', "", var36);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var38 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var39 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var40 = var39.getHelp();
    java.lang.String var41 = var39.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var42 = new com.martiansoftware.jsap.SimpleJSAP(var41);
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var46 = var44.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var48 = var44.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var50 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var38, var41, false, '4', "hi!");
    java.lang.String var57 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var58 = com.martiansoftware.util.StringUtils.wrapToList(var41, 1);
    java.util.List var60 = com.martiansoftware.util.StringUtils.wrapToList(var41, 1);
    com.martiansoftware.jsap.SyntaxException var61 = new com.martiansoftware.jsap.SyntaxException(var41);
    boolean var62 = var6.idExists(var41);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var72 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var78 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var79 = var78.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var80 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var72, "hi!", true, '4', "", var79);
    java.lang.String var81 = var80.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var81);
    boolean var83 = var6.idExists(var81);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var84 = var0.parse(var81);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "hi!"+ "'", var57.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var81.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == false);

  }

  public void test230() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getHelp();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    java.util.Iterator var8 = var5.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    boolean var14 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    java.lang.String var28 = var12.getHelp(100, "hi!");
    java.lang.String var29 = var5.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var49 = var0.getHelp(100, "");
    java.lang.String var50 = var0.toString();
    com.martiansoftware.jsap.IDMap var51 = var0.getIDMap();
    java.util.Iterator var52 = var51.idIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var28.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);

  }

  public void test231() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    java.util.Iterator var35 = var33.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var36 = var33.getIDMap();
    java.lang.String var37 = var33.getUsage();
    int[] var38 = var14.getIntArray(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);

  }

  public void test232() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var41 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var42 = var38.setHelp("hi!");
    var38.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var45 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    boolean var50 = var49.messagePrinted();
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var62 = var51.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var63 = new com.martiansoftware.jsap.SimpleJSAP(var62);
    com.martiansoftware.jsap.UnflaggedOption var64 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var45, var50, var62);
    com.martiansoftware.jsap.ant.SwitchConfiguration var65 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var66 = var65.getLongflag();
    var65.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var72 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var76 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var77 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var78 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var84 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var85 = var84.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var86 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var78, "hi!", true, '4', "", var85);
    com.martiansoftware.jsap.Switch var87 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var0.unregisterParameter((com.martiansoftware.jsap.Parameter)var87);
    var0.finalize();
    java.lang.String var90 = var0.getUsage();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "hi!"+ "'", var41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + ""+ "'", var85.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + ""+ "'", var90.equals(""));

  }

  public void test233() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getHelp();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    java.util.Iterator var8 = var5.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    boolean var14 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    java.lang.String var28 = var12.getHelp(100, "hi!");
    java.lang.String var29 = var5.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var49 = var0.getHelp(100, "");
    com.martiansoftware.jsap.IDMap var50 = var0.getIDMap();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var28.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);

  }

  public void test234() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.JSAPException var39 = new com.martiansoftware.jsap.JSAPException(var37);
    java.util.Date var40 = var14.getDate(var37);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var45 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var46 = var42.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var47 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = var42.setStringParser((com.martiansoftware.jsap.StringParser)var47);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var58 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var61 = var48.setHelp("hi!");
    int[] var62 = var14.getIntArray("hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    java.lang.String var65 = var63.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var66 = new com.martiansoftware.jsap.SimpleJSAP(var65);
    boolean var67 = var66.messagePrinted();
    java.lang.String var68 = var66.getHelp();
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    java.lang.String var71 = var69.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var72 = new com.martiansoftware.jsap.SimpleJSAP(var71);
    boolean var73 = var72.messagePrinted();
    java.lang.String var74 = var72.getHelp();
    com.martiansoftware.jsap.ParseException var75 = new com.martiansoftware.jsap.ParseException(var74);
    java.lang.String[] var76 = new java.lang.String[] { var74};
    com.martiansoftware.jsap.JSAPResult var77 = var66.parse(var76);
    com.martiansoftware.jsap.JSAP var78 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var79 = var78.getHelp();
    java.lang.String var80 = var78.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var81 = new com.martiansoftware.jsap.SimpleJSAP(var80);
    float[] var82 = var77.getFloatArray(var80);
    java.net.URL var83 = var14.getURL(var80);
    com.martiansoftware.jsap.JSAP var84 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var85 = var84.getHelp();
    java.lang.String var86 = var84.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var87 = new com.martiansoftware.jsap.SimpleJSAP(var86);
    boolean var88 = var87.messagePrinted();
    java.lang.String var89 = var87.getHelp();
    java.io.File var90 = var14.getFile(var89);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail(var89);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "hi!"+ "'", var45.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var68.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var74.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + ""+ "'", var80.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + ""+ "'", var85.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + ""+ "'", var86.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var89.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == null);

  }

  public void test235() throws Throwable {

    com.martiansoftware.jsap.TestOption var0 = new com.martiansoftware.jsap.TestOption();
    var0.testSettersAndGetters();

  }

  public void test236() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var40 = var34.setRequired(var39);
    java.lang.Character var41 = var40.getShortFlagCharacter();
    java.lang.String var42 = var40.getLongFlag();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var46 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var50 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var52 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var60 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var52, "hi!", true, '4', "", var59);
    com.martiansoftware.jsap.UnspecifiedParameterException var61 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    java.lang.String var62 = var61.getID();
    com.martiansoftware.jsap.JSAPException var63 = new com.martiansoftware.jsap.JSAPException(var62);
    com.martiansoftware.jsap.JSAPException var64 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var63);
    com.martiansoftware.jsap.JSAPException var65 = new com.martiansoftware.jsap.JSAPException(var42, (java.lang.Throwable)var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + '4'+ "'", var41.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "hi!"+ "'", var42.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));

  }

  public void test237() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var38 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var46 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var38, "hi!", true, '4', "", var45);
    com.martiansoftware.jsap.UnflaggedOption var47 = var28.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var51 = var49.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var52 = var28.setList(false);
    com.martiansoftware.jsap.stringparsers.FileStringParser var53 = var0.setMustBeFile(false);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var54 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var55 = var54.getParameter();
    boolean var56 = var54.declaredListSeparator();
    char var57 = var54.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var58 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var59 = var58.hasProperties();
    var54.setRequired(var59);
    junit.framework.Assert.assertFalse(var59);
    com.martiansoftware.jsap.stringparsers.FileStringParser var62 = var0.setMustBeDirectory(var59);
    boolean var63 = var0.mustBeDirectory();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);

  }

  public void test238() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testConfig();
    var0.tearDown();

  }

  public void test239() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntegerStringParser var0 = com.martiansoftware.jsap.stringparsers.IntegerStringParser.getParser();
    java.lang.String var3 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var8 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var9 = var5.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var10 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var11 = var10.getID();
    java.lang.String var12 = var10.getID();
    com.martiansoftware.jsap.JSAPException var13 = new com.martiansoftware.jsap.JSAPException(var3, (java.lang.Throwable)var10);
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var17 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var21 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var22 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var23 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var30 = var29.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var31 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var23, "hi!", true, '4', "", var30);
    com.martiansoftware.jsap.UnspecifiedParameterException var32 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    java.lang.String var33 = var32.getID();
    com.martiansoftware.jsap.JSAPException var34 = new com.martiansoftware.jsap.JSAPException(var33);
    com.martiansoftware.jsap.JSAPException var35 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var34);
    com.martiansoftware.jsap.JSAPException var36 = new com.martiansoftware.jsap.JSAPException(var3, (java.lang.Throwable)var34);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var37 = var0.parse(var3);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "hi!"+ "'", var3.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!"+ "'", var12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));

  }

  public void test240() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntegerStringParser var0 = com.martiansoftware.jsap.stringparsers.IntegerStringParser.getParser();
    com.martiansoftware.jsap.stringparsers.DateStringParser var1 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var1.setUp();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var6 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var10 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var11 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var12 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var20 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var12, "hi!", true, '4', "", var19);
    java.lang.String var21 = var1.getProperty("");
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var31 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var44 = var1.getProperty("hi!", "hi!");
    com.martiansoftware.jsap.UnflaggedOption var45 = new com.martiansoftware.jsap.UnflaggedOption(var44);
    com.martiansoftware.jsap.stringparsers.FileStringParser var46 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var46.tearDown();
    boolean var48 = var46.mustBeDirectory();
    com.martiansoftware.jsap.UnflaggedOption var49 = var45.setGreedy(var48);
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    java.lang.String var52 = var50.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var52);
    boolean var54 = var53.messagePrinted();
    java.lang.String var55 = var53.getHelp();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    boolean var60 = var59.messagePrinted();
    java.lang.String var61 = var59.getHelp();
    com.martiansoftware.jsap.ParseException var62 = new com.martiansoftware.jsap.ParseException(var61);
    java.lang.String[] var63 = new java.lang.String[] { var61};
    com.martiansoftware.jsap.JSAPResult var64 = var53.parse(var63);
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    java.lang.String var67 = var65.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var68 = new com.martiansoftware.jsap.SimpleJSAP(var67);
    float[] var69 = var64.getFloatArray(var67);
    com.martiansoftware.jsap.JSAPException var70 = new com.martiansoftware.jsap.JSAPException(var67);
    com.martiansoftware.jsap.UnflaggedOption var71 = var45.setUsageName(var67);
    com.martiansoftware.jsap.TestUsageString var72 = new com.martiansoftware.jsap.TestUsageString(var67);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var73 = var0.parse(var67);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "hi!"+ "'", var44.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var55.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var61.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);

  }

  public void test241() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    java.lang.String var28 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var29 = var14.getURLArray(var28);
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.util.Iterator var32 = var30.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var33 = var30.getIDMap();
    java.lang.String var34 = var30.getHelp();
    java.lang.String var35 = var30.toString();
    java.lang.Object[] var36 = var14.getObjectArray(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    java.lang.String var55 = var54.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var55);
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption(var55);
    int[] var58 = var14.getIntArray(var55);
    java.util.Iterator var59 = var14.getErrorMessageIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var55.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);

  }

  public void test242() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var6 = var4.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var8 = var4.setRequired(false);
    var0.setAllowmultipledeclarations(false);
    junit.framework.Assert.assertNotNull((java.lang.Object)false);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(false);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);

  }

  public void test243() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getUsage();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAPResult var7 = var0.parse("hi!");
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var9 = var8.getHelp();
    java.util.Iterator var10 = var8.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var11 = var8.getIDMap();
    java.lang.String var12 = var8.getHelp();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      byte var13 = var7.getByte(var12);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));

  }

  public void test244() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var33 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var34 = new java.lang.Object[] { var33};
    java.lang.Object[] var35 = var14.getObjectArray(var31, var34);
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var36 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException(var31);
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException(var31);
    java.lang.String var38 = var37.getFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));

  }

  public void test245() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    boolean var3 = var0.getIslist();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var8 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var9 = var5.setHelp("hi!");
    var5.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var12 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var14 = var13.getHelp();
    java.lang.String var15 = var13.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var16 = new com.martiansoftware.jsap.SimpleJSAP(var15);
    boolean var17 = var16.messagePrinted();
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var29 = var18.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var30 = new com.martiansoftware.jsap.SimpleJSAP(var29);
    com.martiansoftware.jsap.UnflaggedOption var31 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var12, var17, var29);
    com.martiansoftware.jsap.ant.SwitchConfiguration var32 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var33 = var32.getLongflag();
    var32.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var0.setListseparator('#');
    com.martiansoftware.jsap.ant.DefaultValue var56 = new com.martiansoftware.jsap.ant.DefaultValue();
    java.lang.String var57 = var56.getValue();
    var0.addConfiguredDefault(var56);
    boolean var59 = var0.getRequired();
    boolean var60 = var0.getIslist();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);

  }

  public void test246() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ClassStringParser var0 = new com.martiansoftware.jsap.stringparsers.ClassStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var2 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var3 = var2.idIterator();
    com.martiansoftware.jsap.JSAP var4 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var15 = var4.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var25 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var33 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var25, "hi!", true, '4', "", var32);
    java.lang.String[] var34 = new java.lang.String[] { var32};
    var2.addDefault(var15, var34);
    java.lang.String[] var36 = new java.lang.String[] { var15};
    com.martiansoftware.jsap.JSAPResult var37 = var1.parse(var36);
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    java.lang.String var40 = var38.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var41 = new com.martiansoftware.jsap.SimpleJSAP(var40);
    boolean var42 = var41.messagePrinted();
    java.lang.String var43 = var41.getHelp();
    com.martiansoftware.jsap.JSAPResult var44 = var1.parse(var43);
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var54 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, "hi!", true, '4', "", var61);
    java.lang.Character var63 = var62.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var66 = var62.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var67 = new com.martiansoftware.jsap.ParseException("hi!");
    int[] var68 = var44.getIntArray("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var69 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var43.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + '4'+ "'", var63.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);

  }

  public void test247() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var7 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var8 = var4.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var9 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var10 = var9.getID();
    java.lang.String var11 = var9.getID();
    var0.setLongflag(var11);
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var15 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var16 = var15.getLongflag();
    var15.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var19 = var14.setListSeparator('#');
    boolean var20 = var19.isList();
    var0.setAllowmultipledeclarations(var20);
    boolean var22 = var0.hasProperties();
    com.martiansoftware.jsap.ant.SwitchConfiguration var23 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var24 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var25 = var24.getParameter();
    boolean var26 = var24.declaredListSeparator();
    boolean var27 = var24.getIslist();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var32 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var33 = var29.setHelp("hi!");
    var29.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var36 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var53 = var42.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var54 = new com.martiansoftware.jsap.SimpleJSAP(var53);
    com.martiansoftware.jsap.UnflaggedOption var55 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var36, var41, var53);
    com.martiansoftware.jsap.ant.SwitchConfiguration var56 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var57 = var56.getLongflag();
    var56.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var68 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var69 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var77 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var69, "hi!", true, '4', "", var76);
    com.martiansoftware.jsap.Switch var78 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var24.setListseparator('#');
    com.martiansoftware.jsap.ant.DefaultValue var80 = new com.martiansoftware.jsap.ant.DefaultValue();
    java.lang.String var81 = var80.getValue();
    var24.addConfiguredDefault(var80);
    var23.addConfiguredDefault(var80);
    var0.addConfiguredDefault(var80);
    com.martiansoftware.jsap.FlaggedOption var86 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var89 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var90 = var86.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var91 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var92 = var91.getID();
    java.lang.String var93 = var91.getID();
    com.martiansoftware.jsap.JSAPException var94 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var91);
    java.lang.String var95 = var91.getID();
    java.lang.String var96 = var91.getID();
    var80.addText(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + "hi!"+ "'", var89.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + "hi!"+ "'", var92.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + "hi!"+ "'", var93.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "hi!"+ "'", var95.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "hi!"+ "'", var96.equals("hi!"));

  }

  public void test248() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    com.martiansoftware.jsap.ant.DefaultValue var2 = new com.martiansoftware.jsap.ant.DefaultValue();
    var0.addConfiguredDefault(var2);
    java.lang.String var4 = var0.getLongflag();
    java.lang.String[] var5 = var0.getDefaults();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var15 = var14.getShortFlag();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    java.lang.String[] var28 = new java.lang.String[] { var27};
    com.martiansoftware.jsap.Switch var29 = var14.setDefault(var28);
    char var30 = var29.getShortFlag();
    com.martiansoftware.jsap.ant.SwitchConfiguration var31 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var32 = var31.getLongflag();
    var31.setShortflag('#');
    java.lang.String var35 = var31.getLongflag();
    var31.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var31.setShortflag('4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var50 = var49.getShortFlag();
    var31.setShortflag(var50);
    junit.framework.Assert.assertEquals(var30, var50);
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var62 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var68 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var69 = var68.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var70 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var62, "hi!", true, '4', "", var69);
    java.lang.Character var71 = var70.getShortFlagCharacter();
    junit.framework.Assert.assertEquals(var50, (char)var71);
    var0.setShortflag(var50);
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var77 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var81 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var82 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var83 = var82.getShortFlag();
    java.lang.String var84 = var82.getSyntax();
    char var85 = var82.getShortFlag();
    var0.setShortflag(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + '4'+ "'", var71.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + "[-4|--hi!]"+ "'", var84.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == '4');

  }

  public void test249() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    com.martiansoftware.jsap.ant.SwitchConfiguration var2 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var3 = var2.getLongflag();
    com.martiansoftware.jsap.ant.DefaultValue var4 = new com.martiansoftware.jsap.ant.DefaultValue();
    var2.addConfiguredDefault(var4);
    var0.addConfiguredDefault(var4);
    com.martiansoftware.jsap.Parameter var7 = var0.getParameter();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);

  }

  public void test250() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var35 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var36 = var35.getLongflag();
    char var37 = var35.getShortflag();
    com.martiansoftware.jsap.ant.ParserProperty var38 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var43 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var44 = var40.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var45 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var38.setValue("hi!");
    com.martiansoftware.jsap.stringparsers.DateStringParser var47 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var47.setUp();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var58 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var66 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var58, "hi!", true, '4', "", var65);
    java.lang.String var67 = var47.getProperty("");
    java.lang.String[] var69 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var73 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var77 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var78 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var79 = var47.getProperty("", "hi!");
    var38.setValue("hi!");
    var35.setLongflag("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var82 = var18.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "hi!"+ "'", var79.equals("hi!"));

  }

  public void test251() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ByteStringParser var0 = new com.martiansoftware.jsap.stringparsers.ByteStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var10 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var10.testSwitchParse();
    var10.testLongFlag();
    var10.testSwitchParse();
    java.lang.String var14 = var10.getName();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var15 = var0.parse(var14);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!"+ "'", var14.equals("hi!"));

  }

  public void test252() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.ant.SwitchConfiguration var28 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var29 = var28.getLongflag();
    var28.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var51 = new com.martiansoftware.jsap.UnflaggedOption("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var52 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var53 = var52.getParameter();
    java.lang.String var54 = var52.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var59 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var60 = var56.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var61 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var62 = var61.getID();
    java.lang.String var63 = var61.getID();
    var52.setLongflag(var63);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var67 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var68 = var67.getLongflag();
    var67.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var71 = var66.setListSeparator('#');
    boolean var72 = var71.isList();
    var52.setAllowmultipledeclarations(var72);
    com.martiansoftware.jsap.UnflaggedOption var74 = var51.setList(var72);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var75 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var76 = var75.getRequired();
    boolean var77 = var75.hasProperties();
    boolean var78 = var75.hasProperties();
    com.martiansoftware.jsap.UnflaggedOption var79 = var51.setGreedy(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi!"+ "'", var59.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "hi!"+ "'", var62.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "hi!"+ "'", var63.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);

  }

  public void test253() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.tearDown();
    junit.framework.TestResult var2 = var0.run();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testRequired();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);

  }

  public void test254() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var6 = var4.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var8 = var4.setRequired(false);
    var0.setAllowmultipledeclarations(false);
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var19 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var26 = var25.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var27 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var19, "hi!", true, '4', "", var26);
    java.lang.Character var28 = var27.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var31 = var27.setLongFlag("hi!");
    boolean var32 = var27.isList();
    var0.setRequired(var32);
    com.martiansoftware.jsap.ant.ParserProperty[] var34 = var0.getParserProperties();
    java.lang.String var35 = var0.getId();
    boolean var36 = var0.hasProperties();
    boolean var37 = var0.hasProperties();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + '4'+ "'", var28.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);

  }

  public void test255() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.stringparsers.DateStringParser var15 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var15.setUp();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var26 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var26, "hi!", true, '4', "", var33);
    java.lang.String var35 = var15.getProperty("");
    java.lang.String[] var36 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.JSAPResult var37 = var3.parse(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var41 = var39.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var43 = var39.setRequired(false);
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    java.lang.String var46 = var44.getUsage();
    com.martiansoftware.jsap.FlaggedOption var47 = var43.setUsageName(var46);
    java.lang.Exception var48 = var37.getException(var46);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.net.InetAddress var51 = var37.getInetAddress("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == null);

  }

  public void test256() throws Throwable {

    com.martiansoftware.jsap.stringparsers.InetAddressStringParser var0 = new com.martiansoftware.jsap.stringparsers.InetAddressStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    boolean var21 = var19.messagePrinted();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var34 = var23.getHelp((-1), "hi!");
    java.lang.String var35 = var19.getHelp(100, "hi!");
    java.util.Date[] var36 = var15.getDateArray(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    java.lang.Class[] var55 = var15.getClassArray("");
    com.martiansoftware.jsap.JSAPException var56 = new com.martiansoftware.jsap.JSAPException("");
    java.lang.Object var57 = var0.parse("");
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    java.lang.String var60 = var58.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    boolean var62 = var61.messagePrinted();
    java.lang.String var63 = var61.getHelp();
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    java.lang.String var66 = var64.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var67 = new com.martiansoftware.jsap.SimpleJSAP(var66);
    boolean var68 = var67.messagePrinted();
    java.lang.String var69 = var67.getHelp();
    com.martiansoftware.jsap.ParseException var70 = new com.martiansoftware.jsap.ParseException(var69);
    java.lang.String[] var71 = new java.lang.String[] { var69};
    com.martiansoftware.jsap.JSAPResult var72 = var61.parse(var71);
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var76 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var80 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var81 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var82 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var83 = var72.getClass("hi!");
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var87 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var90 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var91 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var92 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var93 = var92.getShortFlag();
    java.lang.String var94 = var92.getSyntax();
    char[] var95 = var72.getCharArray(var94);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var96 = var0.parse(var94);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var35.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var63.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var69.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "[-4|--hi!]"+ "'", var94.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);

  }

  public void test257() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var4 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var5 = var4.hasProperties();
    boolean var6 = var4.getIslist();
    var0.setRequired(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);

  }

  public void test258() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    var35.setUsage(var38);
    java.lang.String var41 = var35.toString();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var45.unregisterParameter((com.martiansoftware.jsap.Parameter)var47);
    var35.unregisterParameter((com.martiansoftware.jsap.Parameter)var47);
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var59 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var67 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var59, "hi!", true, '4', "", var66);
    com.martiansoftware.jsap.UnspecifiedParameterException var68 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    java.lang.String var69 = var68.getID();
    com.martiansoftware.jsap.Flagged var70 = var35.getByLongFlag(var69);
    java.lang.String var71 = var35.getUsage();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));

  }

  public void test259() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var15 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var16 = var15.getParameter();
    boolean var17 = var15.declaredListSeparator();
    char var18 = var15.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var21 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var20);
    java.lang.String var22 = var20.toString();
    var15.setLongflag(var22);
    java.lang.String[] var24 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize(var22);
    var3.setHelp(var22);
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var30 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var31 = var27.setHelp("hi!");
    var27.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var34 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var51 = var40.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    com.martiansoftware.jsap.UnflaggedOption var53 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var34, var39, var51);
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var22.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "hi!"+ "'", var30.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));

  }

  public void test260() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testSimpleDefault();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test261() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ColorStringParser var0 = com.martiansoftware.jsap.stringparsers.ColorStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    com.martiansoftware.jsap.ant.SwitchConfiguration var29 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var30 = var29.getLongflag();
    var29.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var42 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var49 = var48.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var50 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var42, "hi!", true, '4', "", var49);
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.TestCommandLineTokenizer var52 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var52.test7();
    var52.test2();
    var52.test1();
    var52.test7();
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    java.lang.String var59 = var57.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var60 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    boolean var61 = var60.messagePrinted();
    java.lang.String var62 = var60.getHelp();
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    java.lang.String var65 = var63.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var66 = new com.martiansoftware.jsap.SimpleJSAP(var65);
    boolean var67 = var66.messagePrinted();
    java.lang.String var68 = var66.getHelp();
    com.martiansoftware.jsap.ParseException var69 = new com.martiansoftware.jsap.ParseException(var68);
    java.lang.String[] var70 = new java.lang.String[] { var68};
    com.martiansoftware.jsap.JSAPResult var71 = var60.parse(var70);
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var75 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var79 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var80 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var81 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var82 = var71.getClass("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var83 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var84 = var83.getID();
    junit.framework.Assert.assertNotSame("hi!", (java.lang.Object)var52, (java.lang.Object)var84);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var86 = var0.parse(var84);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var62.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var68.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + "hi!"+ "'", var84.equals("hi!"));

  }

  public void test262() throws Throwable {

    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(100L, 0L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test263() throws Throwable {

    com.martiansoftware.jsap.stringparsers.CharacterStringParser var0 = com.martiansoftware.jsap.stringparsers.CharacterStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var6 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var10 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var11 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var12 = var1.getHelp((-1), "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var13 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));

  }

  public void test264() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var51 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var52 = var48.setHelp("hi!");
    var48.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var55 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    boolean var60 = var59.messagePrinted();
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var72 = var61.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var73 = new com.martiansoftware.jsap.SimpleJSAP(var72);
    com.martiansoftware.jsap.UnflaggedOption var74 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var55, var60, var72);
    com.martiansoftware.jsap.UnflaggedOption var75 = var27.setStringParser((com.martiansoftware.jsap.StringParser)var55);
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var80 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var81 = var77.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var82 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var83 = var82.getID();
    java.lang.String var84 = var82.getID();
    java.lang.String var85 = var82.getID();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var86 = var55.parse(var85);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "hi!"+ "'", var51.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "hi!"+ "'", var80.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + "hi!"+ "'", var83.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + "hi!"+ "'", var84.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi!"+ "'", var85.equals("hi!"));

  }

  public void test265() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var30 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var43 = var0.getProperty("hi!", "hi!");
    var0.tearDown();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));

  }

  public void test266() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    java.lang.String var17 = var4.getIDByLongFlag(var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var27 = var26.getShortFlag();
    char var28 = var26.getShortFlag();
    char var29 = var26.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var34 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var35 = var31.setHelp("hi!");
    var31.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var38 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var39 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var40 = var39.getHelp();
    java.lang.String var41 = var39.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var42 = new com.martiansoftware.jsap.SimpleJSAP(var41);
    boolean var43 = var42.messagePrinted();
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var55 = var44.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var56 = new com.martiansoftware.jsap.SimpleJSAP(var55);
    com.martiansoftware.jsap.UnflaggedOption var57 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var38, var43, var55);
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var61 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var67 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var73 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var74 = var73.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var75 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var67, "hi!", true, '4', "", var74);
    com.martiansoftware.jsap.UnflaggedOption var76 = var57.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var77 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var78 = var76.setStringParser((com.martiansoftware.jsap.StringParser)var77);
    char var79 = var76.getListSeparator();
    com.martiansoftware.jsap.Switch var80 = var26.setShortFlag(var79);
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var83 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var84 = var26.setLongFlag("hi!");
    java.lang.String var85 = var4.getIDByLongFlag("hi!");
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var89 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var92 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var93 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var94 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var95 = var94.getShortFlag();
    char var96 = var94.getShortFlag();
    char var97 = var94.getShortFlag();
    java.lang.String var98 = var4.getIDByShortFlag((java.lang.Character)var97);
    java.util.Iterator var99 = var4.idIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "hi!"+ "'", var34.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var99 == null);

  }

  public void test267() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var12 = new com.martiansoftware.jsap.TestOption();
    int var13 = var12.countTestCases();
    int var14 = var12.countTestCases();
    java.lang.String var15 = com.martiansoftware.util.StringUtils.padRight("hi!", var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    java.lang.String var21 = var19.getHelp();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var23 = var22.getHelp();
    java.lang.String var24 = var22.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var25 = new com.martiansoftware.jsap.SimpleJSAP(var24);
    boolean var26 = var25.messagePrinted();
    java.lang.String var27 = var25.getHelp();
    com.martiansoftware.jsap.ParseException var28 = new com.martiansoftware.jsap.ParseException(var27);
    java.lang.String[] var29 = new java.lang.String[] { var27};
    com.martiansoftware.jsap.JSAPResult var30 = var19.parse(var29);
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var40 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var41 = var30.getClass("hi!");
    java.lang.String var44 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var45 = var30.getURLArray(var44);
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.util.Iterator var48 = var46.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var49 = var46.getIDMap();
    java.lang.String var50 = var46.getHelp();
    java.lang.String var51 = var46.toString();
    java.lang.Object[] var52 = var30.getObjectArray(var51);
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var15, var51);
    java.lang.String var54 = var53.getUsage();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi! "+ "'", var15.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var21.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var27.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "hi!"+ "'", var44.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "[--help]"+ "'", var54.equals("[--help]"));

  }

  public void test268() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test7();
    junit.framework.TestResult var5 = var0.run();
    junit.framework.TestResult var6 = var0.run();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);

  }

  public void test269() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    java.lang.String var25 = var8.getHelp();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var29 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var34 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var35 = var34.getShortFlag();
    char var36 = var34.getShortFlag();
    char var37 = var34.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var42 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var43 = var39.setHelp("hi!");
    var39.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var46 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    boolean var51 = var50.messagePrinted();
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var62 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var63 = var52.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var64 = new com.martiansoftware.jsap.SimpleJSAP(var63);
    com.martiansoftware.jsap.UnflaggedOption var65 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var46, var51, var63);
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var69 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var73 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var74 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var75 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var81 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var82 = var81.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var83 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var75, "hi!", true, '4', "", var82);
    com.martiansoftware.jsap.UnflaggedOption var84 = var65.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var85 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var86 = var84.setStringParser((com.martiansoftware.jsap.StringParser)var85);
    char var87 = var84.getListSeparator();
    com.martiansoftware.jsap.Switch var88 = var34.setShortFlag(var87);
    java.lang.String[] var89 = var88.getDefault();
    java.lang.String var90 = var88.getHelp();
    junit.framework.Assert.assertEquals(var25, var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "hi!"+ "'", var25.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "hi!"+ "'", var42.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + ""+ "'", var82.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + "hi!"+ "'", var90.equals("hi!"));

  }

  public void test270() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ClassStringParser var0 = new com.martiansoftware.jsap.stringparsers.ClassStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var10 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException();
    com.martiansoftware.jsap.JSAPException var14 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var13);
    junit.framework.Assert.assertNotNull("hi!", (java.lang.Object)var13);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var16 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }

  }

  public void test271() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var11 = var0.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch(var11);
    java.lang.String var14 = var13.getHelp();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));

  }

  public void test272() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.ant.SwitchConfiguration var28 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var29 = var28.getLongflag();
    var28.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    java.lang.String var53 = var51.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var54 = new com.martiansoftware.jsap.SimpleJSAP(var53);
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var54.unregisterParameter((com.martiansoftware.jsap.Parameter)var56);
    java.lang.String var58 = var56.getSyntax();
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    java.lang.String var61 = var59.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var62 = new com.martiansoftware.jsap.SimpleJSAP(var61);
    boolean var63 = var62.messagePrinted();
    java.lang.String var64 = var62.getHelp();
    com.martiansoftware.jsap.ParseException var65 = new com.martiansoftware.jsap.ParseException(var64);
    com.martiansoftware.jsap.FlaggedOption var66 = var56.setUsageName(var64);
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var70 = var68.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var72 = var68.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var76 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var80 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var81 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var82 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var72.addDefault("hi!");
    java.lang.String var86 = var72.getSyntax();
    java.lang.String var87 = var72.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("", (java.lang.Object)var64, (java.lang.Object)var72);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "[<hi!>]"+ "'", var58.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var64.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + "[<hi!>]"+ "'", var86.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + "[<hi!>]"+ "'", var87.equals("[<hi!>]"));

  }

  public void test273() throws Throwable {

    com.martiansoftware.jsap.xml.JSAPConfig var0 = new com.martiansoftware.jsap.xml.JSAPConfig();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var4 = var3.getHelp();
    java.lang.String var5 = var3.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var6 = new com.martiansoftware.jsap.SimpleJSAP(var5);
    boolean var7 = var6.messagePrinted();
    java.lang.String var8 = var6.getHelp();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    java.lang.String var14 = var12.getHelp();
    com.martiansoftware.jsap.ParseException var15 = new com.martiansoftware.jsap.ParseException(var14);
    java.lang.String[] var16 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var17 = var6.parse(var16);
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    java.lang.String var20 = var18.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var21 = new com.martiansoftware.jsap.SimpleJSAP(var20);
    float[] var22 = var17.getFloatArray(var20);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var32 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var35 = var17.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var40 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var41 = var37.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var42 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var43 = var42.getID();
    boolean[] var44 = var17.getBooleanArray(var43);
    com.martiansoftware.jsap.SyntaxException var45 = new com.martiansoftware.jsap.SyntaxException(var43);
    java.lang.String var46 = var45.toString();
    var0.setHelp(var46);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var57 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var60 = new com.martiansoftware.jsap.TestOption();
    int var61 = var60.countTestCases();
    int var62 = var60.countTestCases();
    java.lang.String var63 = com.martiansoftware.util.StringUtils.padRight("hi!", var62);
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var71 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var72 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var73 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var79 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var80 = var79.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var81 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var73, "hi!", true, '4', "", var80);
    java.lang.String var82 = var81.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var82);
    com.martiansoftware.jsap.TestOption var84 = new com.martiansoftware.jsap.TestOption();
    int var85 = var84.countTestCases();
    int var86 = var84.countTestCases();
    int var87 = var84.countTestCases();
    java.lang.String var88 = com.martiansoftware.util.StringUtils.padRightToWidth(var82, var87);
    java.lang.String var89 = com.martiansoftware.util.StringUtils.padRight(var63, var87);
    var0.setUsage(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var8.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var14.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!"+ "'", var40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "com.martiansoftware.jsap.SyntaxException: hi!"+ "'", var46.equals("com.martiansoftware.jsap.SyntaxException: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "hi! "+ "'", var63.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + ""+ "'", var80.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var82.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var88.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + "hi!  "+ "'", var89.equals("hi!  "));

  }

  public void test274() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var12 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = var7.setStringParser((com.martiansoftware.jsap.StringParser)var12);
    com.martiansoftware.jsap.ant.SwitchConfiguration var14 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var15 = var14.getLongflag();
    var14.setShortflag('#');
    java.lang.String var18 = var14.getLongflag();
    var14.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var21 = var7.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    java.lang.String[] var40 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.FlaggedOption var41 = var21.setDefault(var40);
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var41);
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    java.lang.String var45 = var43.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var46 = new com.martiansoftware.jsap.SimpleJSAP(var45);
    boolean var47 = var46.messagePrinted();
    java.lang.String var48 = var46.getHelp();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var58 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var59 = var58.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var60 = var46.setScreenWidth(var59);
    boolean var61 = var60.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var65 = var63.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var67 = var63.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var76 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var77 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var67.addDefault("hi!");
    com.martiansoftware.jsap.JSAPResult var81 = var60.parse("hi!");
    java.lang.String var82 = var60.toString();
    java.lang.String[] var83 = new java.lang.String[] { var82};
    com.martiansoftware.jsap.FlaggedOption var84 = var41.setDefault(var83);
    com.martiansoftware.jsap.StringParser var85 = var84.getStringParser();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var48.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "[--help]"+ "'", var82.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);

  }

  public void test275() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntegerStringParser var0 = new com.martiansoftware.jsap.stringparsers.IntegerStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    boolean var29 = var28.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var33 = var31.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var34 = var28.setList(false);
    java.lang.String var35 = var34.getUsageName();
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption(var35);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var37 = var0.parse(var35);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));

  }

  public void test276() throws Throwable {

    java.lang.String var2 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var3 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser("hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "hi!"+ "'", var2.equals("hi!"));

  }

  public void test277() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FloatStringParser var0 = com.martiansoftware.jsap.stringparsers.FloatStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var19 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var27 = var25.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var29 = var25.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var19, var22, false, '4', "hi!");
    java.lang.String var36 = var35.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var37 = var0.parse(var36);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var36.equals("[(-4|--hi!)[:<hi!>]]"));

  }

  public void test278() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testRequired();
    var0.tearDown();
    var0.setUp();

  }

  public void test279() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var9.testSwitchParse();
    var9.testLongFlag();
    var9.testID();
    var9.testSwitchParse();
    var9.testSwitchParse();

  }

  public void test280() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testSimpleDefault();
    var0.setUp();
    var0.testOneLevelDefaults();
    var0.tearDown();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testRequired();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test281() throws Throwable {

    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var26 = var15.getClass("hi!");
    java.lang.String var29 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var30 = var15.getURLArray(var29);
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    java.util.Iterator var33 = var31.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var34 = var31.getIDMap();
    java.lang.String var35 = var31.getHelp();
    java.lang.String var36 = var31.toString();
    java.lang.Object[] var37 = var15.getObjectArray(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var47 = var46.getShortFlag();
    char var48 = var46.getShortFlag();
    java.lang.Character var49 = var46.getShortFlagCharacter();
    java.lang.String var50 = var46.getSyntax();
    long var52 = var15.getLong(var50, (-1L));
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(1L, (-1L));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "hi!"+ "'", var29.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + '4'+ "'", var49.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "[-4|--hi!]"+ "'", var50.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == (-1L));

  }

  public void test282() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.IntSizeStringParser.getParser();
    var0.tearDown();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var3 = var2.getHelp();
    java.lang.String var4 = var2.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var5 = new com.martiansoftware.jsap.SimpleJSAP(var4);
    boolean var6 = var5.messagePrinted();
    java.lang.String var7 = var5.getHelp();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var8 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var9 = var8.getParameter();
    boolean var10 = var8.declaredListSeparator();
    char var11 = var8.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var12 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var13 = var12.hasProperties();
    var8.setRequired(var13);
    junit.framework.Assert.assertFalse(var7, var13);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var16 = var0.parse(var7);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var7.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);

  }

  public void test283() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.String var18 = var17.getSyntax();
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption(var18);
    var19.testLongFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var18.equals("(-4|--)[:<hi!>]"));

  }

  public void test284() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    boolean var40 = var39.messagePrinted();
    java.lang.String var41 = var39.getHelp();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    boolean var46 = var45.messagePrinted();
    java.lang.String var47 = var45.getHelp();
    com.martiansoftware.jsap.ParseException var48 = new com.martiansoftware.jsap.ParseException(var47);
    java.lang.String[] var49 = new java.lang.String[] { var47};
    com.martiansoftware.jsap.JSAPResult var50 = var39.parse(var49);
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    java.util.Iterator var53 = var51.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var54 = var51.getIDMap();
    java.lang.String var55 = var51.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var59 = var50.getByte(var55, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var60 = new com.martiansoftware.jsap.QualifiedSwitch(var55);
    java.net.InetAddress[] var61 = var14.getInetAddressArray(var55);
    junit.framework.Assert.assertEquals(var55, (byte)10, (byte)10);
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    java.lang.String var67 = var65.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var68 = new com.martiansoftware.jsap.SimpleJSAP(var67);
    boolean var69 = var68.messagePrinted();
    junit.framework.Assert.assertFalse(var55, var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var41.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var47.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == false);

  }

  public void test285() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var3 = var2.getHelp();
    java.lang.String var4 = var2.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var5 = new com.martiansoftware.jsap.SimpleJSAP(var4);
    boolean var6 = var5.messagePrinted();
    java.lang.String var7 = var5.getHelp();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var9 = var8.getHelp();
    java.lang.String var10 = var8.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var11 = new com.martiansoftware.jsap.SimpleJSAP(var10);
    boolean var12 = var11.messagePrinted();
    java.lang.String var13 = var11.getHelp();
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException(var13);
    java.lang.String[] var15 = new java.lang.String[] { var13};
    com.martiansoftware.jsap.JSAPResult var16 = var5.parse(var15);
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    java.lang.String var19 = var17.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var20 = new com.martiansoftware.jsap.SimpleJSAP(var19);
    boolean var21 = var20.messagePrinted();
    boolean var22 = var20.messagePrinted();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var29 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var34 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var35 = var24.getHelp((-1), "hi!");
    java.lang.String var36 = var20.getHelp(100, "hi!");
    java.util.Date[] var37 = var16.getDateArray(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var47 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var55 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var47, "hi!", true, '4', "", var54);
    java.lang.Class[] var56 = var16.getClassArray("");
    com.martiansoftware.jsap.TestParser var57 = new com.martiansoftware.jsap.TestParser();
    var57.testParser();
    var57.testParser();
    var57.testMultipleDeclarations();
    java.lang.String var61 = var57.toString();
    com.martiansoftware.jsap.TestFlaggedOption var62 = new com.martiansoftware.jsap.TestFlaggedOption(var61);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var63 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var64 = var63.getParameter();
    boolean var65 = var63.declaredListSeparator();
    char var66 = var63.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var69 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var68);
    java.lang.String var70 = var68.toString();
    var63.setLongflag(var70);
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var73 = var72.getHelp();
    java.lang.String var74 = var72.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var75 = new com.martiansoftware.jsap.SimpleJSAP(var74);
    boolean var76 = var75.messagePrinted();
    java.lang.String var77 = var75.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var78 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var79 = var78.hasProperties();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var80 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var81 = var80.hasProperties();
    java.lang.String var82 = var80.getStringparser();
    boolean var83 = var80.getIslist();
    com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var84 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var77, var79, var83);
    var63.setRequired(var79);
    boolean var86 = var16.getBoolean(var61, var79);
    com.martiansoftware.jsap.stringparsers.FileStringParser var87 = var0.setMustBeDirectory(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var7.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var13.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var36.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "null(com.martiansoftware.jsap.TestParser)"+ "'", var61.equals("null(com.martiansoftware.jsap.TestParser)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var70.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var77.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);

  }

  public void test286() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    java.lang.String var5 = var0.getId();
    com.martiansoftware.jsap.Parameter var6 = var0.getParameter();
    boolean var7 = var0.hasProperties();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var9 = var8.getHelp();
    java.lang.String var10 = var8.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var11 = new com.martiansoftware.jsap.SimpleJSAP(var10);
    boolean var12 = var11.messagePrinted();
    junit.framework.Assert.assertEquals(var7, var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);

  }

  public void test287() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.tearDown();
    var0.tearDown();
    var0.tearDown();
    var0.tearDown();

  }

  public void test288() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var21 = var10.getHelp((-1), "hi!");
    java.lang.String[] var22 = new java.lang.String[] { var21};
    com.martiansoftware.jsap.Switch var23 = var8.setDefault(var22);
    java.lang.Character var24 = var23.getShortFlagCharacter();
    char var25 = var23.getShortFlag();
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)var25);
    com.martiansoftware.jsap.TestOption var27 = new com.martiansoftware.jsap.TestOption();
    int var28 = var27.countTestCases();
    var27.testParsing();
    junit.framework.Assert.assertNotSame((java.lang.Object)var26, (java.lang.Object)var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + '4'+ "'", var24.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);

  }

  public void test289() throws Throwable {

    java.lang.String var3 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var3, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(1.0f, 1.0f, 1.0f);
    java.lang.String var18 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var18, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(1.0f, 10.0f, 10.0f);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "hi!"+ "'", var3.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "hi!"+ "'", var18.equals("hi!"));

  }

  public void test290() throws Throwable {

    com.martiansoftware.jsap.stringparsers.URLStringParser var0 = new com.martiansoftware.jsap.stringparsers.URLStringParser();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var1 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var2 = var1.getParameter();
    java.lang.String var3 = var1.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var8 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var9 = var5.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var10 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var11 = var10.getID();
    java.lang.String var12 = var10.getID();
    var1.setLongflag(var12);
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var14 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException(var12);
    java.lang.String var15 = var14.getID();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var16 = var0.parse(var15);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!"+ "'", var12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi!"+ "'", var15.equals("hi!"));

  }

  public void test291() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    boolean var48 = var14.success();
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    java.lang.String var51 = var49.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    boolean var53 = var52.messagePrinted();
    java.lang.String var54 = var52.getHelp();
    java.lang.String var57 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var57, 10.0f, 10.0f, 1.0f);
    var52.setHelp(var57);
    java.util.Date[] var69 = var14.getDateArray(var57);
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var74 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var75 = var71.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var76 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var77 = var71.setStringParser((com.martiansoftware.jsap.StringParser)var76);
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var81 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var85 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var86 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var87 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var90 = var77.setHelp("hi!");
    java.lang.String var91 = var90.getUsageName();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      short var92 = var14.getShort(var91);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var54.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "hi!"+ "'", var57.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "hi!"+ "'", var74.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + "hi!"+ "'", var91.equals("hi!"));

  }

  public void test292() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.stringparsers.DateStringParser var3 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var3.tearDown();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var7 = var3.getProperty("hi!");
    java.lang.String[] var8 = new java.lang.String[] { "hi!"};
    com.martiansoftware.jsap.JSAPResult var9 = var0.parse(var8);
    java.util.Iterator var10 = var9.getBadParameterIDIterator();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var15 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var16 = var12.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var17 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var18 = var17.getID();
    java.lang.String var19 = var17.getID();
    java.lang.String var20 = var17.getID();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      int var21 = var9.getInt(var20);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi!"+ "'", var15.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "hi!"+ "'", var18.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "hi!"+ "'", var19.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "hi!"+ "'", var20.equals("hi!"));

  }

  public void test293() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var5.addDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var23 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var24 = var20.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var25 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = var20.setStringParser((com.martiansoftware.jsap.StringParser)var25);
    com.martiansoftware.jsap.FlaggedOption var27 = var5.setStringParser((com.martiansoftware.jsap.StringParser)var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var46 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var54 = var52.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var56 = var52.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, var49, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    java.lang.String var65 = var63.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var66 = new com.martiansoftware.jsap.SimpleJSAP(var65);
    boolean var67 = var66.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var68 = var62.setRequired(var67);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var69 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var70 = var69.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var71 = var62.setAllowMultipleDeclarations(var70);
    com.martiansoftware.jsap.FlaggedOption var72 = var5.setAllowMultipleDeclarations(var70);
    java.lang.String var73 = var72.getUsageName();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!"+ "'", var23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "hi!"+ "'", var73.equals("hi!"));

  }

  public void test294() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var6 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var7 = var1.setStringParser((com.martiansoftware.jsap.StringParser)var6);
    boolean var8 = var1.allowMultipleDeclarations();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);

  }

  public void test295() throws Throwable {

    com.martiansoftware.jsap.stringparsers.PackageStringParser var0 = new com.martiansoftware.jsap.stringparsers.PackageStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var26 = var15.getClass("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var38 = var27.getHelp((-1), "hi!");
    double var40 = var15.getDouble(var38, 0.0d);
    com.martiansoftware.jsap.UnflaggedOption var41 = new com.martiansoftware.jsap.UnflaggedOption(var38);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var42 = var0.parse(var38);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 0.0d);

  }

  public void test296() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var38 = var34.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var39 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var40 = var39.getID();
    boolean[] var41 = var14.getBooleanArray(var40);
    com.martiansoftware.jsap.SyntaxException var42 = new com.martiansoftware.jsap.SyntaxException(var40);
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var46 = var44.setRequired(false);
    com.martiansoftware.jsap.defaultsources.PropertyDefaultSource var47 = new com.martiansoftware.jsap.defaultsources.PropertyDefaultSource(var40, false);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var48 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var49 = var48.getParameter();
    boolean var50 = var48.declaredListSeparator();
    char var51 = var48.getShortflag();
    java.lang.String[] var52 = var48.getDefaults();
    boolean var53 = var48.hasProperties();
    junit.framework.Assert.assertEquals(false, var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!"+ "'", var40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);

  }

  public void test297() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.util.Iterator var17 = var15.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var18 = var15.getIDMap();
    java.lang.String var19 = var15.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var23 = var14.getByte(var19, (byte)(-1));
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    java.util.Iterator var27 = var24.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    java.lang.String var30 = var28.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    boolean var32 = var31.messagePrinted();
    boolean var33 = var31.messagePrinted();
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var46 = var35.getHelp((-1), "hi!");
    java.lang.String var47 = var31.getHelp(100, "hi!");
    java.lang.String var48 = var24.getHelp(100);
    java.math.BigInteger[] var49 = var14.getBigIntegerArray(var48);
    com.martiansoftware.jsap.JSAPException var50 = new com.martiansoftware.jsap.JSAPException(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var47.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);

  }

  public void test298() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var9 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var10 = var9.getLongflag();
    var9.setShortflag('#');
    java.lang.String var13 = var9.getLongflag();
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var9.setShortflag('4');
    junit.framework.Assert.assertEquals('4', '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == null);

  }

  public void test299() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test3();
    var0.test9();
    int var6 = var0.countTestCases();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);

  }

  public void test300() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.ant.SwitchConfiguration var28 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var29 = var28.getLongflag();
    var28.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.TestCommandLineTokenizer var51 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var51.test7();
    var51.test2();
    var51.test1();
    var51.test7();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    boolean var60 = var59.messagePrinted();
    java.lang.String var61 = var59.getHelp();
    com.martiansoftware.jsap.JSAP var62 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var63 = var62.getHelp();
    java.lang.String var64 = var62.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var65 = new com.martiansoftware.jsap.SimpleJSAP(var64);
    boolean var66 = var65.messagePrinted();
    java.lang.String var67 = var65.getHelp();
    com.martiansoftware.jsap.ParseException var68 = new com.martiansoftware.jsap.ParseException(var67);
    java.lang.String[] var69 = new java.lang.String[] { var67};
    com.martiansoftware.jsap.JSAPResult var70 = var59.parse(var69);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var74 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var78 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var79 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var80 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var81 = var70.getClass("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var83 = var82.getID();
    junit.framework.Assert.assertNotSame("hi!", (java.lang.Object)var51, (java.lang.Object)var83);
    var51.test1();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var61.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var67.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + "hi!"+ "'", var83.equals("hi!"));

  }

  public void test301() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var51 = var27.setList(false);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var61 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var69 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var61, "hi!", true, '4', "", var68);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var70 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    java.lang.String var73 = var71.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var74 = new com.martiansoftware.jsap.SimpleJSAP(var73);
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var78 = var76.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var80 = var76.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var85 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var86 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, var73, false, '4', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var87 = var51.setListSeparator('4');
    java.lang.String var88 = var87.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + "<>"+ "'", var88.equals("<>"));

  }

  public void test302() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var7 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var8 = var4.setHelp("hi!");
    var4.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var11 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var12 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var13 = var12.getHelp();
    java.lang.String var14 = var12.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var15 = new com.martiansoftware.jsap.SimpleJSAP(var14);
    boolean var16 = var15.messagePrinted();
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var28 = var17.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var29 = new com.martiansoftware.jsap.SimpleJSAP(var28);
    com.martiansoftware.jsap.UnflaggedOption var30 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var11, var16, var28);
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var40 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var48 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var40, "hi!", true, '4', "", var47);
    com.martiansoftware.jsap.UnflaggedOption var49 = var30.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var53 = var51.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var54 = var30.setList(false);
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var62 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var63 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var64 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var70 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var71 = var70.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var72 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var64, "hi!", true, '4', "", var71);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var73 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var74 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var75 = var74.getHelp();
    java.lang.String var76 = var74.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var77 = new com.martiansoftware.jsap.SimpleJSAP(var76);
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var81 = var79.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var83 = var79.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var85 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var88 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var89 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var73, var76, false, '4', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var90 = var54.setListSeparator('4');
    com.martiansoftware.jsap.UnknownFlagException var91 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var0.setShortflag('4');
    boolean var93 = var0.declaredListSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == false);

  }

  public void test303() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var54 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    java.lang.String var57 = var55.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var58 = new com.martiansoftware.jsap.SimpleJSAP(var57);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var62 = var60.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var64 = var60.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var69 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var70 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, var57, false, '4', "hi!");
    java.lang.Exception[] var71 = var14.getExceptionArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var75 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var79 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var80 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var81 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var84 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var85 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var86 = var85.getSyntax();
    com.martiansoftware.jsap.ant.SwitchConfiguration var87 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var88 = var87.getLongflag();
    var87.setShortflag('#');
    java.lang.String var91 = var87.getLongflag();
    com.martiansoftware.jsap.UnknownFlagException var93 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var87.setShortflag('4');
    char var95 = var87.getShortflag();
    char var96 = var14.getChar(var86, var95);
    junit.framework.Assert.assertNotNull((java.lang.Object)var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + "[[:<hi!>]]"+ "'", var86.equals("[[:<hi!>]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == '4');

  }

  public void test304() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DoubleStringParser var0 = new com.martiansoftware.jsap.stringparsers.DoubleStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var26 = var15.getClass("hi!");
    java.lang.String var29 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var30 = var15.getURLArray(var29);
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    java.util.Iterator var33 = var31.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var34 = var31.getIDMap();
    java.lang.String var35 = var31.getHelp();
    java.lang.String var36 = var31.toString();
    java.lang.Object[] var37 = var15.getObjectArray(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var47 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var55 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var47, "hi!", true, '4', "", var54);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var56 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    java.lang.String var59 = var57.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var60 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var64 = var62.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var66 = var62.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var71 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var72 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var56, var59, false, '4', "hi!");
    java.lang.String var75 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var76 = com.martiansoftware.util.StringUtils.wrapToList(var59, 1);
    java.lang.String var77 = var15.getString(var59);
    com.martiansoftware.jsap.TestFlaggedOption var78 = new com.martiansoftware.jsap.TestFlaggedOption(var59);
    java.lang.String var79 = var78.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var80 = var0.parse(var79);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "hi!"+ "'", var29.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "hi!"+ "'", var75.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "(com.martiansoftware.jsap.TestFlaggedOption)"+ "'", var79.equals("(com.martiansoftware.jsap.TestFlaggedOption)"));

  }

  public void test305() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var13 = var12.getShortFlag();
    char var14 = var12.getShortFlag();
    java.lang.Character var15 = var12.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var25 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var28 = var12.setDefault("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var29 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var30 = var29.getParameter();
    boolean var31 = var29.declaredListSeparator();
    char var32 = var29.getShortflag();
    char var33 = var29.getShortflag();
    com.martiansoftware.jsap.Switch var34 = var12.setShortFlag(var33);
    java.lang.String var35 = var34.getSyntax();
    java.lang.String var36 = var34.getSyntax();
    com.martiansoftware.jsap.FlaggedOption var37 = var1.setDefault(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + '4'+ "'", var15.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "[--hi!]"+ "'", var35.equals("[--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "[--hi!]"+ "'", var36.equals("[--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);

  }

  public void test306() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    var0.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var0.setShortflag('4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var19 = var18.getShortFlag();
    var0.setShortflag(var19);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var24 = var22.setRequired(false);
    java.lang.String var25 = var22.getID();
    var0.setId(var25);
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var31 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var32 = var28.setHelp("hi!");
    var28.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var35 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    boolean var40 = var39.messagePrinted();
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var46 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var50 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var52 = var41.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var52);
    com.martiansoftware.jsap.UnflaggedOption var54 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var35, var40, var52);
    boolean var55 = var54.isGreedy();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var25, var55);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "hi!"+ "'", var25.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "hi!"+ "'", var31.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);

  }

  public void test307() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var6 = var4.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var8 = var4.setRequired(false);
    var0.setAllowmultipledeclarations(false);
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var19 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var26 = var25.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var27 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var19, "hi!", true, '4', "", var26);
    java.lang.Character var28 = var27.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var31 = var27.setLongFlag("hi!");
    boolean var32 = var27.isList();
    var0.setRequired(var32);
    com.martiansoftware.jsap.ant.ParserProperty[] var34 = var0.getParserProperties();
    java.lang.String var35 = var0.getId();
    boolean var36 = var0.hasProperties();
    com.martiansoftware.jsap.Parameter var37 = var0.getParameter();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + '4'+ "'", var28.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);

  }

  public void test308() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var6 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var5);
    java.lang.String var7 = var5.toString();
    var0.setLongflag(var7);
    com.martiansoftware.jsap.stringparsers.DateStringParser var9 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var14 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var15 = var11.setHelp("hi!");
    var11.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var18 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    boolean var23 = var22.messagePrinted();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var29 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var34 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var35 = var24.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var36 = new com.martiansoftware.jsap.SimpleJSAP(var35);
    com.martiansoftware.jsap.UnflaggedOption var37 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var18, var23, var35);
    com.martiansoftware.jsap.ant.SwitchConfiguration var38 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var39 = var38.getLongflag();
    var38.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var59 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var51, "hi!", true, '4', "", var58);
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var9.setProperty("", "hi!");
    var0.setLongflag("");
    com.martiansoftware.jsap.ant.ParserProperty[] var72 = var0.getParserProperties();
    char var73 = var0.getShortflag();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var74 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var75 = var74.hasProperties();
    java.lang.String var76 = var74.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var77 = new com.martiansoftware.jsap.ant.ParserProperty();
    var74.addConfiguredProperty(var77);
    java.lang.String var79 = var77.getName();
    java.lang.String var80 = var77.getValue();
    var0.addConfiguredProperty(var77);
    char var82 = var0.getShortflag();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var7.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!"+ "'", var14.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == '\u0000');

  }

  public void test309() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.tearDown();
    var0.tearDown();
    var0.setUp();
    var0.testSimpleDefault();
    var0.testDefaults2();
    var0.testDefaults2();

  }

  public void test310() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var57 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var65 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var57, "hi!", true, '4', "", var64);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var66 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    java.lang.String var69 = var67.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var70 = new com.martiansoftware.jsap.SimpleJSAP(var69);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var74 = var72.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var76 = var72.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var78 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var81 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var66, var69, false, '4', "hi!");
    java.lang.String var85 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var86 = com.martiansoftware.util.StringUtils.wrapToList(var69, 1);
    java.util.List var88 = com.martiansoftware.util.StringUtils.wrapToList(var69, 1);
    char[] var89 = var14.getCharArray(var69);
    com.martiansoftware.jsap.TestUsageString var90 = new com.martiansoftware.jsap.TestUsageString(var69);
    var90.testUsage2();
    var90.testUsage2();
    var90.testUsage2();
    com.martiansoftware.jsap.JSAP var94 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var95 = var94.getHelp();
    java.lang.String var96 = var94.getUsage();
    var90.setName(var96);
    var90.testUsage2();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi!"+ "'", var85.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + ""+ "'", var95.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + ""+ "'", var96.equals(""));

  }

  public void test311() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var16 = var15.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var17 = var3.setScreenWidth(var16);
    java.lang.String var18 = var17.getUsage();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var22 = var20.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var24 = var20.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var34 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var24.addDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var42 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var43 = var39.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var44 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var45 = var39.setStringParser((com.martiansoftware.jsap.StringParser)var44);
    com.martiansoftware.jsap.FlaggedOption var46 = var24.setStringParser((com.martiansoftware.jsap.StringParser)var44);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var50 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var54 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var55 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var56 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var62 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var63 = var62.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var64 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var56, "hi!", true, '4', "", var63);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var65 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    java.lang.String var68 = var66.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var69 = new com.martiansoftware.jsap.SimpleJSAP(var68);
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var73 = var71.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var75 = var71.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var77 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var80 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var81 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var65, var68, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var82 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var83 = var82.getHelp();
    java.lang.String var84 = var82.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var85 = new com.martiansoftware.jsap.SimpleJSAP(var84);
    boolean var86 = var85.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var87 = var81.setRequired(var86);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var88 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var89 = var88.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var90 = var81.setAllowMultipleDeclarations(var89);
    com.martiansoftware.jsap.FlaggedOption var91 = var24.setAllowMultipleDeclarations(var89);
    java.lang.String var92 = var24.getUsage();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var17.registerParameter((com.martiansoftware.jsap.Parameter)var24);
      fail("Expected exception of type com.martiansoftware.jsap.JSAPException");
    } catch (com.martiansoftware.jsap.JSAPException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "[--help]"+ "'", var18.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "hi!"+ "'", var42.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + ""+ "'", var83.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + ""+ "'", var84.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + "[<hi!>]"+ "'", var92.equals("[<hi!>]"));

  }

  public void test312() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    java.lang.String var12 = var8.getSyntax();
    java.lang.String var15 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.lang.String var16 = com.martiansoftware.util.StringUtils.padRight(var12, 1);
    java.lang.String var17 = com.martiansoftware.util.StringUtils.noNull(var12);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var20 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var21 = var20.getLongflag();
    var20.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var24 = var19.setListSeparator('#');
    java.lang.Character var25 = var24.getShortFlagCharacter();
    java.lang.String var26 = var24.getUsage();
    boolean var27 = var24.allowMultipleDeclarations();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var17, var27);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "[-4|--hi!]"+ "'", var12.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi!"+ "'", var15.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "[-4|--hi!] "+ "'", var16.equals("[-4|--hi!] "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "[-4|--hi!]"+ "'", var17.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "[<hi!>]"+ "'", var26.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);

  }

  public void test313() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    var0.setUp();
    boolean var2 = var0.mustBeDirectory();
    var0.tearDown();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);

  }

  public void test314() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigDecimalStringParser var0 = new com.martiansoftware.jsap.stringparsers.BigDecimalStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.stringparsers.FileStringParser var3 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var3.tearDown();
    var3.setUp();
    boolean var6 = var3.mustExist();
    var3.tearDown();
    boolean var8 = var3.mustBeFile();
    com.martiansoftware.jsap.FlaggedOption var9 = var2.setList(var8);
    java.lang.String var10 = var2.getID();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var11 = var0.parse(var10);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));

  }

  public void test315() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    java.lang.String var28 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var29 = var14.getURLArray(var28);
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.util.Iterator var32 = var30.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var33 = var30.getIDMap();
    java.lang.String var34 = var30.getHelp();
    java.lang.String var35 = var30.toString();
    java.lang.Object[] var36 = var14.getObjectArray(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var46 = var45.getShortFlag();
    char var47 = var45.getShortFlag();
    java.lang.Character var48 = var45.getShortFlagCharacter();
    java.lang.String var49 = var45.getSyntax();
    long var51 = var14.getLong(var49, (-1L));
    boolean var52 = var14.success();
    java.util.Iterator var53 = var14.getErrorMessageIterator();
    com.martiansoftware.jsap.ant.ParserProperty var54 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var59 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var60 = var56.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var61 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var54.setValue("hi!");
    java.awt.Color var63 = var14.getColor("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + '4'+ "'", var48.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "[-4|--hi!]"+ "'", var49.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == (-1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi!"+ "'", var59.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == null);

  }

  public void test316() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    boolean var1 = var0.mustExist();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var3 = var2.getHelp();
    java.lang.String var4 = var2.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var5 = new com.martiansoftware.jsap.SimpleJSAP(var4);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var6 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var18 = var7.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var22 = var20.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var32 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var40 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var32, "hi!", true, '4', "", var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption(var4, (com.martiansoftware.jsap.StringParser)var6, var18, false, '4', "hi!");
    java.lang.Object var60 = var0.parse(var4);
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var65 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var69 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var70 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var71 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var77 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var78 = var77.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var79 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var71, "hi!", true, '4', "", var78);
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var83 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var86 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var87 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var88 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var89 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var89.testSwitchParse();
    var89.testLongFlag();
    var89.testID();
    java.lang.String var93 = var89.getName();
    var0.setProperty("", var93);
    boolean var95 = var0.mustBeFile();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + "hi!"+ "'", var93.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == false);

  }

  public void test317() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var5.addDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var23 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var24 = var20.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var25 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = var20.setStringParser((com.martiansoftware.jsap.StringParser)var25);
    com.martiansoftware.jsap.FlaggedOption var27 = var5.setStringParser((com.martiansoftware.jsap.StringParser)var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var46 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var54 = var52.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var56 = var52.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, var49, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    java.lang.String var65 = var63.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var66 = new com.martiansoftware.jsap.SimpleJSAP(var65);
    boolean var67 = var66.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var68 = var62.setRequired(var67);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var69 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var70 = var69.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var71 = var62.setAllowMultipleDeclarations(var70);
    com.martiansoftware.jsap.FlaggedOption var72 = var5.setAllowMultipleDeclarations(var70);
    boolean var73 = var5.required();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!"+ "'", var23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);

  }

  public void test318() throws Throwable {

    com.martiansoftware.jsap.xml.JSAPConfig var0 = new com.martiansoftware.jsap.xml.JSAPConfig();
    java.lang.String var1 = var0.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var2 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    java.lang.String var3 = var2.getStringparser();
    com.martiansoftware.jsap.Defaults var4 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var5 = var4.idIterator();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var17 = var6.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.lang.String[] var36 = new java.lang.String[] { var34};
    var4.addDefault(var17, var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var47 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var55 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var56 = var52.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var57 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var58 = var57.getID();
    java.lang.String[] var59 = new java.lang.String[] { var58};
    var4.addDefault("hi!", var59);
    var2.setId("hi!");
    var0.setUsage("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    java.lang.String var66 = var64.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var67 = new com.martiansoftware.jsap.SimpleJSAP(var66);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var67.unregisterParameter((com.martiansoftware.jsap.Parameter)var69);
    boolean var71 = var67.messagePrinted();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var72 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser("hi!", var71);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!"+ "'", var55.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "hi!"+ "'", var58.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);

  }

  public void test319() throws Throwable {

    com.martiansoftware.jsap.Defaults var0 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var1 = var0.idIterator();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var13 = var2.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var17 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var21 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var22 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var23 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var30 = var29.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var31 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var23, "hi!", true, '4', "", var30);
    java.lang.String[] var32 = new java.lang.String[] { var30};
    var0.addDefault(var13, var32);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var43 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var51 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var52 = var48.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var53 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var54 = var53.getID();
    java.lang.String[] var55 = new java.lang.String[] { var54};
    var0.addDefault("hi!", var55);
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    java.lang.String var59 = var57.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var60 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    boolean var61 = var60.messagePrinted();
    java.lang.String var62 = var60.getHelp();
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    java.lang.String var65 = var63.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var66 = new com.martiansoftware.jsap.SimpleJSAP(var65);
    boolean var67 = var66.messagePrinted();
    java.lang.String var68 = var66.getHelp();
    com.martiansoftware.jsap.ParseException var69 = new com.martiansoftware.jsap.ParseException(var68);
    java.lang.String[] var70 = new java.lang.String[] { var68};
    com.martiansoftware.jsap.JSAPResult var71 = var60.parse(var70);
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var75 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var79 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var80 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var81 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var87 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var88 = var87.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var89 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var81, "hi!", true, '4', "", var88);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var90 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var91 = new java.lang.Object[] { var90};
    java.lang.Object[] var92 = var71.getObjectArray(var88, var91);
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var93 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException(var88);
    com.martiansoftware.jsap.UnknownFlagException var94 = new com.martiansoftware.jsap.UnknownFlagException(var88);
    java.lang.String[] var95 = var0.getDefault(var88);
    java.util.Iterator var96 = var0.idIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "hi!"+ "'", var51.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "hi!"+ "'", var54.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var62.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var68.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + ""+ "'", var88.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);

  }

  public void test320() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    boolean var3 = var0.mustBeFile();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);

  }

  public void test321() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    boolean var3 = var0.declaredListSeparator();
    com.martiansoftware.jsap.ant.SwitchConfiguration var4 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var5 = var4.getLongflag();
    var4.setShortflag('#');
    java.lang.String var8 = var4.getLongflag();
    java.lang.String var9 = var4.getId();
    com.martiansoftware.jsap.Parameter var10 = var4.getParameter();
    boolean var11 = var4.hasProperties();
    var0.setGreedy(var11);
    boolean var13 = var0.getIslist();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);

  }

  public void test322() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var13 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var21 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var13, "hi!", true, '4', "", var20);
    java.lang.String var22 = var21.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var22);
    boolean var24 = var3.idExists(var22);
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var25 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser(var22);
    var25.testByName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var22.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);

  }

  public void test323() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String[] var19 = var18.getDefault();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var23.unregisterParameter((com.martiansoftware.jsap.Parameter)var25);
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var36 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var44 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var36, "hi!", true, '4', "", var43);
    java.lang.String var45 = var44.getSyntax();
    java.lang.Character var46 = var44.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var47 = var25.setListSeparator((char)var46);
    com.martiansoftware.jsap.FlaggedOption var48 = var18.setShortFlag((char)var46);
    com.martiansoftware.jsap.StringParser var49 = var18.getStringParser();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var45.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + '4'+ "'", var46.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == null);

  }

  public void test324() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    java.lang.String var4 = var1.getID();
    java.lang.String[] var5 = var1.getDefault();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    var7.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var14 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var31 = var20.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    com.martiansoftware.jsap.UnflaggedOption var33 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var14, var19, var31);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var43 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var51 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var43, "hi!", true, '4', "", var50);
    com.martiansoftware.jsap.UnflaggedOption var52 = var33.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var53 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var54 = var52.setStringParser((com.martiansoftware.jsap.StringParser)var53);
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var62 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var63 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var64 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var70 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var71 = var70.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var72 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var64, "hi!", true, '4', "", var71);
    java.lang.String var73 = var72.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var73);
    com.martiansoftware.jsap.UnflaggedOption var75 = var52.setUsageName(var73);
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var80 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var81 = var77.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var82 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var83 = var77.setStringParser((com.martiansoftware.jsap.StringParser)var82);
    com.martiansoftware.jsap.ant.SwitchConfiguration var84 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var85 = var84.getLongflag();
    var84.setShortflag('#');
    java.lang.String var88 = var84.getLongflag();
    var84.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var91 = var77.setListSeparator('#');
    com.martiansoftware.jsap.UnflaggedOption var92 = var52.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var93 = var1.setShortFlag('#');
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var94 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var95 = var94.hasProperties();
    java.lang.String var96 = var94.getStringparser();
    boolean var97 = var94.getIslist();
    com.martiansoftware.jsap.FlaggedOption var98 = var1.setList(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var73.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "hi!"+ "'", var80.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var98 == null);

  }

  public void test325() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var6 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var7 = var1.setStringParser((com.martiansoftware.jsap.StringParser)var6);
    com.martiansoftware.jsap.ant.SwitchConfiguration var8 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var9 = var8.getLongflag();
    var8.setShortflag('#');
    java.lang.String var12 = var8.getLongflag();
    var8.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var15 = var1.setListSeparator('#');
    java.lang.String var16 = var1.getLongFlag();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var17 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var18 = var17.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var19 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var20 = var19.getLongflag();
    var19.setShortflag('#');
    java.lang.String var23 = var19.getLongflag();
    char var24 = var19.getShortflag();
    var17.setShortflag(var24);
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var30 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var31 = var27.setHelp("hi!");
    var27.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var34 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var51 = var40.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    com.martiansoftware.jsap.UnflaggedOption var53 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var34, var39, var51);
    boolean var54 = var53.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var58 = var56.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var59 = var53.setList(false);
    java.lang.String var60 = var59.getUsageName();
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var62 = var61.getHelp();
    java.lang.String var63 = var61.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var64 = new com.martiansoftware.jsap.SimpleJSAP(var63);
    boolean var65 = var64.messagePrinted();
    java.lang.String var66 = var64.getHelp();
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    java.lang.String var69 = var67.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var70 = new com.martiansoftware.jsap.SimpleJSAP(var69);
    boolean var71 = var70.messagePrinted();
    java.lang.String var72 = var70.getHelp();
    com.martiansoftware.jsap.ParseException var73 = new com.martiansoftware.jsap.ParseException(var72);
    java.lang.String[] var74 = new java.lang.String[] { var72};
    com.martiansoftware.jsap.JSAPResult var75 = var64.parse(var74);
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    java.lang.String var78 = var76.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var79 = new com.martiansoftware.jsap.SimpleJSAP(var78);
    float[] var80 = var75.getFloatArray(var78);
    boolean var81 = var75.success();
    com.martiansoftware.jsap.UnflaggedOption var82 = var59.setList(var81);
    var17.setAllowmultipledeclarations(var81);
    boolean var84 = var17.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var85 = var1.setAllowMultipleDeclarations(var84);
    java.lang.String var86 = var85.getUsage();
    com.martiansoftware.jsap.JSAP var87 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var88 = var87.getHelp();
    java.lang.String var89 = var87.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var90 = new com.martiansoftware.jsap.SimpleJSAP(var89);
    com.martiansoftware.jsap.FlaggedOption var92 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var90.unregisterParameter((com.martiansoftware.jsap.Parameter)var92);
    java.lang.String var94 = var90.getUsage();
    java.lang.String var97 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.SimpleJSAP var98 = var90.setScreenWidth(1);
    java.util.List var99 = com.martiansoftware.util.StringUtils.wrapToList(var86, 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "hi!"+ "'", var30.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var66.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var72.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + "[<hi!>]"+ "'", var86.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + ""+ "'", var88.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + ""+ "'", var89.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "[--help]"+ "'", var94.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var97 + "' != '" + "hi!"+ "'", var97.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var98 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var99 == null);

  }

  public void test326() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var1 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var2 = var1.getParameter();
    boolean var3 = var1.declaredListSeparator();
    boolean var4 = var1.getIslist();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var9 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var10 = var6.setHelp("hi!");
    var6.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var13 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var15 = var14.getHelp();
    java.lang.String var16 = var14.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var17 = new com.martiansoftware.jsap.SimpleJSAP(var16);
    boolean var18 = var17.messagePrinted();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var30 = var19.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    com.martiansoftware.jsap.UnflaggedOption var32 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var13, var18, var30);
    com.martiansoftware.jsap.ant.SwitchConfiguration var33 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var34 = var33.getLongflag();
    var33.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.Switch var55 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var1.setListseparator('#');
    com.martiansoftware.jsap.ant.DefaultValue var57 = new com.martiansoftware.jsap.ant.DefaultValue();
    java.lang.String var58 = var57.getValue();
    var1.addConfiguredDefault(var57);
    var0.addConfiguredDefault(var57);
    com.martiansoftware.jsap.ant.SwitchConfiguration var61 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var62 = var61.getLongflag();
    com.martiansoftware.jsap.ant.SwitchConfiguration var63 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var64 = var63.getLongflag();
    com.martiansoftware.jsap.ant.DefaultValue var65 = new com.martiansoftware.jsap.ant.DefaultValue();
    var63.addConfiguredDefault(var65);
    var61.addConfiguredDefault(var65);
    var0.addConfiguredDefault(var65);
    boolean var69 = var0.hasProperties();
    java.lang.String var70 = var0.getLongflag();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == null);

  }

  public void test327() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var2 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    var2.testLongFlag();
    var2.testShortFlag();
    var2.testLongFlag();
    var2.testShortFlag();

  }

  public void test328() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    com.martiansoftware.jsap.Parameter var2 = var0.getParameter();
    boolean var3 = var0.hasProperties();
    boolean var4 = var0.getRequired();
    com.martiansoftware.jsap.ant.ParserProperty var5 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var12 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var5.setValue("hi!");
    var0.addConfiguredProperty(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);

  }

  public void test329() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    boolean var1 = var0.mustExist();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var3 = var2.getHelp();
    java.lang.String var4 = var2.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var5 = new com.martiansoftware.jsap.SimpleJSAP(var4);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var6 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var18 = var7.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var22 = var20.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var32 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var40 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var32, "hi!", true, '4', "", var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption(var4, (com.martiansoftware.jsap.StringParser)var6, var18, false, '4', "hi!");
    java.lang.Object var60 = var0.parse(var4);
    var0.setUp();
    boolean var62 = var0.mustExist();
    boolean var63 = var0.mustExist();
    junit.framework.Assert.assertFalse(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);

  }

  public void test330() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var33 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var34 = var30.setHelp("hi!");
    var30.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var37 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    java.lang.String var40 = var38.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var41 = new com.martiansoftware.jsap.SimpleJSAP(var40);
    boolean var42 = var41.messagePrinted();
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var54 = var43.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var55 = new com.martiansoftware.jsap.SimpleJSAP(var54);
    com.martiansoftware.jsap.UnflaggedOption var56 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var37, var42, var54);
    com.martiansoftware.jsap.ant.SwitchConfiguration var57 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var58 = var57.getLongflag();
    var57.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var70 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var78 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, "hi!", true, '4', "", var77);
    com.martiansoftware.jsap.Switch var79 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var80 = var27.setUsageName("hi!");
    com.martiansoftware.jsap.JSAP var81 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var86 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var90 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var91 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var92 = var81.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var93 = new com.martiansoftware.jsap.SimpleJSAP(var92);
    com.martiansoftware.jsap.JSAPException var94 = new com.martiansoftware.jsap.JSAPException(var92);
    com.martiansoftware.jsap.UnflaggedOption var95 = var27.setUsageName(var92);
    com.martiansoftware.jsap.UnknownFlagException var96 = new com.martiansoftware.jsap.UnknownFlagException(var92);
    com.martiansoftware.jsap.TestFlaggedOption var97 = new com.martiansoftware.jsap.TestFlaggedOption(var92);
    var97.testShortFlag();
    var97.testShortFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "hi!"+ "'", var33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + ""+ "'", var92.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);

  }

  public void test331() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var51 = var49.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var53 = var49.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var62 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var63 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var53.addDefault("hi!");
    java.lang.String var70 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var70, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(1.0f, 1.0f, 1.0f);
    float var83 = var14.getFloat("hi!", 1.0f);
    java.lang.String var85 = com.martiansoftware.util.StringUtils.padRight("hi!", 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "hi!"+ "'", var70.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1.0f);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi!"+ "'", var85.equals("hi!"));

  }

  public void test332() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test3();
    var0.test7();
    var0.test7();
    var0.test8();
    var0.test5();

  }

  public void test333() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    java.lang.String[] var22 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var32 = var0.getProperty("", "hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));

  }

  public void test334() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String[] var19 = var18.getDefault();
    com.martiansoftware.jsap.StringParser var20 = var18.getStringParser();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    boolean var25 = var24.messagePrinted();
    java.lang.String var26 = var24.getHelp();
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var28 = var27.getHelp();
    java.lang.String var29 = var27.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var30 = new com.martiansoftware.jsap.SimpleJSAP(var29);
    boolean var31 = var30.messagePrinted();
    java.lang.String var32 = var30.getHelp();
    com.martiansoftware.jsap.ParseException var33 = new com.martiansoftware.jsap.ParseException(var32);
    java.lang.String[] var34 = new java.lang.String[] { var32};
    com.martiansoftware.jsap.JSAPResult var35 = var24.parse(var34);
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    float[] var40 = var35.getFloatArray(var38);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var50 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var53 = var35.getCharArray("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    java.lang.String var56 = var54.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var57 = new com.martiansoftware.jsap.SimpleJSAP(var56);
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var57.unregisterParameter((com.martiansoftware.jsap.Parameter)var59);
    com.martiansoftware.jsap.TestOption var61 = new com.martiansoftware.jsap.TestOption();
    int var62 = var61.countTestCases();
    int var63 = var61.countTestCases();
    int var64 = var61.countTestCases();
    java.lang.String var65 = var57.getHelp(var64);
    char[] var66 = var35.getCharArray(var65);
    com.martiansoftware.jsap.Parameter var67 = var18.setHelp(var65);
    char var68 = var18.getShortFlag();
    java.lang.String var69 = var18.getID();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var26.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var32.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var65.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));

  }

  public void test335() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    java.lang.String var17 = var4.getIDByLongFlag(var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var36 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var44 = var42.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var46 = var42.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var52 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var36, var39, false, '4', "hi!");
    java.lang.String var55 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var56 = com.martiansoftware.util.StringUtils.wrapToList(var39, 1);
    java.util.List var58 = com.martiansoftware.util.StringUtils.wrapToList(var39, 1);
    com.martiansoftware.jsap.SyntaxException var59 = new com.martiansoftware.jsap.SyntaxException(var39);
    boolean var60 = var4.idExists(var39);
    java.lang.String var62 = var4.getIDByShortFlag((java.lang.Character)'a');
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'a');
    java.lang.String var64 = var63.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!"+ "'", var55.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag 'a'."+ "'", var64.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag 'a'."));

  }

  public void test336() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    var35.setUsage(var38);
    java.lang.String var41 = var35.toString();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var45.unregisterParameter((com.martiansoftware.jsap.Parameter)var47);
    var35.unregisterParameter((com.martiansoftware.jsap.Parameter)var47);
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var59 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var62 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var63 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String[] var64 = new java.lang.String[] { "hi!"};
    com.martiansoftware.jsap.JSAPResult var65 = var35.parse(var64);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var66 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var67 = var66.getParameter();
    boolean var68 = var66.declaredListSeparator();
    char var69 = var66.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var70 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var71 = var70.hasProperties();
    var66.setRequired(var71);
    char var73 = var66.getShortflag();
    com.martiansoftware.jsap.Flagged var74 = var35.getByShortFlag(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == null);

  }

  public void test337() throws Throwable {

    com.martiansoftware.jsap.TestParser var0 = new com.martiansoftware.jsap.TestParser();
    var0.testMultipleDeclarations();

  }

  public void test338() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.ColorStringParser var18 = com.martiansoftware.jsap.stringparsers.ColorStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var28 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var35 = var34.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var36 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var28, "hi!", true, '4', "", var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var55 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var63 = var61.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var65 = var61.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var71 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var55, var58, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var73 = var72.getHelp();
    java.lang.String var74 = var72.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var75 = new com.martiansoftware.jsap.SimpleJSAP(var74);
    boolean var76 = var75.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var80 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var84 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var85 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var86 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var92 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var93 = var92.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var94 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var86, "hi!", true, '4', "", var93);
    com.martiansoftware.jsap.UnflaggedOption var95 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var18, "hi!", false, var76, "hi!");
    com.martiansoftware.jsap.FlaggedOption var96 = new com.martiansoftware.jsap.FlaggedOption("");
    boolean var97 = var96.allowMultipleDeclarations();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ""+ "'", var93.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);

  }

  public void test339() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getStringparser();
    char var3 = var0.getListseparator();
    boolean var4 = var0.hasProperties();
    com.martiansoftware.jsap.ant.ParserProperty[] var5 = var0.getParserProperties();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var9.unregisterParameter((com.martiansoftware.jsap.Parameter)var11);
    com.martiansoftware.jsap.TestOption var13 = new com.martiansoftware.jsap.TestOption();
    int var14 = var13.countTestCases();
    int var15 = var13.countTestCases();
    int var16 = var13.countTestCases();
    java.lang.String var17 = var9.getHelp(var16);
    com.martiansoftware.jsap.TestUsageString var18 = new com.martiansoftware.jsap.TestUsageString(var17);
    var0.setStringparser(var17);
    java.lang.String var20 = var0.getLongflag();
    com.martiansoftware.jsap.ant.SwitchConfiguration var21 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var22 = var21.getLongflag();
    com.martiansoftware.jsap.ant.SwitchConfiguration var23 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var24 = var23.getLongflag();
    com.martiansoftware.jsap.ant.DefaultValue var25 = new com.martiansoftware.jsap.ant.DefaultValue();
    var23.addConfiguredDefault(var25);
    var21.addConfiguredDefault(var25);
    com.martiansoftware.jsap.stringparsers.DateStringParser var28 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var28.tearDown();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var32 = var28.getProperty("hi!");
    var25.addText("hi!");
    var0.addConfiguredDefault(var25);
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var39 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var40 = var36.setHelp("hi!");
    var36.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var43 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    java.lang.String var46 = var44.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var47 = new com.martiansoftware.jsap.SimpleJSAP(var46);
    boolean var48 = var47.messagePrinted();
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var60 = var49.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    com.martiansoftware.jsap.UnflaggedOption var62 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var43, var48, var60);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var72 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var78 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var79 = var78.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var80 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var72, "hi!", true, '4', "", var79);
    com.martiansoftware.jsap.UnflaggedOption var81 = var62.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var82 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var83 = var81.setStringParser((com.martiansoftware.jsap.StringParser)var82);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var84 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var85 = var84.getParameter();
    boolean var86 = var84.declaredListSeparator();
    char var87 = var84.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var88 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var89 = var88.hasProperties();
    var84.setRequired(var89);
    com.martiansoftware.jsap.UnflaggedOption var91 = var81.setGreedy(var89);
    var0.setRequired(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var17.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "hi!"+ "'", var39.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);

  }

  public void test340() throws Throwable {

    com.martiansoftware.jsap.stringparsers.PackageStringParser var0 = new com.martiansoftware.jsap.stringparsers.PackageStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var5 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var17 = var6.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = var19.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption(var3, (com.martiansoftware.jsap.StringParser)var5, var17, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    java.lang.String var61 = var59.getUsage();
    junit.framework.Assert.assertEquals(var3, var61);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var63 = var0.parse(var61);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));

  }

  public void test341() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    boolean var3 = var0.getIslist();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var8 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var9 = var5.setHelp("hi!");
    var5.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var12 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var14 = var13.getHelp();
    java.lang.String var15 = var13.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var16 = new com.martiansoftware.jsap.SimpleJSAP(var15);
    boolean var17 = var16.messagePrinted();
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var29 = var18.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var30 = new com.martiansoftware.jsap.SimpleJSAP(var29);
    com.martiansoftware.jsap.UnflaggedOption var31 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var12, var17, var29);
    com.martiansoftware.jsap.ant.SwitchConfiguration var32 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var33 = var32.getLongflag();
    var32.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var0.setListseparator('#');
    com.martiansoftware.jsap.ant.DefaultValue var56 = new com.martiansoftware.jsap.ant.DefaultValue();
    java.lang.String var57 = var56.getValue();
    var0.addConfiguredDefault(var56);
    boolean var59 = var0.getRequired();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var59);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);

  }

  public void test342() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    java.lang.String var28 = var26.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var29 = new com.martiansoftware.jsap.SimpleJSAP(var28);
    com.martiansoftware.jsap.IDMap var30 = var29.getIDMap();
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var42 = var31.getHelp((-1), "hi!");
    java.lang.String var43 = var30.getIDByLongFlag(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var53 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var61 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var53, "hi!", true, '4', "", var60);
    java.util.List var63 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var64 = var30.getIDByLongFlag("");
    long[] var65 = var14.getLongArray("");
    boolean var66 = var14.success();
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var70 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var74 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var75 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var76 = new com.martiansoftware.jsap.TestSwitch("hi!");
    java.awt.Color[] var77 = var14.getColorArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var81 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var85 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var86 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var87 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var87.testSwitchParse();
    var87.testLongFlag();
    var87.testID();
    java.lang.String var91 = var87.getName();
    long[] var92 = var14.getLongArray(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + "hi!"+ "'", var91.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);

  }

  public void test343() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DoubleStringParser var0 = new com.martiansoftware.jsap.stringparsers.DoubleStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var26 = var15.getClass("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var38 = var27.getHelp((-1), "hi!");
    double var40 = var15.getDouble(var38, 0.0d);
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    boolean var51 = var50.messagePrinted();
    java.lang.String var52 = var50.getHelp();
    com.martiansoftware.jsap.ParseException var53 = new com.martiansoftware.jsap.ParseException(var52);
    java.lang.String[] var54 = new java.lang.String[] { var52};
    com.martiansoftware.jsap.JSAPResult var55 = var44.parse(var54);
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.util.Iterator var58 = var56.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var59 = var56.getIDMap();
    java.lang.String var60 = var56.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var64 = var55.getByte(var60, (byte)(-1));
    java.math.BigDecimal var65 = var15.getBigDecimal(var60);
    boolean var66 = var15.success();
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    java.util.Iterator var69 = var67.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var70 = var67.getIDMap();
    java.lang.String var71 = var67.getUsage();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var76 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var77 = var73.setHelp("hi!");
    java.lang.String var78 = var15.getString(var71, "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var79 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var52.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "hi!"+ "'", var76.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "hi!"+ "'", var78.equals("hi!"));

  }

  public void test344() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var6 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var7 = var6.getID();
    java.lang.String var8 = var6.getID();
    java.lang.String var9 = var6.getID();
    java.lang.String var10 = var6.getID();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var11 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var12 = var11.hasProperties();
    java.lang.String var13 = var11.getStringparser();
    java.lang.String[] var14 = var11.getDefaults();
    java.lang.String var15 = var11.getId();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals(var10, (java.lang.Object)var11, (java.lang.Object)1.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == null);

  }

  public void test345() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var30 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var43 = var0.getProperty("hi!", "hi!");
    com.martiansoftware.jsap.UnflaggedOption var44 = new com.martiansoftware.jsap.UnflaggedOption(var43);
    com.martiansoftware.jsap.stringparsers.FileStringParser var45 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var45.tearDown();
    boolean var47 = var45.mustBeDirectory();
    com.martiansoftware.jsap.UnflaggedOption var48 = var44.setGreedy(var47);
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    java.lang.String var51 = var49.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    boolean var53 = var52.messagePrinted();
    java.lang.String var54 = var52.getHelp();
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    java.lang.String var57 = var55.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var58 = new com.martiansoftware.jsap.SimpleJSAP(var57);
    boolean var59 = var58.messagePrinted();
    java.lang.String var60 = var58.getHelp();
    com.martiansoftware.jsap.ParseException var61 = new com.martiansoftware.jsap.ParseException(var60);
    java.lang.String[] var62 = new java.lang.String[] { var60};
    com.martiansoftware.jsap.JSAPResult var63 = var52.parse(var62);
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    java.lang.String var66 = var64.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var67 = new com.martiansoftware.jsap.SimpleJSAP(var66);
    float[] var68 = var63.getFloatArray(var66);
    com.martiansoftware.jsap.JSAPException var69 = new com.martiansoftware.jsap.JSAPException(var66);
    com.martiansoftware.jsap.UnflaggedOption var70 = var44.setUsageName(var66);
    com.martiansoftware.jsap.stringparsers.FileStringParser var71 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var71.tearDown();
    var71.setUp();
    com.martiansoftware.jsap.stringparsers.FileStringParser var74 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var74.tearDown();
    var74.setUp();
    boolean var77 = var74.mustExist();
    com.martiansoftware.jsap.stringparsers.FileStringParser var78 = var71.setMustExist(var77);
    com.martiansoftware.jsap.UnflaggedOption var79 = var70.setStringParser((com.martiansoftware.jsap.StringParser)var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var54.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var60.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);

  }

  public void test346() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getHelp();
    java.lang.String[] var5 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize(var4);
    com.martiansoftware.jsap.SimpleJSAP var6 = new com.martiansoftware.jsap.SimpleJSAP(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);

  }

  public void test347() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var38 = var34.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var39 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var40 = var39.getID();
    boolean[] var41 = var14.getBooleanArray(var40);
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var46 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var47 = var43.setHelp("hi!");
    java.lang.String[] var48 = var14.getStringArray("hi!");
    java.util.Iterator var49 = var14.getErrorMessageIterator();
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    java.util.Iterator var52 = var50.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var53 = var50.getIDMap();
    java.lang.String var54 = var50.getUsage();
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException(var54);
    java.net.InetAddress[] var56 = var14.getInetAddressArray(var54);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var60 = var58.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var62 = var58.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var72 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var62.addDefault("hi!");
    java.lang.String var76 = var62.getSyntax();
    java.lang.String var77 = var62.getSyntax();
    long var79 = var14.getLong(var77, (-1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!"+ "'", var40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "hi!"+ "'", var46.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "[<hi!>]"+ "'", var76.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "[<hi!>]"+ "'", var77.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == (-1L));

  }

  public void test348() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.Exception var70 = var36.getException("");
    com.martiansoftware.jsap.ant.ParserProperty var71 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var76 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var77 = var73.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var78 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var71.setValue("hi!");
    boolean var80 = var36.userSpecified("hi!");
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals("hi!", (byte)(-1), (byte)(-1));
    java.lang.String var92 = com.martiansoftware.util.StringUtils.noNull("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "hi!"+ "'", var76.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + "hi!"+ "'", var92.equals("hi!"));

  }

  public void test349() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var47 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var48 = var46.setStringParser((com.martiansoftware.jsap.StringParser)var47);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var49 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var50 = var49.getParameter();
    boolean var51 = var49.declaredListSeparator();
    char var52 = var49.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var53 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var54 = var53.hasProperties();
    var49.setRequired(var54);
    com.martiansoftware.jsap.UnflaggedOption var56 = var46.setGreedy(var54);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var60 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var64 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var65 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var66 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var73 = var72.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var74 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var66, "hi!", true, '4', "", var73);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var75 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    java.lang.String var78 = var76.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var79 = new com.martiansoftware.jsap.SimpleJSAP(var78);
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var83 = var81.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var85 = var81.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var87 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var90 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var91 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var75, var78, false, '4', "hi!");
    java.lang.String var94 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var95 = com.martiansoftware.util.StringUtils.wrapToList(var78, 1);
    com.martiansoftware.jsap.UnflaggedOption var96 = var46.setUsageName(var78);
    boolean var97 = var46.required();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "hi!"+ "'", var94.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == true);

  }

  public void test350() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var51 = var27.setList(false);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var55 = var53.setRequired(false);
    java.lang.String var56 = var53.getID();
    boolean var57 = var53.allowMultipleDeclarations();
    com.martiansoftware.jsap.UnflaggedOption var58 = var51.setList(var57);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var62 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var66 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var67 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var68 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var71 = new com.martiansoftware.jsap.ParseException();
    com.martiansoftware.jsap.JSAPException var72 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var71);
    junit.framework.Assert.assertNotNull("hi!", (java.lang.Object)var71);
    com.martiansoftware.jsap.UnflaggedOption var74 = var51.setUsageName("hi!");
    boolean var75 = var51.required();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "hi!"+ "'", var56.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == true);

  }

  public void test351() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var29 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var30 = var26.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var31 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var32 = var31.getID();
    java.lang.String var33 = var31.getID();
    com.martiansoftware.jsap.Switch var34 = var24.setDefault(var33);
    java.lang.Character var35 = var34.getShortFlagCharacter();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "hi!"+ "'", var29.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "hi!"+ "'", var33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + '4'+ "'", var35.equals('4'));

  }

  public void test352() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser("hi!");
    var51.testFloatRGB();
    var51.testHexRGB();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var51.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);

  }

  public void test353() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var5.addDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var23 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var24 = var20.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var25 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = var20.setStringParser((com.martiansoftware.jsap.StringParser)var25);
    com.martiansoftware.jsap.FlaggedOption var27 = var5.setStringParser((com.martiansoftware.jsap.StringParser)var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var46 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var54 = var52.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var56 = var52.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, var49, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    java.lang.String var65 = var63.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var66 = new com.martiansoftware.jsap.SimpleJSAP(var65);
    boolean var67 = var66.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var68 = var62.setRequired(var67);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var69 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var70 = var69.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var71 = var62.setAllowMultipleDeclarations(var70);
    com.martiansoftware.jsap.FlaggedOption var72 = var5.setAllowMultipleDeclarations(var70);
    com.martiansoftware.jsap.JSAP var73 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var74 = var73.getHelp();
    java.lang.String var75 = var73.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var76 = new com.martiansoftware.jsap.SimpleJSAP(var75);
    boolean var77 = var76.messagePrinted();
    java.lang.String var78 = var76.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var79 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var80 = var79.hasProperties();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var81 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var82 = var81.hasProperties();
    java.lang.String var83 = var81.getStringparser();
    boolean var84 = var81.getIslist();
    com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var85 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var78, var80, var84);
    var85.tearDown();
    com.martiansoftware.jsap.FlaggedOption var87 = var5.setStringParser((com.martiansoftware.jsap.StringParser)var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!"+ "'", var23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var78.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);

  }

  public void test354() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    java.lang.String var27 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 100);
    com.martiansoftware.jsap.QualifiedSwitch var28 = new com.martiansoftware.jsap.QualifiedSwitch(var27);
    java.lang.String var29 = var28.getSyntax();
    java.lang.String var30 = var28.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi!                                                                                                 "+ "'", var27.equals("hi!                                                                                                 "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "[[:<hi!                                                                                                 >]]"+ "'", var29.equals("[[:<hi!                                                                                                 >]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "[[:<hi!                                                                                                 >]]"+ "'", var30.equals("[[:<hi!                                                                                                 >]]"));

  }

  public void test355() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    java.math.BigInteger[] var52 = var36.getBigIntegerArray("");
    java.lang.String var55 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var60 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var61 = var57.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var62 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var63 = var62.getID();
    java.lang.String var64 = var62.getID();
    com.martiansoftware.jsap.JSAPException var65 = new com.martiansoftware.jsap.JSAPException(var55, (java.lang.Throwable)var62);
    int[] var66 = var36.getIntArray(var55);
    java.lang.String var69 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var69, 10.0f, 10.0f, 1.0f);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var55, 10.0f, (-1.0f), 10.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!"+ "'", var55.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "hi!"+ "'", var60.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "hi!"+ "'", var63.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "hi!"+ "'", var64.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "hi!"+ "'", var69.equals("hi!"));

  }

  public void test356() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var32 = var30.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var33 = var27.setList(false);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var43 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var51 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var43, "hi!", true, '4', "", var50);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var52 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    java.lang.String var55 = var53.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var56 = new com.martiansoftware.jsap.SimpleJSAP(var55);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var60 = var58.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var62 = var58.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var52, var55, false, '4', "hi!");
    java.lang.String[] var69 = var68.getDefault();
    java.lang.String var70 = var68.getHelp();
    var27.addDefault(var70);
    java.lang.String var72 = var27.getSyntax();
    boolean var73 = var27.isGreedy();
    char var74 = var27.getListSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "[<>]"+ "'", var72.equals("[<>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == ':');

  }

  public void test357() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    java.lang.String var7 = var4.getHelp();
    var0.setId(var7);
    java.lang.String var9 = var0.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty[] var10 = var0.getParserProperties();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var7.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == null);

  }

  public void test358() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    junit.framework.Assert.assertNotNull((java.lang.Object)var1);
    com.martiansoftware.jsap.StringParser var9 = var1.getStringParser();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);

  }

  public void test359() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.String var18 = var17.getSyntax();
    com.martiansoftware.jsap.StringParser var19 = var17.getStringParser();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var29 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var37 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var29, "hi!", true, '4', "", var36);
    com.martiansoftware.jsap.UnspecifiedParameterException var38 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var41 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var40);
    com.martiansoftware.jsap.ParseException var42 = new com.martiansoftware.jsap.ParseException("", (java.lang.Throwable)var41);
    com.martiansoftware.jsap.Parameter var43 = var17.setHelp("");
    java.lang.String var44 = var17.getLongFlag();
    boolean var45 = var17.required();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var18.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == true);

  }

  public void test360() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    float[] var20 = var15.getFloatArray(var18);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var30 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var33 = var15.getCharArray("hi!");
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var35 = var34.getHelp();
    java.lang.String var36 = var34.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var37 = new com.martiansoftware.jsap.SimpleJSAP(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var37.unregisterParameter((com.martiansoftware.jsap.Parameter)var39);
    com.martiansoftware.jsap.TestOption var41 = new com.martiansoftware.jsap.TestOption();
    int var42 = var41.countTestCases();
    int var43 = var41.countTestCases();
    int var44 = var41.countTestCases();
    java.lang.String var45 = var37.getHelp(var44);
    char[] var46 = var15.getCharArray(var45);
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    boolean var51 = var50.messagePrinted();
    java.lang.String var52 = var50.getHelp();
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    java.lang.String var55 = var53.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var56 = new com.martiansoftware.jsap.SimpleJSAP(var55);
    boolean var57 = var56.messagePrinted();
    java.lang.String var58 = var56.getHelp();
    com.martiansoftware.jsap.ParseException var59 = new com.martiansoftware.jsap.ParseException(var58);
    java.lang.String[] var60 = new java.lang.String[] { var58};
    com.martiansoftware.jsap.JSAPResult var61 = var50.parse(var60);
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var65 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var69 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var70 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var71 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var72 = var61.getClass("hi!");
    int[] var73 = var15.getIntArray("hi!");
    com.martiansoftware.jsap.JSAP var74 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var75 = var74.getHelp();
    java.util.Iterator var76 = var74.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var77 = var74.getIDMap();
    java.lang.String var78 = var74.getHelp();
    int[] var79 = var15.getIntArray(var78);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var80 = var0.parse(var78);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var45.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var52.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var58.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);

  }

  public void test361() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    java.lang.String[] var1 = var0.getDefaults();
    boolean var2 = var0.declaredListSeparator();
    com.martiansoftware.jsap.Defaults var3 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var4 = var3.idIterator();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var26 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var26, "hi!", true, '4', "", var33);
    java.lang.String[] var35 = new java.lang.String[] { var33};
    var3.addDefault(var16, var35);
    java.lang.String var37 = com.martiansoftware.util.StringUtils.noNull(var16);
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch(var16);
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch(var16);
    var0.setId(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));

  }

  public void test362() throws Throwable {

    com.martiansoftware.jsap.stringparsers.InetAddressStringParser var0 = com.martiansoftware.jsap.stringparsers.InetAddressStringParser.getParser();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.Object var35 = var0.parse(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);

  }

  public void test363() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.Character var18 = var17.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = var17.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var22 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    junit.framework.Assert.assertFalse("hi!", false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + '4'+ "'", var18.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);

  }

  public void test364() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    var0.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var0.setShortflag('4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var19 = var18.getShortFlag();
    var0.setShortflag(var19);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var24 = var22.setRequired(false);
    java.lang.String var25 = var22.getID();
    var0.setId(var25);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail(var25);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "hi!"+ "'", var25.equals("hi!"));

  }

  public void test365() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    boolean var3 = var0.getIslist();
    com.martiansoftware.jsap.ant.ParserProperty[] var4 = var0.getParserProperties();
    java.lang.String var5 = var0.getId();
    com.martiansoftware.jsap.ant.DefaultValue var6 = new com.martiansoftware.jsap.ant.DefaultValue();
    java.lang.String var7 = var6.getValue();
    java.lang.String var8 = var6.getValue();
    var0.addConfiguredDefault(var6);
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var21 = var10.getHelp((-1), "hi!");
    var6.addText("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));

  }

  public void test366() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser("hi!");
    var51.testFloatRGB();
    var51.testByName();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);

  }

  public void test367() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var32 = var30.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var33 = var27.setList(false);
    java.lang.String var34 = var33.getUsageName();
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption(var34);
    var35.testShortFlag();
    var35.testLongFlag();
    var35.testLongFlag();
    var35.testLongFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));

  }

  public void test368() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test7();
    com.martiansoftware.jsap.TestDefaults var5 = new com.martiansoftware.jsap.TestDefaults();
    var5.tearDown();
    junit.framework.TestResult var7 = var5.run();
    var0.run(var7);
    var0.test8();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);

  }

  public void test369() throws Throwable {

    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    junit.framework.Assert.assertNotNull((java.lang.Object)0.0d);
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    boolean var11 = var9.messagePrinted();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var24 = var13.getHelp((-1), "hi!");
    java.lang.String var25 = var9.getHelp(100, "hi!");
    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    junit.framework.Assert.assertEquals(0.0d, 1.0d, 100.0d);
    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    junit.framework.Assert.assertNotNull((java.lang.Object)0.0d);
    junit.framework.Assert.assertEquals(var25, 100.0d, 100.0d, 0.0d);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(100.0d, 0.0d, 0.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var25.equals("  [--help]\n        Prints this help message.\n"));

  }

  public void test370() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.String var18 = var17.getSyntax();
    java.lang.Character var19 = var17.getShortFlagCharacter();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    boolean var24 = var23.messagePrinted();
    java.lang.String var25 = var23.getHelp();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    java.lang.String var28 = var26.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var29 = new com.martiansoftware.jsap.SimpleJSAP(var28);
    boolean var30 = var29.messagePrinted();
    java.lang.String var31 = var29.getHelp();
    com.martiansoftware.jsap.ParseException var32 = new com.martiansoftware.jsap.ParseException(var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    com.martiansoftware.jsap.JSAPResult var34 = var23.parse(var33);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var35 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var36 = var35.getParameter();
    boolean var37 = var35.declaredListSeparator();
    char var38 = var35.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var41 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var40);
    java.lang.String var42 = var40.toString();
    var35.setLongflag(var42);
    java.lang.String[] var44 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize(var42);
    var23.setHelp(var42);
    com.martiansoftware.jsap.FlaggedOption var46 = var17.setLongFlag(var42);
    java.lang.String var47 = var17.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var18.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + '4'+ "'", var19.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var25.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var31.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var42.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "(-4|--com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'.)[:<hi!>]"+ "'", var47.equals("(-4|--com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'.)[:<hi!>]"));

  }

  public void test371() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var40 = var34.setRequired(var39);
    java.lang.Character var41 = var40.getShortFlagCharacter();
    java.lang.String[] var42 = var40.getDefault();
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var45 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var44);
    java.lang.String var46 = var44.toString();
    com.martiansoftware.jsap.FlaggedOption var47 = var40.setUsageName(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + '4'+ "'", var41.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var46.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);

  }

  public void test372() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntegerStringParser var0 = new com.martiansoftware.jsap.stringparsers.IntegerStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var26 = var15.getClass("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var38 = var27.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    com.martiansoftware.jsap.JSAPException var40 = new com.martiansoftware.jsap.JSAPException(var38);
    java.util.Date var41 = var15.getDate(var38);
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var46 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var47 = var43.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var48 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var49 = var43.setStringParser((com.martiansoftware.jsap.StringParser)var48);
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var59 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var62 = var49.setHelp("hi!");
    int[] var63 = var15.getIntArray("hi!");
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    java.lang.String var66 = var64.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var67 = new com.martiansoftware.jsap.SimpleJSAP(var66);
    boolean var68 = var67.messagePrinted();
    java.lang.String var69 = var67.getHelp();
    com.martiansoftware.jsap.JSAP var70 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var71 = var70.getHelp();
    java.lang.String var72 = var70.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var73 = new com.martiansoftware.jsap.SimpleJSAP(var72);
    boolean var74 = var73.messagePrinted();
    java.lang.String var75 = var73.getHelp();
    com.martiansoftware.jsap.ParseException var76 = new com.martiansoftware.jsap.ParseException(var75);
    java.lang.String[] var77 = new java.lang.String[] { var75};
    com.martiansoftware.jsap.JSAPResult var78 = var67.parse(var77);
    com.martiansoftware.jsap.JSAP var79 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var80 = var79.getHelp();
    java.lang.String var81 = var79.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var82 = new com.martiansoftware.jsap.SimpleJSAP(var81);
    float[] var83 = var78.getFloatArray(var81);
    java.net.URL var84 = var15.getURL(var81);
    com.martiansoftware.jsap.JSAP var85 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var86 = var85.getHelp();
    java.lang.String var87 = var85.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var88 = new com.martiansoftware.jsap.SimpleJSAP(var87);
    boolean var89 = var88.messagePrinted();
    java.lang.String var90 = var88.getHelp();
    java.io.File var91 = var15.getFile(var90);
    com.martiansoftware.jsap.Switch var92 = new com.martiansoftware.jsap.Switch(var90);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var93 = var0.parse(var90);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "hi!"+ "'", var46.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var69.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var75.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + ""+ "'", var80.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + ""+ "'", var86.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + ""+ "'", var87.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var90.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == null);

  }

  public void test373() throws Throwable {

    com.martiansoftware.jsap.TestOption var0 = new com.martiansoftware.jsap.TestOption();
    int var1 = var0.countTestCases();
    var0.testParsing();
    java.lang.String var3 = var0.toString();
    var0.testSettersAndGetters();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "null(com.martiansoftware.jsap.TestOption)"+ "'", var3.equals("null(com.martiansoftware.jsap.TestOption)"));

  }

  public void test374() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var10 = var9.countTestCases();
    var9.testLongFlag();
    var9.testID();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);

  }

  public void test375() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var41 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var42 = var38.setHelp("hi!");
    var38.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var45 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    boolean var50 = var49.messagePrinted();
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var62 = var51.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var63 = new com.martiansoftware.jsap.SimpleJSAP(var62);
    com.martiansoftware.jsap.UnflaggedOption var64 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var45, var50, var62);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.Object[] var67 = new java.lang.Object[] { var66};
    java.lang.Object[] var68 = var36.getObjectArray("", var67);
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var74 = var36.getByte("hi!", (byte)(-1));
    java.util.Iterator var75 = var36.getBadParameterIDIterator();
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    java.lang.String var78 = var76.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var79 = new com.martiansoftware.jsap.SimpleJSAP(var78);
    boolean var80 = var79.messagePrinted();
    java.lang.String var81 = var79.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var82 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var83 = var82.hasProperties();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var84 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var85 = var84.hasProperties();
    java.lang.String var86 = var84.getStringparser();
    boolean var87 = var84.getIslist();
    com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var88 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var81, var83, var87);
    java.util.Date var89 = var36.getDate(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "hi!"+ "'", var41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var81.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == null);

  }

  public void test376() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.ant.SwitchConfiguration var28 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var29 = var28.getLongflag();
    var28.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var51 = new com.martiansoftware.jsap.UnflaggedOption("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var52 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var53 = var52.getParameter();
    java.lang.String var54 = var52.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var59 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var60 = var56.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var61 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var62 = var61.getID();
    java.lang.String var63 = var61.getID();
    var52.setLongflag(var63);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var67 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var68 = var67.getLongflag();
    var67.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var71 = var66.setListSeparator('#');
    boolean var72 = var71.isList();
    var52.setAllowmultipledeclarations(var72);
    com.martiansoftware.jsap.UnflaggedOption var74 = var51.setList(var72);
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var78 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var82 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var83 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var84 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var86 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var90 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var91 = var90.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var92 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var84, "hi!", true, '4', "", var91);
    java.lang.Character var93 = var92.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var95 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var96 = var92.setLongFlag("hi!");
    boolean var97 = var92.isList();
    com.martiansoftware.jsap.UnflaggedOption var98 = var51.setList(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi!"+ "'", var59.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "hi!"+ "'", var62.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "hi!"+ "'", var63.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + ""+ "'", var91.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + '4'+ "'", var93.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var98 == null);

  }

  public void test377() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getUsage();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame(var4);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));

  }

  public void test378() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var11 = var0.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var16 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var17 = var13.setHelp("hi!");
    var13.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var20 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    boolean var25 = var24.messagePrinted();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.UnflaggedOption var39 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var20, var25, var37);
    boolean var40 = var39.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var45 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var46 = var42.setHelp("hi!");
    var42.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var49 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    java.lang.String var52 = var50.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var52);
    boolean var54 = var53.messagePrinted();
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var60 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var64 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var65 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var66 = var55.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var67 = new com.martiansoftware.jsap.SimpleJSAP(var66);
    com.martiansoftware.jsap.UnflaggedOption var68 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var49, var54, var66);
    com.martiansoftware.jsap.ant.SwitchConfiguration var69 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var70 = var69.getLongflag();
    var69.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var76 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var80 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var81 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var82 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var88 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var89 = var88.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var90 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var82, "hi!", true, '4', "", var89);
    com.martiansoftware.jsap.Switch var91 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var92 = var39.setUsageName("hi!");
    com.martiansoftware.jsap.TestOption var93 = new com.martiansoftware.jsap.TestOption();
    int var94 = var93.countTestCases();
    int var95 = var93.countTestCases();
    java.lang.String var96 = com.martiansoftware.util.StringUtils.padRight("hi!", var95);
    com.martiansoftware.jsap.ParseException var97 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.Flagged var98 = var0.getByLongFlag("hi!");
    com.martiansoftware.jsap.IDMap var99 = var0.getIDMap();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!"+ "'", var16.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "hi!"+ "'", var45.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + ""+ "'", var89.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "hi! "+ "'", var96.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var99 == null);

  }

  public void test379() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    com.martiansoftware.jsap.UnflaggedOption var21 = new com.martiansoftware.jsap.UnflaggedOption("");
    java.lang.String var22 = var21.getSyntax();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var24 = var23.getHelp();
    java.lang.String var25 = var23.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    boolean var27 = var26.messagePrinted();
    java.lang.String var28 = var26.getHelp();
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var30 = var29.getHelp();
    java.lang.String var31 = var29.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    boolean var33 = var32.messagePrinted();
    java.lang.String var34 = var32.getHelp();
    com.martiansoftware.jsap.ParseException var35 = new com.martiansoftware.jsap.ParseException(var34);
    java.lang.String[] var36 = new java.lang.String[] { var34};
    com.martiansoftware.jsap.JSAPResult var37 = var26.parse(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var47 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var48 = var37.getClass("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var60 = var49.getHelp((-1), "hi!");
    double var62 = var37.getDouble(var60, 0.0d);
    com.martiansoftware.jsap.UnflaggedOption var63 = var21.setUsageName(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "[<>]"+ "'", var22.equals("[<>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var28.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);

  }

  public void test380() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var16 = var15.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var17 = var3.setScreenWidth(var16);
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    java.lang.String var20 = var18.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var21 = new com.martiansoftware.jsap.SimpleJSAP(var20);
    boolean var22 = var21.messagePrinted();
    java.lang.String var23 = var21.getHelp();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    boolean var28 = var27.messagePrinted();
    java.lang.String var29 = var27.getHelp();
    com.martiansoftware.jsap.ParseException var30 = new com.martiansoftware.jsap.ParseException(var29);
    java.lang.String[] var31 = new java.lang.String[] { var29};
    com.martiansoftware.jsap.JSAPResult var32 = var21.parse(var31);
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var42 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var43 = var32.getClass("hi!");
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var55 = var44.getHelp((-1), "hi!");
    double var57 = var32.getDouble(var55, 0.0d);
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    java.lang.String var60 = var58.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    boolean var62 = var61.messagePrinted();
    java.lang.String var63 = var61.getHelp();
    com.martiansoftware.jsap.ParseException var64 = new com.martiansoftware.jsap.ParseException(var63);
    java.util.Iterator var65 = var32.getExceptionIterator(var63);
    java.lang.String[] var66 = new java.lang.String[] { var63};
    com.martiansoftware.jsap.JSAPResult var67 = var17.parse(var66);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var76 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.io.File var77 = var67.getFile("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var23.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var29.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var63.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == null);

  }

  public void test381() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var26 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var27 = var26.getID();
    java.lang.Character var28 = var26.getShortFlagCharacter();
    java.lang.String var29 = var26.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi!"+ "'", var27.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "[[:<hi!>]]"+ "'", var29.equals("[[:<hi!>]]"));

  }

  public void test382() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var10 = var9.getShortFlag();
    char var11 = var9.getShortFlag();
    java.lang.Character var12 = var9.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var22 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var25 = var9.setDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var30 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var31 = var27.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var32 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var33 = var32.getID();
    java.lang.String var34 = var32.getID();
    com.martiansoftware.jsap.Switch var35 = var25.setDefault(var34);
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    boolean var40 = var39.messagePrinted();
    java.lang.String var41 = var39.getHelp();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    boolean var46 = var45.messagePrinted();
    java.lang.String var47 = var45.getHelp();
    com.martiansoftware.jsap.ParseException var48 = new com.martiansoftware.jsap.ParseException(var47);
    java.lang.String[] var49 = new java.lang.String[] { var47};
    com.martiansoftware.jsap.JSAPResult var50 = var39.parse(var49);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var60 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var61 = var50.getClass("hi!");
    com.martiansoftware.jsap.JSAP var62 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var71 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var72 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var73 = var62.getHelp((-1), "hi!");
    double var75 = var50.getDouble(var73, 0.0d);
    java.lang.String var76 = var0.getProperty(var34, var73);
    var0.tearDown();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + '4'+ "'", var12.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "hi!"+ "'", var30.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "hi!"+ "'", var33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "hi!"+ "'", var34.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var41.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var47.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));

  }

  public void test383() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var6 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var7 = var1.setStringParser((com.martiansoftware.jsap.StringParser)var6);
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var17 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var20 = var7.setHelp("hi!");
    java.lang.String var21 = var20.getUsageName();
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var22 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var32 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var40 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var32, "hi!", true, '4', "", var39);
    java.lang.Character var41 = var40.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var44 = var40.setLongFlag("hi!");
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var54 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, "hi!", true, '4', "", var61);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var63 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    java.lang.String var66 = var64.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var67 = new com.martiansoftware.jsap.SimpleJSAP(var66);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var71 = var69.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var73 = var69.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var75 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var78 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var79 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var63, var66, false, '4', "hi!");
    com.martiansoftware.jsap.FlaggedOption var80 = var40.setLongFlag("hi!");
    java.lang.String var81 = var40.getSyntax();
    var22.setName(var81);
    com.martiansoftware.jsap.TestCommandLineTokenizer var83 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var83.test9();
    junit.framework.TestResult var85 = var83.run();
    var22.run(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "hi!"+ "'", var21.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + '4'+ "'", var41.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "(-4|--hi!)[:<hi!>]"+ "'", var81.equals("(-4|--hi!)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);

  }

  public void test384() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test1();
    var0.test7();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var14 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var22 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var14, "hi!", true, '4', "", var21);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var23 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var31 = var29.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var33 = var29.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var23, var26, false, '4', "hi!");
    java.lang.String var40 = var39.getSyntax();
    com.martiansoftware.jsap.ant.SwitchConfiguration var41 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var42 = var41.getLongflag();
    var41.setShortflag('#');
    java.lang.String var45 = var41.getLongflag();
    var41.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var41.setShortflag('4');
    java.lang.String var51 = var41.getId();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var61 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    var41.setDefault("hi!");
    com.martiansoftware.jsap.Parameter var66 = var39.setHelp("hi!");
    var0.setName("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var40.equals("[(-4|--hi!)[:<hi!>]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);

  }

  public void test385() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    boolean var1 = var0.mustExist();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var3 = var2.getHelp();
    java.lang.String var4 = var2.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var5 = new com.martiansoftware.jsap.SimpleJSAP(var4);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var6 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var18 = var7.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var22 = var20.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var32 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var40 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var32, "hi!", true, '4', "", var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption(var4, (com.martiansoftware.jsap.StringParser)var6, var18, false, '4', "hi!");
    java.lang.Object var60 = var0.parse(var4);
    var0.setUp();
    var0.tearDown();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);

  }

  public void test386() throws Throwable {

    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var2 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var3 = var2.idIterator();
    com.martiansoftware.jsap.JSAP var4 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var15 = var4.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var25 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var33 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var25, "hi!", true, '4', "", var32);
    java.lang.String[] var34 = new java.lang.String[] { var32};
    var2.addDefault(var15, var34);
    java.lang.String[] var36 = new java.lang.String[] { var15};
    com.martiansoftware.jsap.JSAPResult var37 = var1.parse(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var47 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var50 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var51 = var37.contains("hi!");
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var61 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var69 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var61, "hi!", true, '4', "", var68);
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.Exception var71 = var37.getException("");
    com.martiansoftware.jsap.ant.ParserProperty var72 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var77 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var78 = var74.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var79 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var72.setValue("hi!");
    boolean var81 = var37.userSpecified("hi!");
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals("hi!", (byte)(-1), (byte)(-1));
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((byte)10, (byte)(-1));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "hi!"+ "'", var77.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);

  }

  public void test387() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    java.lang.String var28 = var26.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var29 = new com.martiansoftware.jsap.SimpleJSAP(var28);
    boolean var30 = var29.messagePrinted();
    java.lang.String var31 = var29.getHelp();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.lang.String var34 = var32.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    boolean var36 = var35.messagePrinted();
    java.lang.String var37 = var35.getHelp();
    com.martiansoftware.jsap.ParseException var38 = new com.martiansoftware.jsap.ParseException(var37);
    java.lang.String[] var39 = new java.lang.String[] { var37};
    com.martiansoftware.jsap.JSAPResult var40 = var29.parse(var39);
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    float[] var45 = var40.getFloatArray(var43);
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var55 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var58 = var40.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var63 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var64 = var60.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var65 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var66 = var65.getID();
    boolean[] var67 = var40.getBooleanArray(var66);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var72 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var73 = var69.setHelp("hi!");
    java.lang.String[] var74 = var40.getStringArray("hi!");
    java.util.Iterator var75 = var40.getErrorMessageIterator();
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    java.util.Iterator var78 = var76.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var79 = var76.getIDMap();
    java.lang.String var80 = var76.getUsage();
    com.martiansoftware.jsap.UnknownFlagException var81 = new com.martiansoftware.jsap.UnknownFlagException(var80);
    java.net.InetAddress[] var82 = var40.getInetAddressArray(var80);
    boolean var83 = var14.userSpecified(var80);
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var87 = var85.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var89 = var85.setRequired(false);
    com.martiansoftware.jsap.JSAP var90 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var91 = var90.getHelp();
    java.lang.String var92 = var90.getUsage();
    com.martiansoftware.jsap.FlaggedOption var93 = var89.setUsageName(var92);
    java.lang.String var94 = var89.getLongFlag();
    java.lang.String var95 = var89.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      double var96 = var14.getDouble(var95);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var31.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var37.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "hi!"+ "'", var63.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + "hi!"+ "'", var66.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "hi!"+ "'", var72.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + ""+ "'", var80.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + ""+ "'", var91.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + ""+ "'", var92.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "[<>]"+ "'", var95.equals("[<>]"));

  }

  public void test388() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser("hi!");
    var51.testFloatRGB();
    var51.testHexRGB();
    var51.testIntegerRGB();
    var51.testByName();
    var51.testIntegerRGB();
    var51.testIntegerRGB();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);

  }

  public void test389() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.util.Iterator var17 = var15.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var18 = var15.getIDMap();
    java.lang.String var19 = var15.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var23 = var14.getByte(var19, (byte)(-1));
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var19);
    boolean var25 = var24.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var30 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var31 = var27.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var32 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = var27.setStringParser((com.martiansoftware.jsap.StringParser)var32);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var43 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var46 = var33.setHelp("hi!");
    java.lang.String var47 = var46.getUsageName();
    java.lang.String[] var48 = new java.lang.String[] { var47};
    com.martiansoftware.jsap.JSAPResult var49 = var24.parse(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "hi!"+ "'", var30.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "hi!"+ "'", var47.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);

  }

  public void test390() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var2 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    var2.testLongFlag();
    var2.testLongFlag();
    var2.testShortFlag();
    var2.testShortFlag();
    java.lang.String var7 = var2.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail(var7);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!(com.martiansoftware.jsap.TestFlaggedOption)"+ "'", var7.equals("hi!(com.martiansoftware.jsap.TestFlaggedOption)"));

  }

  public void test391() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var10 = var9.getShortFlag();
    char var11 = var9.getShortFlag();
    char var12 = var9.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var17 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var18 = var14.setHelp("hi!");
    var14.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var21 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var23 = var22.getHelp();
    java.lang.String var24 = var22.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var25 = new com.martiansoftware.jsap.SimpleJSAP(var24);
    boolean var26 = var25.messagePrinted();
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var38 = var27.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    com.martiansoftware.jsap.UnflaggedOption var40 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var21, var26, var38);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.UnflaggedOption var59 = var40.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var60 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var61 = var59.setStringParser((com.martiansoftware.jsap.StringParser)var60);
    char var62 = var59.getListSeparator();
    com.martiansoftware.jsap.Switch var63 = var9.setShortFlag(var62);
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var66 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var67 = var9.setLongFlag("hi!");
    com.martiansoftware.jsap.Switch var68 = new com.martiansoftware.jsap.Switch("hi!");
    junit.framework.Assert.assertEquals("hi!", 0L, 0L);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(100L, 0L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "hi!"+ "'", var17.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);

  }

  public void test392() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test7();
    var0.test4();
    var0.test10();

  }

  public void test393() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var14 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var22 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var14, "hi!", true, '4', "", var21);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var23 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var31 = var29.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var33 = var29.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var23, var26, false, '4', "hi!");
    var3.setUsage(var26);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.UnspecifiedParameterException var59 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    var3.setHelp("");
    com.martiansoftware.jsap.IDMap var61 = var3.getIDMap();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);

  }

  public void test394() throws Throwable {

    com.martiansoftware.jsap.TestParser var0 = new com.martiansoftware.jsap.TestParser();
    var0.testParser();
    var0.testParser();
    var0.testParser();
    var0.testParser();

  }

  public void test395() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var11 = var0.getHelp((-1), "hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var12 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var13 = var12.getLongflag();
    var12.setShortflag('#');
    java.lang.String var16 = var12.getLongflag();
    var12.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var12.setShortflag('4');
    com.martiansoftware.jsap.Flagged var22 = var0.getByShortFlag((java.lang.Character)'4');
    java.lang.String var23 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));

  }

  public void test396() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var30 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var43 = var0.getProperty("hi!", "hi!");
    com.martiansoftware.jsap.UnflaggedOption var44 = new com.martiansoftware.jsap.UnflaggedOption(var43);
    com.martiansoftware.jsap.stringparsers.FileStringParser var45 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var45.tearDown();
    boolean var47 = var45.mustBeDirectory();
    com.martiansoftware.jsap.UnflaggedOption var48 = var44.setGreedy(var47);
    com.martiansoftware.jsap.StringParser var49 = var44.getStringParser();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == null);

  }

  public void test397() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var26 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    char var27 = var26.getShortFlag();
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    java.lang.String var30 = var28.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var31.unregisterParameter((com.martiansoftware.jsap.Parameter)var33);
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var44 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var52 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var44, "hi!", true, '4', "", var51);
    java.lang.String var53 = var52.getSyntax();
    java.lang.Character var54 = var52.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var55 = var33.setListSeparator((char)var54);
    com.martiansoftware.jsap.FlaggedOption var56 = var26.setShortFlag((char)var54);
    boolean var57 = var26.allowMultipleDeclarations();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var53.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + '4'+ "'", var54.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);

  }

  public void test398() throws Throwable {

    com.martiansoftware.jsap.stringparsers.CharacterStringParser var0 = com.martiansoftware.jsap.stringparsers.CharacterStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var19 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var27 = var25.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var29 = var25.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var19, var22, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var36 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var37 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);

  }

  public void test399() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.String var11 = var8.getSyntax();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var21 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var28 = var27.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var29 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var21, "hi!", true, '4', "", var28);
    java.lang.Character var30 = var29.getShortFlagCharacter();
    char var31 = var29.getShortFlag();
    com.martiansoftware.jsap.Switch var32 = var8.setShortFlag(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "[-4|--hi!]"+ "'", var11.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + '4'+ "'", var30.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);

  }

  public void test400() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.stringparsers.DateStringParser var15 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var15.setUp();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var26 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var26, "hi!", true, '4', "", var33);
    java.lang.String var35 = var15.getProperty("");
    java.lang.String[] var36 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.JSAPResult var37 = var3.parse(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var41 = var39.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var43 = var39.setRequired(false);
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    java.lang.String var46 = var44.getUsage();
    com.martiansoftware.jsap.FlaggedOption var47 = var43.setUsageName(var46);
    java.lang.Exception var48 = var37.getException(var46);
    boolean var49 = var37.success();
    boolean var50 = var37.success();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);

  }

  public void test401() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    java.lang.String var28 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var29 = var14.getURLArray(var28);
    com.martiansoftware.jsap.RequiredParameterMissingException var30 = new com.martiansoftware.jsap.RequiredParameterMissingException(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);

  }

  public void test402() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testSimpleDefault();
    var0.setUp();
    var0.testDefaults2();
    var0.testSimpleDefault();
    var0.testDefaults2();
    var0.setUp();

  }

  public void test403() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.stringparsers.ColorStringParser var19 = com.martiansoftware.jsap.stringparsers.ColorStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var29 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var37 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var29, "hi!", true, '4', "", var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var47 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var55 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var47, "hi!", true, '4', "", var54);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var56 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    java.lang.String var59 = var57.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var60 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var64 = var62.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var66 = var62.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var71 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var72 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var56, var59, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var73 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var74 = var73.getHelp();
    java.lang.String var75 = var73.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var76 = new com.martiansoftware.jsap.SimpleJSAP(var75);
    boolean var77 = var76.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var81 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var85 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var86 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var87 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var93 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var94 = var93.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var95 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var87, "hi!", true, '4', "", var94);
    com.martiansoftware.jsap.UnflaggedOption var96 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var19, "hi!", false, var77, "hi!");
    var0.setDefault("hi!");
    java.lang.String[] var98 = var0.getDefaults();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + ""+ "'", var94.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var98 == null);

  }

  public void test404() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.util.Iterator var17 = var15.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var18 = var15.getIDMap();
    java.lang.String var19 = var15.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var23 = var14.getByte(var19, (byte)(-1));
    java.util.Iterator var24 = var14.getErrorMessageIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);

  }

  public void test405() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.tearDown();
    var0.tearDown();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test406() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    com.martiansoftware.jsap.TestSwitch var48 = new com.martiansoftware.jsap.TestSwitch(var45);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var48.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);

  }

  public void test407() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var16 = var15.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var17 = var3.setScreenWidth(var16);
    boolean var18 = var17.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var22 = var20.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var24 = var20.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var34 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var24.addDefault("hi!");
    com.martiansoftware.jsap.JSAPResult var38 = var17.parse("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var39 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var40 = var39.getParameter();
    java.lang.String var41 = var39.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var46 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var47 = var43.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var48 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var49 = var48.getID();
    java.lang.String var50 = var48.getID();
    var39.setLongflag(var50);
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var52 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException(var50);
    java.io.File var53 = var38.getFile(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "hi!"+ "'", var46.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "hi!"+ "'", var49.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "hi!"+ "'", var50.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == null);

  }

  public void test408() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getHelp();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    java.util.Iterator var8 = var5.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    boolean var14 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    java.lang.String var28 = var12.getHelp(100, "hi!");
    java.lang.String var29 = var5.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var49 = var0.getHelp(100, "");
    java.lang.String var50 = var0.toString();
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    java.lang.String var54 = var52.getUsage();
    java.util.Iterator var55 = var52.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    boolean var60 = var59.messagePrinted();
    boolean var61 = var59.messagePrinted();
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var74 = var63.getHelp((-1), "hi!");
    java.lang.String var75 = var59.getHelp(100, "hi!");
    java.lang.String var76 = var52.getHelp(100);
    java.lang.String var77 = var0.getHelp(1, var76);
    var0.finalize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var28.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var75.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));

  }

  public void test409() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    var0.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var0.setShortflag('4');
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    java.lang.String var15 = var13.getHelp();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    java.lang.String var21 = var19.getHelp();
    com.martiansoftware.jsap.ParseException var22 = new com.martiansoftware.jsap.ParseException(var21);
    java.lang.String[] var23 = new java.lang.String[] { var21};
    com.martiansoftware.jsap.JSAPResult var24 = var13.parse(var23);
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var26 = var25.getHelp();
    java.util.Iterator var27 = var25.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var28 = var25.getIDMap();
    java.lang.String var29 = var25.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var33 = var24.getByte(var29, (byte)(-1));
    com.martiansoftware.jsap.SimpleJSAP var34 = new com.martiansoftware.jsap.SimpleJSAP(var29);
    java.lang.String var35 = com.martiansoftware.util.StringUtils.noNull(var29);
    var0.setLongflag(var35);
    java.lang.String var37 = var0.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var15.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var21.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == null);

  }

  public void test410() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    boolean var1 = var0.mustExist();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var3 = var2.getHelp();
    java.lang.String var4 = var2.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var5 = new com.martiansoftware.jsap.SimpleJSAP(var4);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var6 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var18 = var7.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var22 = var20.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var32 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var40 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var32, "hi!", true, '4', "", var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption(var4, (com.martiansoftware.jsap.StringParser)var6, var18, false, '4', "hi!");
    java.lang.Object var60 = var0.parse(var4);
    var0.setUp();
    var0.setUp();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);

  }

  public void test411() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    java.util.Iterator var3 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var4 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var5 = var4.getHelp();
    java.lang.String var6 = var4.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var7 = new com.martiansoftware.jsap.SimpleJSAP(var6);
    boolean var8 = var7.messagePrinted();
    boolean var9 = var7.messagePrinted();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var22 = var11.getHelp((-1), "hi!");
    java.lang.String var23 = var7.getHelp(100, "hi!");
    java.lang.String var24 = var0.getHelp(100);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)100);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var23.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));

  }

  public void test412() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var25 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var26 = var25.getParameter();
    boolean var27 = var25.declaredListSeparator();
    char var28 = var25.getShortflag();
    char var29 = var25.getShortflag();
    com.martiansoftware.jsap.Switch var30 = var8.setShortFlag(var29);
    java.lang.String var31 = var30.getSyntax();
    java.lang.String var32 = var30.getSyntax();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var36 = var34.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var38 = var34.setRequired(false);
    com.martiansoftware.jsap.JSAP var39 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var40 = var39.getHelp();
    java.lang.String var41 = var39.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var42 = new com.martiansoftware.jsap.SimpleJSAP(var41);
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var42.unregisterParameter((com.martiansoftware.jsap.Parameter)var44);
    java.lang.String var46 = var42.getUsage();
    java.lang.String var47 = var42.getUsage();
    com.martiansoftware.jsap.TestUsageString var48 = new com.martiansoftware.jsap.TestUsageString(var47);
    com.martiansoftware.jsap.stringparsers.URLStringParser var49 = new com.martiansoftware.jsap.stringparsers.URLStringParser();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var50 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var51 = var50.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var52 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var53 = var52.getLongflag();
    var52.setShortflag('#');
    java.lang.String var56 = var52.getLongflag();
    char var57 = var52.getShortflag();
    var50.setShortflag(var57);
    java.lang.String[] var59 = var50.getDefaults();
    boolean var60 = var50.getIslist();
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var62 = var61.getHelp();
    java.lang.String var63 = var61.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var64 = new com.martiansoftware.jsap.SimpleJSAP(var63);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var64.unregisterParameter((com.martiansoftware.jsap.Parameter)var66);
    java.lang.String var68 = var64.getUsage();
    java.lang.String var69 = var64.getUsage();
    com.martiansoftware.jsap.UnflaggedOption var70 = new com.martiansoftware.jsap.UnflaggedOption(var47, (com.martiansoftware.jsap.StringParser)var49, var60, var69);
    com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var71 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser(var32, false, var60);
    com.martiansoftware.jsap.ant.SwitchConfiguration var72 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var73 = var72.getLongflag();
    var72.setShortflag('#');
    java.lang.String var76 = var72.getLongflag();
    var72.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var80 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var72.setShortflag('4');
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var85 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var89 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var90 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var91 = var90.getShortFlag();
    var72.setShortflag(var91);
    com.martiansoftware.jsap.FlaggedOption var94 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var96 = var94.setRequired(false);
    java.lang.String var97 = var94.getID();
    var72.setId(var97);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var99 = var71.parse(var97);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "[--hi!]"+ "'", var31.equals("[--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "[--hi!]"+ "'", var32.equals("[--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "[--help]"+ "'", var46.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "[--help]"+ "'", var47.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "[--help]"+ "'", var68.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "[--help]"+ "'", var69.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var97 + "' != '" + "hi!"+ "'", var97.equals("hi!"));

  }

  public void test413() throws Throwable {

    com.martiansoftware.jsap.TestOption var0 = new com.martiansoftware.jsap.TestOption();
    int var1 = var0.countTestCases();
    junit.framework.Assert.assertNotNull((java.lang.Object)var0);
    var0.testSettersAndGetters();
    junit.framework.TestResult var4 = var0.run();
    var0.testSettersAndGetters();
    var0.testSettersAndGetters();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);

  }

  public void test414() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    java.lang.String[] var22 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var32 = var0.getProperty("", "hi!");
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var33 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser("");
    com.martiansoftware.jsap.UnflaggedOption var34 = new com.martiansoftware.jsap.UnflaggedOption("");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    java.lang.String var40 = var38.getHelp();
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.ParseException var47 = new com.martiansoftware.jsap.ParseException(var46);
    java.lang.String[] var48 = new java.lang.String[] { var46};
    com.martiansoftware.jsap.JSAPResult var49 = var38.parse(var48);
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var59 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var67 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var59, "hi!", true, '4', "", var66);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var68 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var69 = new java.lang.Object[] { var68};
    java.lang.Object[] var70 = var49.getObjectArray(var66, var69);
    com.martiansoftware.jsap.stringparsers.FileStringParser var71 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var76 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var77 = var73.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var78 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var79 = var78.getID();
    java.lang.Object var80 = var71.parse(var79);
    java.io.File[] var81 = var49.getFileArray(var79);
    com.martiansoftware.jsap.JSAP var82 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var87 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var90 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var91 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var92 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var93 = var82.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var94 = new com.martiansoftware.jsap.SimpleJSAP(var93);
    com.martiansoftware.jsap.JSAPException var95 = new com.martiansoftware.jsap.JSAPException(var93);
    java.lang.Class[] var96 = var49.getClassArray(var93);
    java.lang.String[] var97 = new java.lang.String[] { var93};
    com.martiansoftware.jsap.UnflaggedOption var98 = var34.setDefault(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var40.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "hi!"+ "'", var76.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "hi!"+ "'", var79.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ""+ "'", var93.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var97 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var98 == null);

  }

  public void test415() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    java.lang.String var17 = var4.getIDByLongFlag(var16);
    java.util.Iterator var18 = var4.idIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);

  }

  public void test416() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testRequired();
    var0.testSimpleDefault();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testRequired();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test417() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ClassStringParser var0 = new com.martiansoftware.jsap.stringparsers.ClassStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var10 = var9.getShortFlag();
    char var11 = var9.getShortFlag();
    java.lang.Character var12 = var9.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var22 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var25 = var9.setDefault("hi!");
    java.lang.String var26 = var9.getHelp();
    com.martiansoftware.jsap.RequiredParameterMissingException var27 = new com.martiansoftware.jsap.RequiredParameterMissingException(var26);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var28 = var0.parse(var26);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + '4'+ "'", var12.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "hi!"+ "'", var26.equals("hi!"));

  }

  public void test418() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.toString();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var5 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var6 = var5.getParameter();
    boolean var7 = var5.declaredListSeparator();
    char var8 = var5.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var11 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var10);
    java.lang.String var12 = var10.toString();
    var5.setLongflag(var12);
    java.lang.String[] var14 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize(var12);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.util.Iterator var17 = var15.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var18 = var15.getIDMap();
    java.lang.String var19 = var15.getHelp();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    java.util.Iterator var23 = var20.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    boolean var28 = var27.messagePrinted();
    boolean var29 = var27.messagePrinted();
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var42 = var31.getHelp((-1), "hi!");
    java.lang.String var43 = var27.getHelp(100, "hi!");
    java.lang.String var44 = var20.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var54 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, "hi!", true, '4', "", var61);
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var64 = var15.getHelp(100, "");
    java.lang.String var65 = com.martiansoftware.util.StringUtils.padRightToWidth(var12, 100);
    java.lang.String[] var66 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var67 = var0.parse(var66);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var71 = var69.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var73 = var69.setRequired(false);
    var0.unregisterParameter((com.martiansoftware.jsap.Parameter)var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var12.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var43.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'.                                    "+ "'", var65.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'.                                    "));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);

  }

  public void test419() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DoubleStringParser var0 = new com.martiansoftware.jsap.stringparsers.DoubleStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var10 = var9.getShortFlag();
    char var11 = var9.getShortFlag();
    java.lang.Character var12 = var9.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var22 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var25 = var9.setDefault("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var26 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var27 = var26.getParameter();
    boolean var28 = var26.declaredListSeparator();
    char var29 = var26.getShortflag();
    char var30 = var26.getShortflag();
    com.martiansoftware.jsap.Switch var31 = var9.setShortFlag(var30);
    java.lang.String var32 = var31.getSyntax();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var38 = var34.setHelp("hi!");
    var34.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var41 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    boolean var46 = var45.messagePrinted();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var58 = var47.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    com.martiansoftware.jsap.UnflaggedOption var60 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var41, var46, var58);
    junit.framework.Assert.assertFalse(var32, var46);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var62 = var0.parse(var32);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + '4'+ "'", var12.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "[--hi!]"+ "'", var32.equals("[--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));

  }

  public void test420() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var15 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var31 = var29.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var59 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var67 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var59, "hi!", true, '4', "", var66);
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption(var13, (com.martiansoftware.jsap.StringParser)var15, var27, false, '4', "hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch(var13);
    var0.setProperty("hi!", var13);
    com.martiansoftware.jsap.TestUsageString var71 = new com.martiansoftware.jsap.TestUsageString(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));

  }

  public void test421() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    boolean var5 = var3.messagePrinted();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var18 = var7.getHelp((-1), "hi!");
    java.lang.String var19 = var3.getHelp(100, "hi!");
    java.util.Iterator var20 = var3.getUnflaggedOptionsIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var19.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);

  }

  public void test422() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    java.util.Iterator var3 = var0.getUnflaggedOptionsIterator();
    var0.finalize();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var8 = new com.martiansoftware.jsap.SimpleJSAP(var7);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var9 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var21 = var10.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var25 = var23.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var29 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var34 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var35 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var43 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var35, "hi!", true, '4', "", var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var53 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var61 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var53, "hi!", true, '4', "", var60);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption(var7, (com.martiansoftware.jsap.StringParser)var9, var21, false, '4', "hi!");
    com.martiansoftware.jsap.Switch var63 = new com.martiansoftware.jsap.Switch(var7);
    com.martiansoftware.jsap.Flagged var64 = var0.getByLongFlag(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);

  }

  public void test423() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var38 = var34.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var39 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var40 = var39.getID();
    boolean[] var41 = var14.getBooleanArray(var40);
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var46 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var47 = var43.setHelp("hi!");
    java.lang.String[] var48 = var14.getStringArray("hi!");
    java.util.Iterator var49 = var14.getErrorMessageIterator();
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    java.util.Iterator var52 = var50.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var53 = var50.getIDMap();
    java.lang.String var54 = var50.getUsage();
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException(var54);
    java.net.InetAddress[] var56 = var14.getInetAddressArray(var54);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var57 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var61 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var67 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var73 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var74 = var73.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var75 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var67, "hi!", true, '4', "", var74);
    com.martiansoftware.jsap.UnspecifiedParameterException var76 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    java.lang.String var77 = var76.getID();
    com.martiansoftware.jsap.JSAPException var78 = new com.martiansoftware.jsap.JSAPException(var77);
    java.lang.String var79 = com.martiansoftware.util.StringUtils.noNull(var77);
    var57.setDefault(var79);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      char var81 = var14.getChar(var79);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!"+ "'", var40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "hi!"+ "'", var46.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));

  }

  public void test424() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var23 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var24 = var20.setHelp("hi!");
    var20.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var27 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    java.lang.String var30 = var28.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    boolean var32 = var31.messagePrinted();
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var44 = var33.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var27, var32, var44);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var50 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var54 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var55 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var56 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var62 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var63 = var62.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var64 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var56, "hi!", true, '4', "", var63);
    com.martiansoftware.jsap.UnflaggedOption var65 = var46.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var66 = var18.setList(true);
    java.lang.String var67 = var18.getUsage();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!"+ "'", var23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "[1:2:...:N ]"+ "'", var67.equals("[1:2:...:N ]"));

  }

  public void test425() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ShortStringParser var0 = new com.martiansoftware.jsap.stringparsers.ShortStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var4.unregisterParameter((com.martiansoftware.jsap.Parameter)var6);
    java.lang.String var8 = var4.getUsage();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var9 = var0.parse(var8);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "[--help]"+ "'", var8.equals("[--help]"));

  }

  public void test426() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var6 = var4.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var8 = var4.setRequired(false);
    var0.setAllowmultipledeclarations(false);
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var19 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var26 = var25.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var27 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var19, "hi!", true, '4', "", var26);
    java.lang.Character var28 = var27.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var31 = var27.setLongFlag("hi!");
    boolean var32 = var27.isList();
    var0.setRequired(var32);
    boolean var34 = var0.hasProperties();
    java.lang.String var35 = var0.getLongflag();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + '4'+ "'", var28.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == null);

  }

  public void test427() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var42 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var49 = var48.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var50 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var42, "hi!", true, '4', "", var49);
    boolean[] var51 = var14.getBooleanArray("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    java.lang.String var54 = var52.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var55 = new com.martiansoftware.jsap.SimpleJSAP(var54);
    boolean var56 = var55.messagePrinted();
    java.lang.String var57 = var55.getHelp();
    java.lang.String[] var58 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize(var57);
    short[] var59 = var14.getShortArray(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var57.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);

  }

  public void test428() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    char var11 = var8.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var16 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var17 = var13.setHelp("hi!");
    var13.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var20 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    boolean var25 = var24.messagePrinted();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.UnflaggedOption var39 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var20, var25, var37);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    com.martiansoftware.jsap.UnflaggedOption var58 = var39.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var59 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var60 = var58.setStringParser((com.martiansoftware.jsap.StringParser)var59);
    char var61 = var58.getListSeparator();
    com.martiansoftware.jsap.Switch var62 = var8.setShortFlag(var61);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = var8.setLongFlag("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var72 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var76 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var77 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var78 = var67.getHelp((-1), "hi!");
    java.lang.String var79 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", (-1));
    com.martiansoftware.jsap.QualifiedSwitch var80 = new com.martiansoftware.jsap.QualifiedSwitch(var79);
    char var81 = var80.getShortFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!"+ "'", var16.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "hi!"+ "'", var79.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == '\u0000');

  }

  public void test429() throws Throwable {

    com.martiansoftware.jsap.QualifiedSwitch var1 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var2 = var1.getLongFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);

  }

  public void test430() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    com.martiansoftware.jsap.stringparsers.FileStringParser var3 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var3.tearDown();
    var3.setUp();
    boolean var6 = var3.mustExist();
    com.martiansoftware.jsap.stringparsers.FileStringParser var7 = var0.setMustExist(var6);
    var0.setUp();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);

  }

  public void test431() throws Throwable {

    com.martiansoftware.jsap.TestOption var0 = new com.martiansoftware.jsap.TestOption();
    var0.testParsing();
    com.martiansoftware.jsap.TestDefaults var2 = new com.martiansoftware.jsap.TestDefaults();
    var2.tearDown();
    junit.framework.TestResult var4 = var2.run();
    var0.run(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);

  }

  public void test432() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var10 = var9.countTestCases();
    var9.testSwitchParse();
    var9.testLongFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);

  }

  public void test433() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    boolean var1 = var0.mustBeDirectory();
    boolean var2 = var0.mustExist();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);

  }

  public void test434() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    boolean var47 = var27.isList();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var48 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var49 = var48.getParameter();
    boolean var50 = var48.declaredListSeparator();
    char var51 = var48.getListseparator();
    com.martiansoftware.jsap.UnflaggedOption var52 = var27.setListSeparator(var51);
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var62 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var63 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var64 = var53.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var65 = new com.martiansoftware.jsap.SimpleJSAP(var64);
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var69 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var73 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var74 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var78 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var82 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var83 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var84 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var86 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var90 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var91 = var90.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var92 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var84, "hi!", true, '4', "", var91);
    java.lang.String var93 = var92.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var93);
    com.martiansoftware.jsap.TestFlaggedOption var95 = new com.martiansoftware.jsap.TestFlaggedOption(var93);
    com.martiansoftware.jsap.Switch var96 = new com.martiansoftware.jsap.Switch(var64, '4', var93);
    char var97 = var96.getShortFlag();
    com.martiansoftware.jsap.UnflaggedOption var98 = var52.setListSeparator(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + ""+ "'", var91.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var93.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var98 == null);

  }

  public void test435() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test7();
    var0.test2();

  }

  public void test436() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.JSAPException var39 = new com.martiansoftware.jsap.JSAPException(var37);
    java.util.Date var40 = var14.getDate(var37);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var45 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var46 = var42.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var47 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = var42.setStringParser((com.martiansoftware.jsap.StringParser)var47);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var58 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var61 = var48.setHelp("hi!");
    int[] var62 = var14.getIntArray("hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    java.lang.String var65 = var63.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var66 = new com.martiansoftware.jsap.SimpleJSAP(var65);
    boolean var67 = var66.messagePrinted();
    java.lang.String var68 = var66.getHelp();
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    java.lang.String var71 = var69.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var72 = new com.martiansoftware.jsap.SimpleJSAP(var71);
    boolean var73 = var72.messagePrinted();
    java.lang.String var74 = var72.getHelp();
    com.martiansoftware.jsap.ParseException var75 = new com.martiansoftware.jsap.ParseException(var74);
    java.lang.String[] var76 = new java.lang.String[] { var74};
    com.martiansoftware.jsap.JSAPResult var77 = var66.parse(var76);
    com.martiansoftware.jsap.JSAP var78 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var79 = var78.getHelp();
    java.lang.String var80 = var78.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var81 = new com.martiansoftware.jsap.SimpleJSAP(var80);
    float[] var82 = var77.getFloatArray(var80);
    java.net.URL var83 = var14.getURL(var80);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail(var80);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "hi!"+ "'", var45.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var68.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var74.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + ""+ "'", var80.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == null);

  }

  public void test437() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var13 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var21 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var13, "hi!", true, '4', "", var20);
    java.lang.String var22 = var21.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var22);
    boolean var24 = var3.idExists(var22);
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var25 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser(var22);
    var25.testFloatRGB();
    var25.testFloatRGB();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var22.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);

  }

  public void test438() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BooleanStringParser var0 = new com.martiansoftware.jsap.stringparsers.BooleanStringParser();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var1 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var2 = var1.getParameter();
    java.lang.String var3 = var1.getLongflag();
    com.martiansoftware.jsap.Defaults var4 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var5 = var4.idIterator();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var18 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var28 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var35 = var34.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var36 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var28, "hi!", true, '4', "", var35);
    java.lang.Character var37 = var36.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var40 = var36.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var41 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var42 = new java.lang.String[] { "hi!"};
    var4.addDefault("hi!", var42);
    java.lang.String var44 = com.martiansoftware.util.StringUtils.noNull("hi!");
    var1.setId("hi!");
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    boolean var50 = var49.messagePrinted();
    java.lang.String var51 = var49.getHelp();
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    java.lang.String var54 = var52.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var55 = new com.martiansoftware.jsap.SimpleJSAP(var54);
    boolean var56 = var55.messagePrinted();
    java.lang.String var57 = var55.getHelp();
    com.martiansoftware.jsap.ParseException var58 = new com.martiansoftware.jsap.ParseException(var57);
    java.lang.String[] var59 = new java.lang.String[] { var57};
    com.martiansoftware.jsap.JSAPResult var60 = var49.parse(var59);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var70 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var78 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, "hi!", true, '4', "", var77);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var79 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var80 = new java.lang.Object[] { var79};
    java.lang.Object[] var81 = var60.getObjectArray(var77, var80);
    var1.setLongflag(var77);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var83 = var0.parse(var77);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + '4'+ "'", var37.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "hi!"+ "'", var44.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var51.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var57.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);

  }

  public void test439() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    java.lang.String var12 = var8.getSyntax();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var14 = var13.getHelp();
    java.lang.String var15 = var13.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var16 = new com.martiansoftware.jsap.SimpleJSAP(var15);
    boolean var17 = var16.messagePrinted();
    java.lang.String var18 = var16.getHelp();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    boolean var23 = var22.messagePrinted();
    java.lang.String var24 = var22.getHelp();
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException(var24);
    java.lang.String[] var26 = new java.lang.String[] { var24};
    com.martiansoftware.jsap.JSAPResult var27 = var16.parse(var26);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var37 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var38 = var27.getClass("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var40 = var39.getID();
    com.martiansoftware.jsap.Switch var41 = var8.setLongFlag(var40);
    java.lang.Character var42 = var41.getShortFlagCharacter();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "[-4|--hi!]"+ "'", var12.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var18.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var24.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!"+ "'", var40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + '4'+ "'", var42.equals('4'));

  }

  public void test440() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getHelp();
    java.lang.String var5 = var0.toString();
    com.martiansoftware.jsap.ant.ParserProperty var6 = new com.martiansoftware.jsap.ant.ParserProperty();
    java.lang.String var7 = var6.getValue();
    java.lang.String var8 = var6.getValue();
    junit.framework.Assert.assertNotNull(var5, (java.lang.Object)var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == null);

  }

  public void test441() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test1();
    var0.test3();
    var0.test1();

  }

  public void test442() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var6 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var5);
    java.lang.String var7 = var5.toString();
    var0.setLongflag(var7);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var9 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var10 = var9.hasProperties();
    java.lang.String var11 = var9.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var12 = new com.martiansoftware.jsap.ant.ParserProperty();
    var9.addConfiguredProperty(var12);
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var15 = var14.getHelp();
    java.lang.String var16 = var14.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var17 = new com.martiansoftware.jsap.SimpleJSAP(var16);
    boolean var18 = var17.messagePrinted();
    java.lang.String var19 = var17.getHelp();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    boolean var24 = var23.messagePrinted();
    java.lang.String var25 = var23.getHelp();
    com.martiansoftware.jsap.ParseException var26 = new com.martiansoftware.jsap.ParseException(var25);
    java.lang.String[] var27 = new java.lang.String[] { var25};
    com.martiansoftware.jsap.JSAPResult var28 = var17.parse(var27);
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var30 = var29.getHelp();
    java.util.Iterator var31 = var29.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var32 = var29.getIDMap();
    java.lang.String var33 = var29.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var37 = var28.getByte(var33, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch(var33);
    var12.setValue(var33);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var49 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var52 = new com.martiansoftware.jsap.TestOption();
    int var53 = var52.countTestCases();
    int var54 = var52.countTestCases();
    java.lang.String var55 = com.martiansoftware.util.StringUtils.padRight("hi!", var54);
    com.martiansoftware.jsap.TestUsageString var56 = new com.martiansoftware.jsap.TestUsageString(var55);
    var12.setValue(var55);
    var0.addConfiguredProperty(var12);
    java.lang.String var59 = var0.getLongflag();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var7.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var19.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var25.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi! "+ "'", var55.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var59.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));

  }

  public void test443() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BooleanStringParser var0 = new com.martiansoftware.jsap.stringparsers.BooleanStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var26 = var15.getClass("hi!");
    java.lang.String var29 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var30 = var15.getURLArray(var29);
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    java.util.Iterator var33 = var31.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var34 = var31.getIDMap();
    java.lang.String var35 = var31.getHelp();
    java.lang.String var36 = var31.toString();
    java.lang.Object[] var37 = var15.getObjectArray(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var47 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var55 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var47, "hi!", true, '4', "", var54);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var56 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    java.lang.String var59 = var57.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var60 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var64 = var62.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var66 = var62.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var71 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var72 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var56, var59, false, '4', "hi!");
    java.lang.String var75 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var76 = com.martiansoftware.util.StringUtils.wrapToList(var59, 1);
    java.lang.String var77 = var15.getString(var59);
    com.martiansoftware.jsap.JSAP var78 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var83 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var86 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var87 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var88 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var89 = var78.getHelp((-1), "hi!");
    long[] var90 = var15.getLongArray("hi!");
    com.martiansoftware.jsap.JSAPException var91 = new com.martiansoftware.jsap.JSAPException("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var92 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "hi!"+ "'", var29.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "hi!"+ "'", var75.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + ""+ "'", var89.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);

  }

  public void test444() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var6 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var7 = var3.setHelp("hi!");
    var3.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var10 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var28 = new com.martiansoftware.jsap.SimpleJSAP(var27);
    com.martiansoftware.jsap.UnflaggedOption var29 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var10, var15, var27);
    boolean var30 = var29.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var35 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var36 = var32.setHelp("hi!");
    var32.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var39 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var50 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var54 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var55 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var56 = var45.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var57 = new com.martiansoftware.jsap.SimpleJSAP(var56);
    com.martiansoftware.jsap.UnflaggedOption var58 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var39, var44, var56);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var62 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var66 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var67 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var68 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var74 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var75 = var74.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var76 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var68, "hi!", true, '4', "", var75);
    com.martiansoftware.jsap.UnflaggedOption var77 = var58.setRequired(true);
    com.martiansoftware.jsap.UnflaggedOption var78 = var29.setRequired(true);
    var0.unregisterParameter((com.martiansoftware.jsap.Parameter)var78);
    java.lang.String var80 = var0.getHelp();
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var85 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var86 = var82.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var87 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var88 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    com.martiansoftware.jsap.Parameter var89 = var0.getByID("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "hi!"+ "'", var6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "hi!"+ "'", var35.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + ""+ "'", var80.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi!"+ "'", var85.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == null);

  }

  public void test445() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    java.lang.String[] var35 = var34.getDefault();
    java.lang.String var36 = var34.getHelp();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var37 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var38 = var37.getParameter();
    boolean var39 = var37.declaredListSeparator();
    char var40 = var37.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var43 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var42);
    java.lang.String var44 = var42.toString();
    var37.setLongflag(var44);
    java.lang.String[] var46 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize(var44);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var36, var44);
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var44.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);

  }

  public void test446() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.FlaggedOption var9 = var5.setUsageName(var8);
    java.lang.String var10 = var5.getLongFlag();
    java.lang.String var11 = var5.getSyntax();
    java.lang.String var12 = var5.getHelp();
    com.martiansoftware.jsap.stringparsers.FileStringParser var13 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var13.tearDown();
    var13.setUp();
    var13.setUp();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var21 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var22 = var18.setHelp("hi!");
    boolean var23 = var18.allowMultipleDeclarations();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var24 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    junit.framework.Assert.assertNotSame((java.lang.Object)var23, (java.lang.Object)var24);
    com.martiansoftware.jsap.stringparsers.FileStringParser var26 = var13.setMustBeFile(var23);
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var36 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    var13.setProperty("hi!", var56);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var59 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var60 = var59.hasProperties();
    com.martiansoftware.jsap.Parameter var61 = var59.getParameter();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var62 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var63 = var62.hasProperties();
    java.lang.String var64 = var62.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var65 = new com.martiansoftware.jsap.ant.ParserProperty();
    var62.addConfiguredProperty(var65);
    boolean var67 = var62.getGreedy();
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var76 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var77 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var83 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var84 = var83.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var85 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var77, "hi!", true, '4', "", var84);
    java.lang.Character var86 = var85.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var89 = var85.setLongFlag("hi!");
    boolean var90 = var85.isList();
    var62.setGreedy(var90);
    var59.setGreedy(var90);
    com.martiansoftware.jsap.defaultsources.PropertyDefaultSource var93 = new com.martiansoftware.jsap.defaultsources.PropertyDefaultSource(var56, var90);
    com.martiansoftware.jsap.FlaggedOption var94 = var5.setUsageName(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "[<>]"+ "'", var11.equals("[<>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "hi!"+ "'", var21.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + ""+ "'", var84.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + '4'+ "'", var86.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);

  }

  public void test447() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    com.martiansoftware.jsap.UnflaggedOption var21 = new com.martiansoftware.jsap.UnflaggedOption("");
    java.lang.String var22 = var21.getSyntax();
    char var23 = var21.getListSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "[<>]"+ "'", var22.equals("[<>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == ':');

  }

  public void test448() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var51 = var27.setList(false);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var61 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var69 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var61, "hi!", true, '4', "", var68);
    com.martiansoftware.jsap.UnflaggedOption var70 = var51.setStringParser((com.martiansoftware.jsap.StringParser)var61);
    char var71 = var70.getListSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == ':');

  }

  public void test449() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var16 = var15.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var17 = var3.setScreenWidth(var16);
    boolean var18 = var17.messagePrinted();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var20 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var21 = var20.idIterator();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var43 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var51 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var43, "hi!", true, '4', "", var50);
    java.lang.String[] var52 = new java.lang.String[] { var50};
    var20.addDefault(var33, var52);
    java.lang.String[] var54 = new java.lang.String[] { var33};
    com.martiansoftware.jsap.JSAPResult var55 = var19.parse(var54);
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    boolean var60 = var59.messagePrinted();
    java.lang.String var61 = var59.getHelp();
    com.martiansoftware.jsap.JSAPResult var62 = var19.parse(var61);
    com.martiansoftware.jsap.JSAPResult var63 = var17.parse(var61);
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    java.lang.String var66 = var64.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var67 = new com.martiansoftware.jsap.SimpleJSAP(var66);
    boolean var68 = var67.messagePrinted();
    boolean var69 = var67.messagePrinted();
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var76 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var80 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var81 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var82 = var71.getHelp((-1), "hi!");
    java.lang.String var83 = var67.getHelp(100, "hi!");
    boolean[] var84 = var63.getBooleanArray(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var61.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + ""+ "'", var82.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var83.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);

  }

  public void test450() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var6 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var7 = var1.setStringParser((com.martiansoftware.jsap.StringParser)var6);
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var17 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var20 = var7.setHelp("hi!");
    java.lang.String var21 = var20.getUsageName();
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var22 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser(var21);
    var22.testBasicParse();
    var22.testBasicParse();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var22.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "hi!"+ "'", var21.equals("hi!"));

  }

  public void test451() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testRequired();
    var0.testConfig();
    var0.testConfig();
    java.lang.String var5 = var0.getName();
    var0.setUp();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);

  }

  public void test452() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var47 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var48 = var46.setStringParser((com.martiansoftware.jsap.StringParser)var47);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var58 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var66 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var58, "hi!", true, '4', "", var65);
    java.lang.String var67 = var66.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var67);
    com.martiansoftware.jsap.UnflaggedOption var69 = var46.setUsageName(var67);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var70 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var71 = var70.getRequired();
    com.martiansoftware.jsap.UnflaggedOption var72 = var69.setList(var71);
    java.lang.String var73 = var72.getUsage();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var67.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "<(-4|--)[:<hi!>]>"+ "'", var73.equals("<(-4|--)[:<hi!>]>"));

  }

  public void test453() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    java.lang.String var1 = var0.getStringparser();
    com.martiansoftware.jsap.Parameter var2 = var0.getParameter();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);

  }

  public void test454() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var6 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var7 = var1.setStringParser((com.martiansoftware.jsap.StringParser)var6);
    char var8 = var1.getListSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == ':');

  }

  public void test455() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    java.lang.String var4 = var1.getID();
    java.lang.String[] var5 = var1.getDefault();
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    java.lang.String var8 = var7.getFlag();
    com.martiansoftware.jsap.FlaggedOption var9 = var1.setDefault(var8);
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    java.lang.String var15 = var13.getHelp();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    java.lang.String var21 = var19.getHelp();
    com.martiansoftware.jsap.ParseException var22 = new com.martiansoftware.jsap.ParseException(var21);
    java.lang.String[] var23 = new java.lang.String[] { var21};
    com.martiansoftware.jsap.JSAPResult var24 = var13.parse(var23);
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var34 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var35 = var24.getClass("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    com.martiansoftware.jsap.IDMap var40 = var39.getIDMap();
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var46 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var50 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var52 = var41.getHelp((-1), "hi!");
    java.lang.String var53 = var40.getIDByLongFlag(var52);
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var62 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var63 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var71 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var63, "hi!", true, '4', "", var70);
    java.util.List var73 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var74 = var40.getIDByLongFlag("");
    long[] var75 = var24.getLongArray("");
    com.martiansoftware.jsap.JSAPException var76 = new com.martiansoftware.jsap.JSAPException("");
    com.martiansoftware.jsap.FlaggedOption var77 = var1.setUsageName("");
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "4"+ "'", var8.equals("4"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var15.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var21.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);

  }

  public void test456() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    boolean var1 = var0.getIslist();
    com.martiansoftware.jsap.ant.ParserProperty var2 = new com.martiansoftware.jsap.ant.ParserProperty();
    java.lang.String var3 = var2.getValue();
    java.lang.String var4 = var2.getName();
    java.lang.String var5 = var2.getValue();
    java.lang.String var6 = var2.getValue();
    com.martiansoftware.jsap.ant.SwitchConfiguration var7 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var8 = var7.getLongflag();
    var7.setShortflag('#');
    java.lang.String var11 = var7.getLongflag();
    var7.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var7.setShortflag('4');
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    java.lang.String var19 = var17.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var20 = new com.martiansoftware.jsap.SimpleJSAP(var19);
    boolean var21 = var20.messagePrinted();
    java.lang.String var22 = var20.getHelp();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var24 = var23.getHelp();
    java.lang.String var25 = var23.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    boolean var27 = var26.messagePrinted();
    java.lang.String var28 = var26.getHelp();
    com.martiansoftware.jsap.ParseException var29 = new com.martiansoftware.jsap.ParseException(var28);
    java.lang.String[] var30 = new java.lang.String[] { var28};
    com.martiansoftware.jsap.JSAPResult var31 = var20.parse(var30);
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.util.Iterator var34 = var32.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var35 = var32.getIDMap();
    java.lang.String var36 = var32.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var40 = var31.getByte(var36, (byte)(-1));
    com.martiansoftware.jsap.SimpleJSAP var41 = new com.martiansoftware.jsap.SimpleJSAP(var36);
    java.lang.String var42 = com.martiansoftware.util.StringUtils.noNull(var36);
    var7.setLongflag(var42);
    var2.setValue(var42);
    var0.addConfiguredProperty(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var22.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var28.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));

  }

  public void test457() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    com.martiansoftware.jsap.ant.SwitchConfiguration var2 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var3 = var2.getLongflag();
    com.martiansoftware.jsap.ant.DefaultValue var4 = new com.martiansoftware.jsap.ant.DefaultValue();
    var2.addConfiguredDefault(var4);
    var0.addConfiguredDefault(var4);
    com.martiansoftware.jsap.stringparsers.DateStringParser var7 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var7.tearDown();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var11 = var7.getProperty("hi!");
    var4.addText("hi!");
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var17 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var18 = var14.setHelp("hi!");
    var14.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var21 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var23 = var22.getHelp();
    java.lang.String var24 = var22.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var25 = new com.martiansoftware.jsap.SimpleJSAP(var24);
    boolean var26 = var25.messagePrinted();
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var38 = var27.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    com.martiansoftware.jsap.UnflaggedOption var40 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var21, var26, var38);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.UnflaggedOption var59 = var40.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var63 = var61.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var64 = var40.setList(false);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var68 = var66.setRequired(false);
    java.lang.String var69 = var66.getID();
    boolean var70 = var66.allowMultipleDeclarations();
    com.martiansoftware.jsap.UnflaggedOption var71 = var64.setList(var70);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var72 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser("hi!", var70);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "hi!"+ "'", var17.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "hi!"+ "'", var69.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);

  }

  public void test458() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    java.lang.String[] var1 = var0.getDefaults();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var19.getSyntax();
    java.lang.Character var21 = var19.getShortFlagCharacter();
    boolean var22 = var19.required();
    var0.setIslist(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var20.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + '4'+ "'", var21.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == true);

  }

  public void test459() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var3 = new com.martiansoftware.jsap.ant.ParserProperty();
    var0.addConfiguredProperty(var3);
    boolean var5 = var0.getGreedy();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var15 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var23 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var15, "hi!", true, '4', "", var22);
    java.lang.Character var24 = var23.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var27 = var23.setLongFlag("hi!");
    boolean var28 = var23.isList();
    var0.setGreedy(var28);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var39 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var42 = new com.martiansoftware.jsap.TestOption();
    int var43 = var42.countTestCases();
    int var44 = var42.countTestCases();
    java.lang.String var45 = com.martiansoftware.util.StringUtils.padRight("hi!", var44);
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    boolean var50 = var49.messagePrinted();
    java.lang.String var51 = var49.getHelp();
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    java.lang.String var54 = var52.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var55 = new com.martiansoftware.jsap.SimpleJSAP(var54);
    boolean var56 = var55.messagePrinted();
    java.lang.String var57 = var55.getHelp();
    com.martiansoftware.jsap.ParseException var58 = new com.martiansoftware.jsap.ParseException(var57);
    java.lang.String[] var59 = new java.lang.String[] { var57};
    com.martiansoftware.jsap.JSAPResult var60 = var49.parse(var59);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var70 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var71 = var60.getClass("hi!");
    java.lang.String var74 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var75 = var60.getURLArray(var74);
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    java.util.Iterator var78 = var76.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var79 = var76.getIDMap();
    java.lang.String var80 = var76.getHelp();
    java.lang.String var81 = var76.toString();
    java.lang.Object[] var82 = var60.getObjectArray(var81);
    com.martiansoftware.jsap.SimpleJSAP var83 = new com.martiansoftware.jsap.SimpleJSAP(var45, var81);
    var0.setId(var81);
    java.lang.String var85 = var0.getId();
    char var86 = var0.getListseparator();
    com.martiansoftware.jsap.stringparsers.FileStringParser var87 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var87.tearDown();
    var87.setUp();
    com.martiansoftware.jsap.stringparsers.FileStringParser var90 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var90.tearDown();
    var90.setUp();
    boolean var93 = var90.mustExist();
    com.martiansoftware.jsap.stringparsers.FileStringParser var94 = var87.setMustExist(var93);
    var0.setRequired(var93);
    boolean var96 = var0.getRequired();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + '4'+ "'", var24.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "hi! "+ "'", var45.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var51.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var57.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "hi!"+ "'", var74.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + ""+ "'", var80.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + ""+ "'", var85.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == false);

  }

  public void test460() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var5.addDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var23 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var24 = var20.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var25 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = var20.setStringParser((com.martiansoftware.jsap.StringParser)var25);
    com.martiansoftware.jsap.FlaggedOption var27 = var5.setStringParser((com.martiansoftware.jsap.StringParser)var25);
    var25.tearDown();
    com.martiansoftware.jsap.stringparsers.DateStringParser var29 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var29.setUp();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var40 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var48 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var40, "hi!", true, '4', "", var47);
    java.lang.String var49 = var29.getProperty("");
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var59 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var72 = var29.getProperty("hi!", "hi!");
    com.martiansoftware.jsap.UnflaggedOption var73 = new com.martiansoftware.jsap.UnflaggedOption(var72);
    java.lang.Object var74 = var25.parse(var72);
    var25.setUp();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!"+ "'", var23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "hi!"+ "'", var72.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "hi!"+ "'", var74.equals("hi!"));

  }

  public void test461() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.UnspecifiedParameterException var18 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    java.lang.String var19 = var18.getID();
    com.martiansoftware.jsap.JSAPException var20 = new com.martiansoftware.jsap.JSAPException(var19);
    com.martiansoftware.jsap.JSAPException var21 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var20);
    com.martiansoftware.jsap.ParseException var22 = new com.martiansoftware.jsap.ParseException((java.lang.Throwable)var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));

  }

  public void test462() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    java.lang.String var5 = var0.getId();
    com.martiansoftware.jsap.Parameter var6 = var0.getParameter();
    boolean var7 = var0.hasProperties();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var9 = var8.getHelp();
    java.lang.String var10 = var8.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var11 = new com.martiansoftware.jsap.SimpleJSAP(var10);
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var11.unregisterParameter((com.martiansoftware.jsap.Parameter)var13);
    boolean var15 = var11.messagePrinted();
    junit.framework.Assert.assertEquals(var7, var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);

  }

  public void test463() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var5.addDefault("hi!");
    java.lang.String var19 = var5.getSyntax();
    java.lang.String var20 = var5.getSyntax();
    com.martiansoftware.jsap.stringparsers.ByteStringParser var21 = new com.martiansoftware.jsap.stringparsers.ByteStringParser();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var5, (java.lang.Object)var21);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "[<hi!>]"+ "'", var19.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "[<hi!>]"+ "'", var20.equals("[<hi!>]"));

  }

  public void test464() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ClassStringParser var0 = new com.martiansoftware.jsap.stringparsers.ClassStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var6 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var10 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var11 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var12 = var1.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var17 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var21 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var22 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var32 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var40 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var32, "hi!", true, '4', "", var39);
    java.lang.String var41 = var40.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var41);
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption(var41);
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch(var12, '4', var41);
    char var45 = var44.getShortFlag();
    java.lang.String var46 = var44.getID();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var47 = var0.parse(var46);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var41.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));

  }

  public void test465() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var51 = var27.setList(false);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var55 = var53.setRequired(false);
    java.lang.String var56 = var53.getID();
    boolean var57 = var53.allowMultipleDeclarations();
    com.martiansoftware.jsap.UnflaggedOption var58 = var51.setList(var57);
    boolean var59 = var51.isList();
    boolean var60 = var51.required();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "hi!"+ "'", var56.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == true);

  }

  public void test466() throws Throwable {

    com.martiansoftware.jsap.TestOption var0 = new com.martiansoftware.jsap.TestOption();
    int var1 = var0.countTestCases();
    int var2 = var0.countTestCases();
    int var3 = var0.countTestCases();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var4 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var5 = var4.hasProperties();
    java.lang.String var6 = var4.getStringparser();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var0, (java.lang.Object)var4);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == null);

  }

  public void test467() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    java.lang.String var25 = var24.getSyntax();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var29 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var34 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var35 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var43 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var35, "hi!", true, '4', "", var42);
    com.martiansoftware.jsap.UnspecifiedParameterException var44 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    java.lang.String var45 = var44.getID();
    java.lang.String var46 = var44.getID();
    java.lang.String var47 = var44.getID();
    com.martiansoftware.jsap.JSAPException var48 = new com.martiansoftware.jsap.JSAPException(var25, (java.lang.Throwable)var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "[-4|--hi!]"+ "'", var25.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));

  }

  public void test468() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = new com.martiansoftware.jsap.stringparsers.DateStringParser();
    var0.tearDown();
    var0.tearDown();

  }

  public void test469() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch(var21);
    java.lang.String var36 = var35.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame(var36);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "[]"+ "'", var36.equals("[]"));

  }

  public void test470() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    var7.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var14 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var31 = var20.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    com.martiansoftware.jsap.UnflaggedOption var33 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var14, var19, var31);
    boolean var34 = var33.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var39 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var40 = var36.setHelp("hi!");
    var36.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var43 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    java.lang.String var46 = var44.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var47 = new com.martiansoftware.jsap.SimpleJSAP(var46);
    boolean var48 = var47.messagePrinted();
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var60 = var49.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    com.martiansoftware.jsap.UnflaggedOption var62 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var43, var48, var60);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var72 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var78 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var79 = var78.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var80 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var72, "hi!", true, '4', "", var79);
    com.martiansoftware.jsap.UnflaggedOption var81 = var62.setRequired(true);
    com.martiansoftware.jsap.UnflaggedOption var82 = var33.setRequired(true);
    var3.registerParameter((com.martiansoftware.jsap.Parameter)var33);
    int var84 = var3.getScreenWidth();
    com.martiansoftware.jsap.FlaggedOption var86 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestOption var87 = new com.martiansoftware.jsap.TestOption();
    int var88 = var87.countTestCases();
    int var89 = var87.countTestCases();
    int var90 = var87.countTestCases();
    junit.framework.Assert.assertNotNull("hi!", (java.lang.Object)var90);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var84, var90);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "hi!"+ "'", var39.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 80);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == 1);

  }

  public void test471() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var38 = com.martiansoftware.util.StringUtils.wrapToList(var21, 1);
    java.util.List var40 = com.martiansoftware.util.StringUtils.wrapToList(var21, 1);
    com.martiansoftware.jsap.TestSwitch var41 = new com.martiansoftware.jsap.TestSwitch(var21);
    var41.testSwitchParse();
    var41.testLongFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);

  }

  public void test472() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.tearDown();
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      var0.testOneLevelDefaults();
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test473() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    java.lang.String var25 = var8.getHelp();
    com.martiansoftware.jsap.RequiredParameterMissingException var26 = new com.martiansoftware.jsap.RequiredParameterMissingException(var25);
    java.lang.String var27 = var26.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var28 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser(var27);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "hi!"+ "'", var25.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "com.martiansoftware.jsap.RequiredParameterMissingException: Parameter 'hi!' is required."+ "'", var27.equals("com.martiansoftware.jsap.RequiredParameterMissingException: Parameter 'hi!' is required."));

  }

  public void test474() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.toString();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var8 = new com.martiansoftware.jsap.SimpleJSAP(var7);
    boolean var9 = var8.messagePrinted();
    java.lang.String var10 = var8.getHelp();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    java.lang.String var16 = var14.getHelp();
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException(var16);
    java.lang.String[] var18 = new java.lang.String[] { var16};
    com.martiansoftware.jsap.JSAPResult var19 = var8.parse(var18);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var29 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var37 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var29, "hi!", true, '4', "", var36);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var38 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var39 = new java.lang.Object[] { var38};
    java.lang.Object[] var40 = var19.getObjectArray(var36, var39);
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    boolean var51 = var50.messagePrinted();
    java.lang.String var52 = var50.getHelp();
    com.martiansoftware.jsap.ParseException var53 = new com.martiansoftware.jsap.ParseException(var52);
    java.lang.String[] var54 = new java.lang.String[] { var52};
    com.martiansoftware.jsap.JSAPResult var55 = var44.parse(var54);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var65 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var65, "hi!", true, '4', "", var72);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var74 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var75 = new java.lang.Object[] { var74};
    java.lang.Object[] var76 = var55.getObjectArray(var72, var75);
    boolean var77 = var19.userSpecified(var72);
    com.martiansoftware.jsap.defaultsources.PropertyDefaultSource var78 = new com.martiansoftware.jsap.defaultsources.PropertyDefaultSource(var4, var77);
    com.martiansoftware.jsap.stringparsers.TestLongStringParser var79 = new com.martiansoftware.jsap.stringparsers.TestLongStringParser(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var10.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var16.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var52.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == false);

  }

  public void test475() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var51 = var27.setList(false);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var61 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var69 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var61, "hi!", true, '4', "", var68);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var70 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    java.lang.String var73 = var71.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var74 = new com.martiansoftware.jsap.SimpleJSAP(var73);
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var78 = var76.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var80 = var76.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var85 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var86 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, var73, false, '4', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var87 = var51.setListSeparator('4');
    com.martiansoftware.jsap.UnknownFlagException var88 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.UnknownFlagException var89 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    java.lang.String var90 = var89.getFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + "4"+ "'", var90.equals("4"));

  }

  public void test476() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var6 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var7 = var6.hasProperties();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var8 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var9 = var8.hasProperties();
    java.lang.String var10 = var8.getStringparser();
    boolean var11 = var8.getIslist();
    com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var12 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var5, var7, var11);
    var12.tearDown();
    com.martiansoftware.jsap.stringparsers.IntSizeStringParser var14 = com.martiansoftware.jsap.stringparsers.IntSizeStringParser.getParser();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    java.lang.String var20 = var18.getHelp();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    boolean var25 = var24.messagePrinted();
    java.lang.String var26 = var24.getHelp();
    com.martiansoftware.jsap.ParseException var27 = new com.martiansoftware.jsap.ParseException(var26);
    java.lang.String[] var28 = new java.lang.String[] { var26};
    com.martiansoftware.jsap.JSAPResult var29 = var18.parse(var28);
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.lang.String var32 = var30.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var33 = new com.martiansoftware.jsap.SimpleJSAP(var32);
    float[] var34 = var29.getFloatArray(var32);
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var44 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var47 = var29.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var52 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var53 = var49.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var54 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var55 = var54.getID();
    boolean[] var56 = var29.getBooleanArray(var55);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var61 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var62 = var58.setHelp("hi!");
    java.lang.String[] var63 = var29.getStringArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var67 = var65.setRequired(false);
    java.lang.String var68 = var65.getID();
    java.lang.String[] var69 = var65.getDefault();
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    java.lang.String var72 = var71.getFlag();
    com.martiansoftware.jsap.FlaggedOption var73 = var65.setDefault(var72);
    float[] var74 = var29.getFloatArray(var72);
    java.lang.Object var75 = var14.parse(var72);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var76 = var12.parse(var72);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var20.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var26.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "hi!"+ "'", var52.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!"+ "'", var55.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "hi!"+ "'", var61.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "hi!"+ "'", var68.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "4"+ "'", var72.equals("4"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + 4+ "'", var75.equals(4));

  }

  public void test477() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testConfig();
    var0.testOneLevelDefaults();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testDefaults2();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test478() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var6 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var7 = var1.setStringParser((com.martiansoftware.jsap.StringParser)var6);
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var17 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var20 = var7.setHelp("hi!");
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var23 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var24 = var23.idIterator();
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var36 = var25.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    java.lang.String[] var55 = new java.lang.String[] { var53};
    var23.addDefault(var36, var55);
    java.lang.String[] var57 = new java.lang.String[] { var36};
    com.martiansoftware.jsap.JSAPResult var58 = var22.parse(var57);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var63 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var64 = var60.setHelp("hi!");
    var60.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var67 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var68 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var69 = var68.getHelp();
    java.lang.String var70 = var68.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var71 = new com.martiansoftware.jsap.SimpleJSAP(var70);
    boolean var72 = var71.messagePrinted();
    com.martiansoftware.jsap.JSAP var73 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var78 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var82 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var83 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var84 = var73.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var85 = new com.martiansoftware.jsap.SimpleJSAP(var84);
    com.martiansoftware.jsap.UnflaggedOption var86 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var67, var72, var84);
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.Object[] var89 = new java.lang.Object[] { var88};
    java.lang.Object[] var90 = var58.getObjectArray("", var89);
    com.martiansoftware.jsap.FlaggedOption var92 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var96 = var58.getByte("hi!", (byte)(-1));
    junit.framework.Assert.assertEquals("hi!", (byte)(-1), (byte)(-1));
    com.martiansoftware.jsap.FlaggedOption var98 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "hi!"+ "'", var63.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + ""+ "'", var84.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == (byte)(-1));

  }

  public void test479() throws Throwable {

    com.martiansoftware.jsap.Defaults var0 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var1 = var0.idIterator();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var13 = var2.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var17 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var21 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var22 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var23 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var30 = var29.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var31 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var23, "hi!", true, '4', "", var30);
    java.lang.String[] var32 = new java.lang.String[] { var30};
    var0.addDefault(var13, var32);
    java.util.Iterator var34 = var0.idIterator();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var44 = var43.getShortFlag();
    char var45 = var43.getShortFlag();
    java.lang.Character var46 = var43.getShortFlagCharacter();
    java.lang.String var47 = var43.getSyntax();
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestOption var50 = new com.martiansoftware.jsap.TestOption();
    int var51 = var50.countTestCases();
    int var52 = var50.countTestCases();
    int var53 = var50.countTestCases();
    junit.framework.Assert.assertNotNull("hi!", (java.lang.Object)var53);
    java.lang.String[] var55 = new java.lang.String[] { "hi!"};
    var0.setDefault(var47, var55);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var60 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var64 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var65 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var66 = var65.getShortFlag();
    char var67 = var65.getShortFlag();
    java.lang.Character var68 = var65.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var72 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var76 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var77 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var78 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var81 = var65.setDefault("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var82 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var83 = var82.getParameter();
    boolean var84 = var82.declaredListSeparator();
    char var85 = var82.getShortflag();
    char var86 = var82.getShortflag();
    com.martiansoftware.jsap.Switch var87 = var65.setShortFlag(var86);
    java.lang.String var88 = var87.getSyntax();
    com.martiansoftware.jsap.JSAP var89 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var90 = var89.getHelp();
    java.util.Iterator var91 = var89.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var92 = var89.getIDMap();
    java.lang.String var93 = var89.getUsage();
    com.martiansoftware.jsap.FlaggedOption var95 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAPResult var96 = var89.parse("hi!");
    java.lang.String[] var97 = new java.lang.String[] { "hi!"};
    var0.setDefault(var88, var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + '4'+ "'", var46.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "[-4|--hi!]"+ "'", var47.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + '4'+ "'", var68.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + "[--hi!]"+ "'", var88.equals("[--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + ""+ "'", var90.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ""+ "'", var93.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var97 == null);

  }

  public void test480() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var2 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var3 = var2.getLongflag();
    var2.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var6 = var1.setListSeparator('#');
    boolean var7 = var6.isList();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var12 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var13 = var9.setHelp("hi!");
    var9.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var16 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    java.lang.String var19 = var17.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var20 = new com.martiansoftware.jsap.SimpleJSAP(var19);
    boolean var21 = var20.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var34 = new com.martiansoftware.jsap.SimpleJSAP(var33);
    com.martiansoftware.jsap.UnflaggedOption var35 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var16, var21, var33);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    com.martiansoftware.jsap.UnflaggedOption var54 = var35.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var58 = var56.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var59 = var35.setList(false);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var68 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var69 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var77 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var69, "hi!", true, '4', "", var76);
    com.martiansoftware.jsap.UnflaggedOption var78 = var59.setStringParser((com.martiansoftware.jsap.StringParser)var69);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var79 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var80 = var79.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var81 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var82 = var81.getLongflag();
    var81.setShortflag('#');
    java.lang.String var85 = var81.getLongflag();
    char var86 = var81.getShortflag();
    var79.setShortflag(var86);
    com.martiansoftware.jsap.UnflaggedOption var88 = var59.setListSeparator(var86);
    com.martiansoftware.jsap.FlaggedOption var89 = var6.setShortFlag(var86);
    com.martiansoftware.jsap.stringparsers.URLStringParser var90 = new com.martiansoftware.jsap.stringparsers.URLStringParser();
    com.martiansoftware.jsap.FlaggedOption var91 = var6.setStringParser((com.martiansoftware.jsap.StringParser)var90);
    java.lang.String var92 = var91.getUsage();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!"+ "'", var12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + "[-# <hi!>]"+ "'", var92.equals("[-# <hi!>]"));

  }

  public void test481() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var57 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var65 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var57, "hi!", true, '4', "", var64);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var66 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    java.lang.String var69 = var67.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var70 = new com.martiansoftware.jsap.SimpleJSAP(var69);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var74 = var72.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var76 = var72.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var78 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var81 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var66, var69, false, '4', "hi!");
    java.lang.String var85 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var86 = com.martiansoftware.util.StringUtils.wrapToList(var69, 1);
    java.util.List var88 = com.martiansoftware.util.StringUtils.wrapToList(var69, 1);
    char[] var89 = var14.getCharArray(var69);
    com.martiansoftware.jsap.TestUsageString var90 = new com.martiansoftware.jsap.TestUsageString(var69);
    var90.testUsage2();
    var90.testUsage2();
    var90.testUsage2();
    var90.testUsage1();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi!"+ "'", var85.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);

  }

  public void test482() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var4 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var5 = var4.hasProperties();
    var0.setRequired(var5);
    char var7 = var0.getShortflag();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var17 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var24 = var23.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var25 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var17, "hi!", true, '4', "", var24);
    java.lang.Character var26 = var25.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var29 = var25.setLongFlag("hi!");
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var49 = var48.getHelp();
    java.lang.String var50 = var48.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var51 = new com.martiansoftware.jsap.SimpleJSAP(var50);
    boolean var52 = var51.messagePrinted();
    java.lang.String var53 = var51.getHelp();
    com.martiansoftware.jsap.ParseException var54 = new com.martiansoftware.jsap.ParseException(var53);
    com.martiansoftware.jsap.stringparsers.FileStringParser var55 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var55.tearDown();
    boolean var57 = var55.mustBeDirectory();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var58 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var59 = var58.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var60 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var61 = var60.getLongflag();
    var60.setShortflag('#');
    java.lang.String var64 = var60.getLongflag();
    char var65 = var60.getShortflag();
    var58.setShortflag(var65);
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!", (com.martiansoftware.jsap.StringParser)var39, var53, var57, var65, "hi!");
    var0.setAllowmultipledeclarations(var57);
    com.martiansoftware.jsap.ant.ParserProperty var71 = new com.martiansoftware.jsap.ant.ParserProperty();
    java.lang.String var72 = var71.getValue();
    java.lang.String var73 = var71.getValue();
    var0.addConfiguredProperty(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + '4'+ "'", var26.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var53.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == null);

  }

  public void test483() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var3 = new com.martiansoftware.jsap.ant.ParserProperty();
    var0.addConfiguredProperty(var3);
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var8 = new com.martiansoftware.jsap.SimpleJSAP(var7);
    boolean var9 = var8.messagePrinted();
    java.lang.String var10 = var8.getHelp();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    java.lang.String var16 = var14.getHelp();
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException(var16);
    java.lang.String[] var18 = new java.lang.String[] { var16};
    com.martiansoftware.jsap.JSAPResult var19 = var8.parse(var18);
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.util.Iterator var22 = var20.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var23 = var20.getIDMap();
    java.lang.String var24 = var20.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var28 = var19.getByte(var24, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var29 = new com.martiansoftware.jsap.QualifiedSwitch(var24);
    var3.setValue(var24);
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var40 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var48 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var40, "hi!", true, '4', "", var47);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var49 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    java.lang.String var52 = var50.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var52);
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var57 = var55.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var59 = var55.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var61 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var64 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var65 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, var52, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var66 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    java.lang.String var69 = var67.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var70 = new com.martiansoftware.jsap.SimpleJSAP(var69);
    var66.setUsage(var69);
    java.lang.String var72 = var66.toString();
    var3.setValue(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var10.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var16.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));

  }

  public void test484() throws Throwable {

    com.martiansoftware.jsap.xml.JSAPConfig var0 = new com.martiansoftware.jsap.xml.JSAPConfig();
    java.lang.String var1 = var0.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var2 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    java.lang.String var3 = var2.getStringparser();
    com.martiansoftware.jsap.Defaults var4 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var5 = var4.idIterator();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var17 = var6.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.lang.String[] var36 = new java.lang.String[] { var34};
    var4.addDefault(var17, var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var47 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var55 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var56 = var52.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var57 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var58 = var57.getID();
    java.lang.String[] var59 = new java.lang.String[] { var58};
    var4.addDefault("hi!", var59);
    var2.setId("hi!");
    var0.setUsage("hi!");
    java.util.Iterator var63 = var0.parameters();
    java.util.Iterator var64 = var0.parameters();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!"+ "'", var55.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "hi!"+ "'", var58.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);

  }

  public void test485() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var2 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var3 = var2.getLongflag();
    var2.setShortflag('#');
    java.lang.String var6 = var2.getLongflag();
    char var7 = var2.getShortflag();
    var0.setShortflag(var7);
    java.lang.String[] var9 = var0.getDefaults();
    com.martiansoftware.jsap.ant.ParserProperty var10 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var14 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var18 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var19 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var20 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var28 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var20, "hi!", true, '4', "", var27);
    java.util.List var30 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    var10.setName("");
    var0.addConfiguredProperty(var10);
    boolean var33 = var0.declaredListSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);

  }

  public void test486() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testRequired();
    com.martiansoftware.jsap.TestCommandLineTokenizer var3 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var3.test7();
    var3.test2();
    var3.test6();
    var3.test7();
    junit.framework.TestResult var8 = var3.run();
    var0.run(var8);
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var19 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var26 = var25.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var27 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var19, "hi!", true, '4', "", var26);
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String[] var29 = var28.getDefault();
    com.martiansoftware.jsap.StringParser var30 = var28.getStringParser();
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    java.lang.String var33 = var31.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var34 = new com.martiansoftware.jsap.SimpleJSAP(var33);
    boolean var35 = var34.messagePrinted();
    java.lang.String var36 = var34.getHelp();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.ParseException var43 = new com.martiansoftware.jsap.ParseException(var42);
    java.lang.String[] var44 = new java.lang.String[] { var42};
    com.martiansoftware.jsap.JSAPResult var45 = var34.parse(var44);
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    float[] var50 = var45.getFloatArray(var48);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var60 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var63 = var45.getCharArray("hi!");
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    java.lang.String var66 = var64.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var67 = new com.martiansoftware.jsap.SimpleJSAP(var66);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var67.unregisterParameter((com.martiansoftware.jsap.Parameter)var69);
    com.martiansoftware.jsap.TestOption var71 = new com.martiansoftware.jsap.TestOption();
    int var72 = var71.countTestCases();
    int var73 = var71.countTestCases();
    int var74 = var71.countTestCases();
    java.lang.String var75 = var67.getHelp(var74);
    char[] var76 = var45.getCharArray(var75);
    com.martiansoftware.jsap.Parameter var77 = var28.setHelp(var75);
    char var78 = var28.getShortFlag();
    java.lang.String var79 = var28.getSyntax();
    var0.setName(var79);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testSimpleDefault();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var36.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var75.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "[<>]"+ "'", var79.equals("[<>]"));

  }

  public void test487() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    var0.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var0.setShortflag('4');
    java.lang.String var10 = var0.getId();
    com.martiansoftware.jsap.Parameter var11 = var0.getParameter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var21 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var28 = var27.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var29 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var21, "hi!", true, '4', "", var28);
    var0.setDefault("hi!");
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    java.util.Iterator var33 = var31.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var34 = var31.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var44 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var52 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var44, "hi!", true, '4', "", var51);
    java.lang.String var53 = var52.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var53);
    boolean var55 = var34.idExists(var53);
    com.martiansoftware.jsap.stringparsers.TestColorStringParser var56 = new com.martiansoftware.jsap.stringparsers.TestColorStringParser(var53);
    com.martiansoftware.jsap.SimpleJSAP var57 = new com.martiansoftware.jsap.SimpleJSAP("hi!", var53);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var58 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser("hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var53.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);

  }

  public void test488() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.JSAPResult var43 = var0.parse(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var53 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var56 = new com.martiansoftware.jsap.TestOption();
    int var57 = var56.countTestCases();
    int var58 = var56.countTestCases();
    java.lang.String var59 = com.martiansoftware.util.StringUtils.padRight("hi!", var58);
    com.martiansoftware.jsap.JSAPResult var60 = var0.parse(var59);
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var62 = var61.getHelp();
    java.lang.String var63 = var61.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var64 = new com.martiansoftware.jsap.SimpleJSAP(var63);
    boolean var65 = var64.messagePrinted();
    java.lang.String var66 = var64.getHelp();
    java.lang.String var69 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var69, 10.0f, 10.0f, 1.0f);
    var64.setHelp(var69);
    byte[] var81 = var60.getByteArray(var69);
    com.martiansoftware.jsap.RequiredParameterMissingException var82 = new com.martiansoftware.jsap.RequiredParameterMissingException(var69);
    java.lang.String var83 = var82.getID();
    java.lang.String var84 = var82.getID();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi! "+ "'", var59.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var66.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "hi!"+ "'", var69.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + "hi!"+ "'", var83.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + "hi!"+ "'", var84.equals("hi!"));

  }

  public void test489() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.getParser();
    com.martiansoftware.jsap.TestCommandLineTokenizer var1 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var1.test3();
    var1.test7();
    var1.test2();
    var1.test8();
    var1.test4();
    java.lang.String var7 = var1.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var8 = var0.parse(var7);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null(com.martiansoftware.jsap.TestCommandLineTokenizer)"+ "'", var7.equals("null(com.martiansoftware.jsap.TestCommandLineTokenizer)"));

  }

  public void test490() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test10();
    var0.test10();
    var0.test1();
    var0.test6();

  }

  public void test491() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    var35.setUsage(var38);
    java.lang.String var41 = var35.toString();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var45.unregisterParameter((com.martiansoftware.jsap.Parameter)var47);
    var35.unregisterParameter((com.martiansoftware.jsap.Parameter)var47);
    com.martiansoftware.jsap.IDMap var50 = var35.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var60 = var59.getShortFlag();
    char var61 = var59.getShortFlag();
    java.lang.Character var62 = var59.getShortFlagCharacter();
    java.lang.String var63 = var59.getSyntax();
    java.lang.String[] var64 = new java.lang.String[] { var63};
    com.martiansoftware.jsap.JSAPResult var65 = var35.parse(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + '4'+ "'", var62.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "[-4|--hi!]"+ "'", var63.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);

  }

  public void test492() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    java.lang.String var28 = var26.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var29 = new com.martiansoftware.jsap.SimpleJSAP(var28);
    com.martiansoftware.jsap.IDMap var30 = var29.getIDMap();
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var42 = var31.getHelp((-1), "hi!");
    java.lang.String var43 = var30.getIDByLongFlag(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var53 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var61 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var53, "hi!", true, '4', "", var60);
    java.util.List var63 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var64 = var30.getIDByLongFlag("");
    long[] var65 = var14.getLongArray("");
    boolean var66 = var14.success();
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var70 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var74 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var75 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var76 = new com.martiansoftware.jsap.TestSwitch("hi!");
    java.awt.Color[] var77 = var14.getColorArray("hi!");
    com.martiansoftware.jsap.UnknownFlagException var79 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var80 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var79);
    java.lang.String var81 = var79.toString();
    java.lang.String var82 = com.martiansoftware.util.StringUtils.noNull(var81);
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var87 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var88 = var84.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var89 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var14.addException(var81, (java.lang.Exception)var89);
    com.martiansoftware.jsap.UnflaggedOption var91 = new com.martiansoftware.jsap.UnflaggedOption(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var81.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var82.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + "hi!"+ "'", var87.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);

  }

  public void test493() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var14 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var22 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var14, "hi!", true, '4', "", var21);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var23 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var31 = var29.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var33 = var29.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var23, var26, false, '4', "hi!");
    var3.setUsage(var26);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var59 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    java.lang.String var62 = var60.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var63 = new com.martiansoftware.jsap.SimpleJSAP(var62);
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var67 = var65.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var69 = var65.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var74 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var75 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var59, var62, false, '4', "hi!");
    java.lang.String var78 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var79 = com.martiansoftware.util.StringUtils.wrapToList(var62, 1);
    java.util.List var81 = com.martiansoftware.util.StringUtils.wrapToList(var62, 1);
    com.martiansoftware.jsap.SyntaxException var82 = new com.martiansoftware.jsap.SyntaxException(var62);
    com.martiansoftware.jsap.JSAPResult var83 = var3.parse(var62);
    java.util.Iterator var84 = var83.getBadParameterIDIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "hi!"+ "'", var78.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);

  }

  public void test494() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ByteStringParser var0 = new com.martiansoftware.jsap.stringparsers.ByteStringParser();
    var0.tearDown();
    com.martiansoftware.jsap.TestParser var2 = new com.martiansoftware.jsap.TestParser();
    var2.testParser();
    var2.testParser();
    var2.testMultipleDeclarations();
    java.lang.String var6 = var2.toString();
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption(var6);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var8 = var0.parse(var6);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null(com.martiansoftware.jsap.TestParser)"+ "'", var6.equals("null(com.martiansoftware.jsap.TestParser)"));

  }

  public void test495() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.JSAP var12 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var13 = var12.getHelp();
    java.lang.String var14 = var12.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var15 = new com.martiansoftware.jsap.SimpleJSAP(var14);
    com.martiansoftware.jsap.IDMap var16 = var15.getIDMap();
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var28 = var17.getHelp((-1), "hi!");
    java.lang.String var29 = var16.getIDByLongFlag(var28);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    java.util.List var49 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var50 = var16.getIDByLongFlag("");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    java.lang.String var53 = var51.getUsage();
    com.martiansoftware.jsap.IDMap var54 = var51.getIDMap();
    java.lang.String var55 = var51.toString();
    boolean var56 = var16.idExists(var55);
    java.lang.String[] var57 = new java.lang.String[] { var55};
    com.martiansoftware.jsap.Switch var58 = var8.setDefault(var57);
    com.martiansoftware.jsap.ant.SwitchConfiguration var59 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var60 = var59.getLongflag();
    var59.setShortflag('#');
    java.lang.String var63 = var59.getLongflag();
    var59.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var59.setShortflag('4');
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    java.lang.String var71 = var69.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var72 = new com.martiansoftware.jsap.SimpleJSAP(var71);
    boolean var73 = var72.messagePrinted();
    java.lang.String var74 = var72.getHelp();
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    java.lang.String var77 = var75.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var78 = new com.martiansoftware.jsap.SimpleJSAP(var77);
    boolean var79 = var78.messagePrinted();
    java.lang.String var80 = var78.getHelp();
    com.martiansoftware.jsap.ParseException var81 = new com.martiansoftware.jsap.ParseException(var80);
    java.lang.String[] var82 = new java.lang.String[] { var80};
    com.martiansoftware.jsap.JSAPResult var83 = var72.parse(var82);
    com.martiansoftware.jsap.JSAP var84 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var85 = var84.getHelp();
    java.util.Iterator var86 = var84.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var87 = var84.getIDMap();
    java.lang.String var88 = var84.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var92 = var83.getByte(var88, (byte)(-1));
    com.martiansoftware.jsap.SimpleJSAP var93 = new com.martiansoftware.jsap.SimpleJSAP(var88);
    java.lang.String var94 = com.martiansoftware.util.StringUtils.noNull(var88);
    var59.setLongflag(var94);
    java.lang.String[] var96 = new java.lang.String[] { var94};
    com.martiansoftware.jsap.Switch var97 = var58.setDefault(var96);
    java.lang.String var98 = var58.getHelp();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var74.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var80.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + ""+ "'", var85.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + ""+ "'", var88.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + ""+ "'", var94.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var97 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var98 + "' != '" + "hi!"+ "'", var98.equals("hi!"));

  }

  public void test496() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test5();
    var0.test5();

  }

  public void test497() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.ant.SwitchConfiguration var28 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var29 = var28.getLongflag();
    var28.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var51 = new com.martiansoftware.jsap.UnflaggedOption("hi!");
    boolean var52 = var51.isGreedy();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);

  }

  public void test498() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var4 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var5 = var4.hasProperties();
    var0.setRequired(var5);
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var14 = var13.getHelp();
    java.lang.String var15 = var13.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var16 = new com.martiansoftware.jsap.SimpleJSAP(var15);
    boolean var17 = var16.messagePrinted();
    java.lang.String var18 = var16.getHelp();
    com.martiansoftware.jsap.ParseException var19 = new com.martiansoftware.jsap.ParseException(var18);
    java.lang.String[] var20 = new java.lang.String[] { var18};
    com.martiansoftware.jsap.JSAPResult var21 = var10.parse(var20);
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var23 = var22.getHelp();
    java.lang.String var24 = var22.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var25 = new com.martiansoftware.jsap.SimpleJSAP(var24);
    float[] var26 = var21.getFloatArray(var24);
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var36 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var39 = var21.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var44 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var45 = var41.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var46 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var47 = var46.getID();
    boolean[] var48 = var21.getBooleanArray(var47);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var53 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var54 = var50.setHelp("hi!");
    java.lang.String[] var55 = var21.getStringArray("hi!");
    java.util.Iterator var56 = var21.getErrorMessageIterator();
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    java.util.Iterator var59 = var57.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var60 = var57.getIDMap();
    java.lang.String var61 = var57.getUsage();
    com.martiansoftware.jsap.UnknownFlagException var62 = new com.martiansoftware.jsap.UnknownFlagException(var61);
    java.net.InetAddress[] var63 = var21.getInetAddressArray(var61);
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var68 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var69 = var65.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var70 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String[] var71 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("hi!");
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var75 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var79 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var80 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var81 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var87 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var88 = var87.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var89 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var81, "hi!", true, '4', "", var88);
    java.lang.Character var90 = var89.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var92 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var93 = var89.setLongFlag("hi!");
    boolean var94 = var89.isList();
    boolean var95 = var21.getBoolean("hi!", var94);
    var0.setAllowmultipledeclarations(var95);
    boolean var97 = var0.getIslist();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var18.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "hi!"+ "'", var44.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "hi!"+ "'", var47.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "hi!"+ "'", var53.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "hi!"+ "'", var68.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + ""+ "'", var88.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + '4'+ "'", var90.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);

  }

  public void test499() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    boolean var20 = var14.success();
    com.martiansoftware.jsap.ant.SwitchConfiguration var21 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var22 = var21.getLongflag();
    var21.setShortflag('#');
    java.lang.String var25 = var21.getLongflag();
    var21.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var29 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var21.setShortflag('4');
    java.lang.String var31 = var21.getId();
    com.martiansoftware.jsap.Parameter var32 = var21.getParameter();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var42 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var49 = var48.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var50 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var42, "hi!", true, '4', "", var49);
    var21.setDefault("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    java.lang.String var54 = var52.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var55 = new com.martiansoftware.jsap.SimpleJSAP(var54);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var55.unregisterParameter((com.martiansoftware.jsap.Parameter)var57);
    com.martiansoftware.jsap.TestOption var59 = new com.martiansoftware.jsap.TestOption();
    int var60 = var59.countTestCases();
    int var61 = var59.countTestCases();
    int var62 = var59.countTestCases();
    java.lang.String var63 = var55.getHelp(var62);
    com.martiansoftware.jsap.TestUsageString var64 = new com.martiansoftware.jsap.TestUsageString(var63);
    var21.setLongflag(var63);
    java.lang.Class[] var66 = var14.getClassArray(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var63.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);

  }

  public void test500() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.UnspecifiedParameterException var18 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    java.lang.String var19 = var18.getID();
    java.lang.String var20 = var18.getID();
    java.lang.String var21 = var18.getID();
    java.lang.String var22 = var18.getID();
    com.martiansoftware.jsap.JSAPException var23 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));

  }

}
