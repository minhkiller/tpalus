package generatedtest;

import junit.framework.*;

public class JSAPUnitTest0 extends TestCase {

  // Runs all the tests in this file.
  public static void main(String[] args) {
    junit.textui.TestRunner.run(JSAPUnitTest0.class);
  }

  public void test1() throws Throwable {

    java.lang.String var2 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var2, 1, 0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "hi!"+ "'", var2.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));

  }

  public void test2() throws Throwable {

    junit.framework.Test var0 = com.martiansoftware.jsap.TestFlaggedOption.suite();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);

  }

  public void test3() throws Throwable {

    com.martiansoftware.jsap.examples.Manual_HelloWorld_5 var0 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_5();

  }

  public void test4() throws Throwable {

    com.martiansoftware.jsap.xml.TryDumpXML var0 = new com.martiansoftware.jsap.xml.TryDumpXML();

  }

  public void test5() throws Throwable {

    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!", (short)(-1), (short)0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test6() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail("hi!");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test7() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var12 = var10.setRequired(false);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue("hi!", false);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);

  }

  public void test8() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var2, (short)10, (short)100);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));

  }

  public void test9() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FloatStringParser var0 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var19 = var0.parse("");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));

  }

  public void test10() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FloatStringParser var0 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var10 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }

  }

  public void test11() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var6 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser("hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);

  }

  public void test12() throws Throwable {

    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame("");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test13() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var19 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("", (java.lang.Object)(byte)(-1), (java.lang.Object)var19);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);

  }

  public void test14() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertFalse("", true);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));

  }

  public void test15() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var2 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var13 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var21 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var13, "hi!", true, '4', "", var20);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("hi!", (java.lang.Object)(byte)1, (java.lang.Object)var21);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));

  }

  public void test16() throws Throwable {

    com.martiansoftware.jsap.xml.TryLoadXML var0 = new com.martiansoftware.jsap.xml.TryLoadXML();

  }

  public void test17() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var2 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame("hi!");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test18() throws Throwable {

    junit.framework.Test var0 = com.martiansoftware.jsap.TestSwitch.suite();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);

  }

  public void test19() throws Throwable {

    java.lang.String var3 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(0, 1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "hi!"+ "'", var3.equals("hi!"));

  }

  public void test20() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var39 = var28.getHelp((-1), "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var40 = var8.parse(var39);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));

  }

  public void test21() throws Throwable {

    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var1 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser("hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test22() throws Throwable {

    junit.framework.Test var0 = com.martiansoftware.jsap.TestParser.suite();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);

  }

  public void test23() throws Throwable {

    junit.framework.Test var0 = com.martiansoftware.jsap.TestDefaults.suite();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);

  }

  public void test24() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertFalse(true);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));

  }

  public void test25() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    com.martiansoftware.jsap.ant.SwitchConfiguration var36 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var37 = var36.getLongflag();
    var36.setShortflag('#');
    java.lang.String var40 = var36.getLongflag();
    var36.setShortflag('#');
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!", '4', '#');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == null);

  }

  public void test26() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntegerStringParser var0 = com.martiansoftware.jsap.stringparsers.IntegerStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    java.lang.String var19 = var18.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var20 = var0.parse(var19);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var19.equals("(-4|--)[:<hi!>]"));

  }

  public void test27() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.stringparsers.ColorStringParser var4 = com.martiansoftware.jsap.stringparsers.ColorStringParser.getParser();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var2, (java.lang.Object)var4);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);

  }

  public void test28() throws Throwable {

    com.martiansoftware.jsap.TestAll var0 = new com.martiansoftware.jsap.TestAll();

  }

  public void test29() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ClassStringParser var0 = new com.martiansoftware.jsap.stringparsers.ClassStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var29 = var0.parse(var26);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));

  }

  public void test30() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.ParseException var6 = new com.martiansoftware.jsap.ParseException(var5);
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var10 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals(var5, (java.lang.Object)1L, (java.lang.Object)var10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));

  }

  public void test31() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!", 10L, 1L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test32() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var44 = var18.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);

  }

  public void test33() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntegerStringParser var0 = com.martiansoftware.jsap.stringparsers.IntegerStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var3 = var0.parse(var2);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));

  }

  public void test34() throws Throwable {

    com.martiansoftware.jsap.examples.Manual_HelloWorld_8 var0 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_8();

  }

  public void test35() throws Throwable {

    junit.framework.Test var0 = com.martiansoftware.jsap.defaultsources.TestAll.suite();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);

  }

  public void test36() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    java.lang.String var4 = var1.getID();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var4, false);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));

  }

  public void test37() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var9.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test38() throws Throwable {

    com.martiansoftware.jsap.examples.Manual_HelloWorld_4 var0 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_4();

  }

  public void test39() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP("hi!");
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test40() throws Throwable {

    com.martiansoftware.jsap.examples.Example1 var0 = new com.martiansoftware.jsap.examples.Example1();

  }

  public void test41() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongStringParser var0 = new com.martiansoftware.jsap.stringparsers.LongStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    java.lang.String var19 = var18.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var19);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var21 = var0.parse(var19);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var19.equals("(-4|--)[:<hi!>]"));

  }

  public void test42() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var2 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser("hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test43() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var10 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var14 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);

  }

  public void test44() throws Throwable {

    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var0 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();

  }

  public void test45() throws Throwable {

    junit.framework.Test var0 = com.martiansoftware.jsap.TestUsageString.suite();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);

  }

  public void test46() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var32 = var30.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var33 = var27.setList(false);
    java.lang.String var34 = var33.getUsageName();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP(var34);
      fail("Expected exception of type com.thoughtworks.xstream.io.StreamException");
    } catch (com.thoughtworks.xstream.io.StreamException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));

  }

  public void test47() throws Throwable {

    com.martiansoftware.jsap.examples.Manual_HelloWorld_6 var0 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_6();

  }

  public void test48() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var9 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser("hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test49() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongStringParser var0 = com.martiansoftware.jsap.stringparsers.LongStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var19 = var0.parse(var17);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));

  }

  public void test50() throws Throwable {

    com.martiansoftware.jsap.examples.Manual_HelloWorld_Simple var0 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_Simple();

  }

  public void test51() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var4 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = var18.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var48 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var48, "hi!", true, '4', "", var55);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption(var2, (com.martiansoftware.jsap.StringParser)var4, var16, false, '4', "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      long var58 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.parseSize((java.lang.CharSequence)var2);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));

  }

  public void test52() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getUsage();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var14 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var22 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var14, "hi!", true, '4', "", var21);
    java.lang.Character var23 = var22.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var22.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var27 = new com.martiansoftware.jsap.ParseException("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var4, "hi!");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + '4'+ "'", var23.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);

  }

  public void test53() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame("");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));

  }

  public void test54() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var6 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var7 = var1.setStringParser((com.martiansoftware.jsap.StringParser)var6);
    com.martiansoftware.jsap.ant.SwitchConfiguration var8 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var9 = var8.getLongflag();
    var8.setShortflag('#');
    java.lang.String var12 = var8.getLongflag();
    var8.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var15 = var1.setListSeparator('#');
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var20 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var32 = var21.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var36 = var34.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var62 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var63 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var64 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var70 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var71 = var70.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var72 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var64, "hi!", true, '4', "", var71);
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption(var18, (com.martiansoftware.jsap.StringParser)var20, var32, false, '4', "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals('#', '4');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));

  }

  public void test55() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.util.List var19 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var23 = var22.getHelp();
    java.lang.String var24 = var22.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var25 = new com.martiansoftware.jsap.SimpleJSAP(var24);
    boolean var26 = var25.messagePrinted();
    java.lang.String var27 = var25.getHelp();
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    java.lang.String var30 = var28.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    boolean var32 = var31.messagePrinted();
    java.lang.String var33 = var31.getHelp();
    com.martiansoftware.jsap.ParseException var34 = new com.martiansoftware.jsap.ParseException(var33);
    java.lang.String[] var35 = new java.lang.String[] { var33};
    com.martiansoftware.jsap.JSAPResult var36 = var25.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var47 = var36.getClass("hi!");
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var59 = var48.getHelp((-1), "hi!");
    double var61 = var36.getDouble(var59, 0.0d);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("", 1.0d, (-1.0d), var61);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var27.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var33.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 0.0d);

  }

  public void test56() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getHelp();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var5 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var4);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));

  }

  public void test57() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var23 = var21.setRequired(false);
    java.lang.String var24 = var21.getID();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      byte var25 = var14.getByte(var24);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "hi!"+ "'", var24.equals("hi!"));

  }

  public void test58() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.JSAP var12 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var17 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var21 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var22 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var23 = var12.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    com.martiansoftware.jsap.JSAPException var25 = new com.martiansoftware.jsap.JSAPException(var23);
    com.martiansoftware.jsap.stringparsers.DateStringParser var26 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var26.setUp();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    java.lang.String var46 = var26.getProperty("");
    java.lang.String[] var48 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var58 = var26.getProperty("", "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!", var23, "hi!");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "hi!"+ "'", var58.equals("hi!"));

  }

  public void test59() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var28 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser("");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));

  }

  public void test60() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    java.lang.String[] var22 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var32 = var0.getProperty("", "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var33 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser(var32);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));

  }

  public void test61() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FloatStringParser var0 = com.martiansoftware.jsap.stringparsers.FloatStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var19 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var27 = var25.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var29 = var25.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var19, var22, false, '4', "hi!");
    java.lang.String var38 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var39 = com.martiansoftware.util.StringUtils.wrapToList(var22, 1);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var40 = var0.parse(var22);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "hi!"+ "'", var38.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);

  }

  public void test62() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var32 = var30.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var33 = var27.setList(false);
    java.lang.String var34 = var33.getUsageName();
    com.martiansoftware.jsap.ant.ParserProperty var35 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var40 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var41 = var37.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var42 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var35.setValue("hi!");
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var48 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var49 = var45.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var50 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = var45.setStringParser((com.martiansoftware.jsap.StringParser)var50);
    com.martiansoftware.jsap.ant.SwitchConfiguration var52 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var53 = var52.getLongflag();
    var52.setShortflag('#');
    java.lang.String var56 = var52.getLongflag();
    var52.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var59 = var45.setListSeparator('#');
    com.martiansoftware.jsap.Parameter[] var60 = new com.martiansoftware.jsap.Parameter[] { var45};
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var34, "hi!", var60);
      fail("Expected exception of type com.martiansoftware.jsap.JSAPException");
    } catch (com.martiansoftware.jsap.JSAPException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!"+ "'", var40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "hi!"+ "'", var48.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);

  }

  public void test63() throws Throwable {

    com.martiansoftware.util.StringUtils var0 = new com.martiansoftware.util.StringUtils();

  }

  public void test64() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    java.lang.String var17 = var4.getIDByLongFlag(var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.util.List var37 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var38 = var4.getIDByLongFlag("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var39 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser("");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == null);

  }

  public void test65() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var32 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var33 = var29.setHelp("hi!");
    var29.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var36 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var53 = var42.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var54 = new com.martiansoftware.jsap.SimpleJSAP(var53);
    com.martiansoftware.jsap.UnflaggedOption var55 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var36, var41, var53);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var56 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser("", var41);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));

  }

  public void test66() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var12 = var10.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var14 = var10.setRequired(false);
    junit.framework.Assert.assertFalse(false);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = var17.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var21 = var17.setRequired(false);
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var23 = var22.getHelp();
    java.lang.String var24 = var22.getUsage();
    com.martiansoftware.jsap.FlaggedOption var25 = var21.setUsageName(var24);
    java.lang.String var26 = var21.getLongFlag();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotSame("hi!", (java.lang.Object)false, (java.lang.Object)var21);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);

  }

  public void test67() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var25, (byte)100, (byte)(-1));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));

  }

  public void test68() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("", 1L, 10L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));

  }

  public void test69() throws Throwable {

    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test70() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.JSAPException var39 = new com.martiansoftware.jsap.JSAPException(var37);
    java.util.Date var40 = var14.getDate(var37);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var44 = var42.setRequired(false);
    java.lang.String var45 = var42.getID();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      char var46 = var14.getChar(var45);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "hi!"+ "'", var45.equals("hi!"));

  }

  public void test71() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var33 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var34 = new java.lang.Object[] { var33};
    java.lang.Object[] var35 = var14.getObjectArray(var31, var34);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var36 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var31);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);

  }

  public void test72() throws Throwable {

    com.martiansoftware.jsap.examples.Manual_HelloWorld_2 var0 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_2();

  }

  public void test73() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FloatStringParser var0 = com.martiansoftware.jsap.stringparsers.FloatStringParser.getParser();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String var35 = com.martiansoftware.util.StringUtils.noNull(var14);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var36 = var0.parse(var35);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));

  }

  public void test74() throws Throwable {

    com.martiansoftware.jsap.examples.Manual_HelloWorld_7 var0 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_7();

  }

  public void test75() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.util.Iterator var17 = var15.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var18 = var15.getIDMap();
    java.lang.String var19 = var15.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var23 = var14.getByte(var19, (byte)(-1));
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var29 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var34 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var35 = var24.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var36 = new com.martiansoftware.jsap.SimpleJSAP(var35);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      short var37 = var14.getShort(var35);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));

  }

  public void test76() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    java.lang.String var28 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var29 = var14.getURLArray(var28);
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.lang.String var32 = var30.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var33 = new com.martiansoftware.jsap.SimpleJSAP(var32);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var34 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var46 = var35.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var72 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var76 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var77 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var78 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var84 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var85 = var84.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var86 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var78, "hi!", true, '4', "", var85);
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption(var32, (com.martiansoftware.jsap.StringParser)var34, var46, false, '4', "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      char var88 = var14.getChar("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + ""+ "'", var85.equals(""));

  }

  public void test77() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var38 = com.martiansoftware.util.StringUtils.wrapToList(var21, 1);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var39 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var21);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);

  }

  public void test78() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var4 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = var18.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var48 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var48, "hi!", true, '4', "", var55);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption(var2, (com.martiansoftware.jsap.StringParser)var4, var16, false, '4', "hi!");
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var63 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var64 = var60.setHelp("hi!");
    boolean var65 = var60.allowMultipleDeclarations();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var66 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser(var2, true, var65);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "hi!"+ "'", var63.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);

  }

  public void test79() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    junit.framework.Assert.assertNotNull((java.lang.Object)var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);

  }

  public void test80() throws Throwable {

    com.martiansoftware.jsap.stringparsers.TestAll var0 = new com.martiansoftware.jsap.stringparsers.TestAll();

  }

  public void test81() throws Throwable {

    com.martiansoftware.jsap.examples.Manual_HelloWorld_1 var0 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_1();

  }

  public void test82() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var3 = var2.getHelp();
    java.lang.String var4 = var2.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var5 = new com.martiansoftware.jsap.SimpleJSAP(var4);
    boolean var6 = var5.messagePrinted();
    java.lang.String var7 = var5.getHelp();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var9 = var8.getHelp();
    java.lang.String var10 = var8.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var11 = new com.martiansoftware.jsap.SimpleJSAP(var10);
    boolean var12 = var11.messagePrinted();
    java.lang.String var13 = var11.getHelp();
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException(var13);
    java.lang.String[] var15 = new java.lang.String[] { var13};
    com.martiansoftware.jsap.JSAPResult var16 = var5.parse(var15);
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    java.lang.String var19 = var17.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var20 = new com.martiansoftware.jsap.SimpleJSAP(var19);
    float[] var21 = var16.getFloatArray(var19);
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var23 = var22.getHelp();
    java.lang.String var24 = var22.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var25 = new com.martiansoftware.jsap.SimpleJSAP(var24);
    boolean var26 = var25.messagePrinted();
    java.lang.String var27 = var25.getHelp();
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    java.lang.String var30 = var28.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    boolean var32 = var31.messagePrinted();
    java.lang.String var33 = var31.getHelp();
    com.martiansoftware.jsap.ParseException var34 = new com.martiansoftware.jsap.ParseException(var33);
    java.lang.String[] var35 = new java.lang.String[] { var33};
    com.martiansoftware.jsap.JSAPResult var36 = var25.parse(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    boolean var42 = var40.messagePrinted();
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var55 = var44.getHelp((-1), "hi!");
    java.lang.String var56 = var40.getHelp(100, "hi!");
    java.util.Date[] var57 = var36.getDateArray(var56);
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var61 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var67 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var73 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var74 = var73.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var75 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var67, "hi!", true, '4', "", var74);
    java.lang.Class[] var76 = var36.getClassArray("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!", (java.lang.Object)var21, (java.lang.Object)var76);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var7.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var13.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var27.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var33.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var56.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);

  }

  public void test83() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var6 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var7 = var1.setStringParser((com.martiansoftware.jsap.StringParser)var6);
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var17 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var20 = var7.setHelp("hi!");
    junit.framework.Assert.assertEquals((short)0, (short)0);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!", (short)10, (short)0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);

  }

  public void test84() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("", 100L, (-1L));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));

  }

  public void test85() throws Throwable {

    java.lang.String[] var1 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var2 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var3 = var2.getParameter();
    boolean var4 = var2.declaredListSeparator();
    boolean var5 = var2.getIslist();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue("", var5);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);

  }

  public void test86() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    java.lang.String var17 = var4.getIDByLongFlag(var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.util.List var37 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var38 = var4.getIDByLongFlag("");
    com.martiansoftware.jsap.JSAP var39 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var40 = var39.getHelp();
    java.lang.String var41 = var39.getUsage();
    com.martiansoftware.jsap.IDMap var42 = var39.getIDMap();
    java.lang.String var43 = var39.toString();
    boolean var44 = var4.idExists(var43);
    java.util.Iterator var45 = var4.idIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);

  }

  public void test87() throws Throwable {

    com.martiansoftware.jsap.examples.Manual_HelloWorld_3 var0 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_3();

  }

  public void test88() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    java.lang.String var4 = var1.getID();
    boolean var5 = var1.allowMultipleDeclarations();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    com.martiansoftware.jsap.IDMap var10 = var9.getIDMap();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var22 = var11.getHelp((-1), "hi!");
    java.lang.String var23 = var10.getIDByLongFlag(var22);
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var33 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var39 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var40 = var39.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var41 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var33, "hi!", true, '4', "", var40);
    java.util.List var43 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var44 = var10.getIDByLongFlag("");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    java.lang.String var47 = var45.getUsage();
    com.martiansoftware.jsap.IDMap var48 = var45.getIDMap();
    java.lang.String var49 = var45.toString();
    boolean var50 = var10.idExists(var49);
    junit.framework.Assert.assertEquals(var5, var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);

  }

  public void test89() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ByteStringParser var0 = new com.martiansoftware.jsap.stringparsers.ByteStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var6 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var10 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var11 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var12 = var1.getHelp((-1), "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var13 = var0.parse(var12);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));

  }

  public void test90() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    java.lang.String var40 = var38.getHelp();
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.ParseException var47 = new com.martiansoftware.jsap.ParseException(var46);
    java.lang.String[] var48 = new java.lang.String[] { var46};
    com.martiansoftware.jsap.JSAPResult var49 = var38.parse(var48);
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var59 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var60 = var49.getClass("hi!");
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var72 = var61.getHelp((-1), "hi!");
    double var74 = var49.getDouble(var72, 0.0d);
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    java.lang.String var77 = var75.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var78 = new com.martiansoftware.jsap.SimpleJSAP(var77);
    boolean var79 = var78.messagePrinted();
    java.lang.String var80 = var78.getHelp();
    com.martiansoftware.jsap.ParseException var81 = new com.martiansoftware.jsap.ParseException(var80);
    java.util.Iterator var82 = var49.getExceptionIterator(var80);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var83 = var18.parse(var80);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var40.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var80.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);

  }

  public void test91() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BooleanStringParser var0 = new com.martiansoftware.jsap.stringparsers.BooleanStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var25 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var33 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var25, "hi!", true, '4', "", var32);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var34 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var35 = new java.lang.Object[] { var34};
    java.lang.Object[] var36 = var15.getObjectArray(var32, var35);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var37 = var0.parse(var32);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);

  }

  public void test92() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var2 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var2.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test93() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    java.lang.String var40 = var38.getHelp();
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.ParseException var47 = new com.martiansoftware.jsap.ParseException(var46);
    java.lang.String[] var48 = new java.lang.String[] { var46};
    com.martiansoftware.jsap.JSAPResult var49 = var38.parse(var48);
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var59 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var60 = var49.getClass("hi!");
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var72 = var61.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var73 = new com.martiansoftware.jsap.SimpleJSAP(var72);
    com.martiansoftware.jsap.JSAPException var74 = new com.martiansoftware.jsap.JSAPException(var72);
    java.util.Date var75 = var49.getDate(var72);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var76 = var18.parse(var72);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var40.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == null);

  }

  public void test94() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var33 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var34 = new java.lang.Object[] { var33};
    java.lang.Object[] var35 = var14.getObjectArray(var31, var34);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var54 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    java.lang.String var57 = var55.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var58 = new com.martiansoftware.jsap.SimpleJSAP(var57);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var62 = var60.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var64 = var60.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var69 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var70 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, var57, false, '4', "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      boolean var71 = var14.getBoolean("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);

  }

  public void test95() throws Throwable {

    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.util.Iterator var18 = var16.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var19 = var16.getIDMap();
    java.lang.String var20 = var16.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var24 = var15.getByte(var20, (byte)(-1));
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((byte)100, var24);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == (byte)(-1));

  }

  public void test96() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ColorStringParser var0 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var25 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var33 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var25, "hi!", true, '4', "", var32);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var34 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var35 = new java.lang.Object[] { var34};
    java.lang.Object[] var36 = var15.getObjectArray(var32, var35);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var37 = var0.parse(var32);
      fail("Expected exception of type java.lang.StringIndexOutOfBoundsException");
    } catch (java.lang.StringIndexOutOfBoundsException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);

  }

  public void test97() throws Throwable {

    com.martiansoftware.jsap.defaultsources.TestAll var0 = new com.martiansoftware.jsap.defaultsources.TestAll();

  }

  public void test98() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    char var11 = var8.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var16 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var17 = var13.setHelp("hi!");
    var13.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var20 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    boolean var25 = var24.messagePrinted();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.UnflaggedOption var39 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var20, var25, var37);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    com.martiansoftware.jsap.UnflaggedOption var58 = var39.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var59 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var60 = var58.setStringParser((com.martiansoftware.jsap.StringParser)var59);
    char var61 = var58.getListSeparator();
    com.martiansoftware.jsap.Switch var62 = var8.setShortFlag(var61);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = var8.setLongFlag("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail("hi!");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!"+ "'", var16.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);

  }

  public void test99() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    boolean var3 = var0.declaredListSeparator();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var3);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);

  }

  public void test100() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var3 = new com.martiansoftware.jsap.ant.ParserProperty();
    var0.addConfiguredProperty(var3);
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      com.martiansoftware.jsap.Parameter var5 = var0.getParameter();
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test101() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    boolean var5 = var3.messagePrinted();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var18 = var7.getHelp((-1), "hi!");
    java.lang.String var19 = var3.getHelp(100, "hi!");
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var20 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var21 = var20.getRequired();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var22 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser(var19, var21);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var19.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);

  }

  public void test102() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ClassStringParser var0 = new com.martiansoftware.jsap.stringparsers.ClassStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var38 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var46 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var38, "hi!", true, '4', "", var45);
    com.martiansoftware.jsap.UnflaggedOption var47 = var28.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var48 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var49 = var47.setStringParser((com.martiansoftware.jsap.StringParser)var48);
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var59 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var67 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var59, "hi!", true, '4', "", var66);
    java.lang.String var68 = var67.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var68);
    com.martiansoftware.jsap.UnflaggedOption var70 = var47.setUsageName(var68);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var71 = var0.parse(var68);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var68.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);

  }

  public void test103() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var9 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((short)1, (short)0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test104() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.String var18 = var17.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var18);
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP(var18);
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test105() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var32 = var30.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var33 = var27.setList(false);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var43 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var51 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var43, "hi!", true, '4', "", var50);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var52 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    java.lang.String var55 = var53.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var56 = new com.martiansoftware.jsap.SimpleJSAP(var55);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var60 = var58.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var62 = var58.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var52, var55, false, '4', "hi!");
    java.lang.String[] var69 = var68.getDefault();
    java.lang.String var70 = var68.getHelp();
    var27.addDefault(var70);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var72 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var70);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));

  }

  public void test106() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    java.lang.String var58 = var57.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var58);
    boolean var60 = var14.userSpecified(var58);
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var62 = var61.getHelp();
    java.util.Iterator var63 = var61.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var64 = var61.getIDMap();
    java.lang.String var65 = var61.getUsage();
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException(var65);
    junit.framework.Test var67 = com.martiansoftware.jsap.TestJSAPConfiguration.suite();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var58, (java.lang.Object)var65, (java.lang.Object)var67);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var58.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);

  }

  public void test107() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var32 = var30.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var33 = var27.setList(false);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var43 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var51 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var43, "hi!", true, '4', "", var50);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var52 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    java.lang.String var55 = var53.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var56 = new com.martiansoftware.jsap.SimpleJSAP(var55);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var60 = var58.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var62 = var58.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var52, var55, false, '4', "hi!");
    java.lang.String[] var69 = var68.getDefault();
    java.lang.String var70 = var68.getHelp();
    var27.addDefault(var70);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var27, (java.lang.Object)"");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));

  }

  public void test108() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ShortStringParser var0 = com.martiansoftware.jsap.stringparsers.ShortStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var19 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var27 = var25.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var29 = var25.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var19, var22, false, '4', "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var36 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);

  }

  public void test109() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    java.lang.String[] var22 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var32 = var0.getProperty("", "hi!");
    var0.setUp();
    java.lang.String var36 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var37 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "hi!"+ "'", var36.equals("hi!"));

  }

  public void test110() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.String var18 = var17.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var18);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var18, (byte)1, (byte)100);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var18.equals("(-4|--)[:<hi!>]"));

  }

  public void test111() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test10();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test112() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntegerStringParser var0 = com.martiansoftware.jsap.stringparsers.IntegerStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    com.martiansoftware.jsap.IDMap var5 = var4.getIDMap();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var17 = var6.getHelp((-1), "hi!");
    java.lang.String var18 = var5.getIDByLongFlag(var17);
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var28 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var35 = var34.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var36 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var28, "hi!", true, '4', "", var35);
    java.util.List var38 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var39 = var5.getIDByLongFlag("");
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.IDMap var43 = var40.getIDMap();
    java.lang.String var44 = var40.toString();
    boolean var45 = var5.idExists(var44);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var46 = var0.parse(var44);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);

  }

  public void test113() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var54 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    java.lang.String var57 = var55.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var58 = new com.martiansoftware.jsap.SimpleJSAP(var57);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var62 = var60.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var64 = var60.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var69 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var70 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, var57, false, '4', "hi!");
    java.lang.Exception[] var71 = var14.getExceptionArray("hi!");
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var77 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var81 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var82 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var83 = var72.getHelp((-1), "hi!");
    java.lang.Object var84 = var14.getObject("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)var14);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + ""+ "'", var83.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == null);

  }

  public void test114() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    java.lang.String var7 = var5.getSyntax();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var18 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var18.testID();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals(var7, (java.lang.Object)1.0f, (java.lang.Object)var18);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "[<hi!>]"+ "'", var7.equals("[<hi!>]"));

  }

  public void test115() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    float[] var20 = var15.getFloatArray(var18);
    com.martiansoftware.jsap.JSAPException var21 = new com.martiansoftware.jsap.JSAPException(var18);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var22 = var0.parse(var18);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);

  }

  public void test116() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    boolean var40 = var39.messagePrinted();
    boolean var41 = var39.messagePrinted();
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var54 = var43.getHelp((-1), "hi!");
    java.lang.String var55 = var39.getHelp(100, "hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var56 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var57 = var56.getLongflag();
    var56.setShortflag('#');
    java.lang.String var60 = var56.getLongflag();
    com.martiansoftware.jsap.UnknownFlagException var62 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var56.setShortflag('4');
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals(var34, (java.lang.Object)var39, (java.lang.Object)'4');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var55.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == null);

  }

  public void test117() throws Throwable {

    junit.framework.Assert.assertEquals((short)0, (short)0);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((short)0, (short)1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test118() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var4 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = var18.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var48 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var48, "hi!", true, '4', "", var55);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption(var2, (com.martiansoftware.jsap.StringParser)var4, var16, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    java.lang.String var60 = var58.getUsage();
    junit.framework.Assert.assertEquals(var2, var60);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail(var60);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));

  }

  public void test119() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    com.martiansoftware.jsap.IDMap var10 = var9.getIDMap();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var22 = var11.getHelp((-1), "hi!");
    java.lang.String var23 = var10.getIDByLongFlag(var22);
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var33 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var39 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var40 = var39.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var41 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var33, "hi!", true, '4', "", var40);
    java.util.List var43 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var44 = var10.getIDByLongFlag("");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    java.lang.String var47 = var45.getUsage();
    com.martiansoftware.jsap.IDMap var48 = var45.getIDMap();
    java.lang.String var49 = var45.toString();
    boolean var50 = var10.idExists(var49);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.JSAPResult var51 = var3.parse(var49);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);

  }

  public void test120() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    com.martiansoftware.jsap.ant.SwitchConfiguration var29 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var30 = var29.getLongflag();
    var29.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var42 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var49 = var48.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var50 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var42, "hi!", true, '4', "", var49);
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var0.setProperty("", "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      long var62 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.parseSize((java.lang.CharSequence)"hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));

  }

  public void test121() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var9 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var10 = var9.getLongflag();
    var9.setShortflag('#');
    java.lang.String var13 = var9.getLongflag();
    var9.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var17 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var9.setShortflag('4');
    java.lang.String var19 = var9.getId();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var29 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    var9.setDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var43 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var51 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var43, "hi!", true, '4', "", var50);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var52 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    java.lang.String var55 = var53.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var56 = new com.martiansoftware.jsap.SimpleJSAP(var55);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var60 = var58.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var62 = var58.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var52, var55, false, '4', "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!", "hi!", var55);
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);

  }

  public void test122() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var32 = var30.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var33 = var27.setList(false);
    java.lang.String var34 = var33.getUsageName();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      long var35 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.parseSize((java.lang.CharSequence)var34);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));

  }

  public void test123() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.util.Iterator var17 = var15.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var18 = var15.getIDMap();
    java.lang.String var19 = var15.getHelp();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    java.util.Iterator var23 = var20.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    boolean var28 = var27.messagePrinted();
    boolean var29 = var27.messagePrinted();
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var42 = var31.getHelp((-1), "hi!");
    java.lang.String var43 = var27.getHelp(100, "hi!");
    java.lang.String var44 = var20.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var54 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, "hi!", true, '4', "", var61);
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var64 = var15.getHelp(100, "");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      short var65 = var14.getShort("");
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var43.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));

  }

  public void test124() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.JSAP var4 = new com.martiansoftware.jsap.JSAP(var2);
      fail("Expected exception of type com.thoughtworks.xstream.io.StreamException");
    } catch (com.thoughtworks.xstream.io.StreamException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));

  }

  public void test125() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var11 = var0.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    java.lang.String var40 = var39.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var40);
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption(var40);
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch(var11, '4', var40);
    com.martiansoftware.jsap.ant.SwitchConfiguration var44 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var45 = var44.getLongflag();
    var44.setShortflag('#');
    java.lang.String var48 = var44.getLongflag();
    char var49 = var44.getShortflag();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var11, var49, '4');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var40.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == '#');

  }

  public void test126() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!", (byte)0, (byte)1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);

  }

  public void test127() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var4 = var3.getHelp();
    java.lang.String var5 = var3.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var6 = new com.martiansoftware.jsap.SimpleJSAP(var5);
    boolean var7 = var6.messagePrinted();
    java.lang.String var8 = var6.getHelp();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    java.lang.String var14 = var12.getHelp();
    com.martiansoftware.jsap.ParseException var15 = new com.martiansoftware.jsap.ParseException(var14);
    java.lang.String[] var16 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var17 = var6.parse(var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var27 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var28 = var17.getClass("hi!");
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var40 = var29.getHelp((-1), "hi!");
    double var42 = var17.getDouble(var40, 0.0d);
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    java.lang.String var46 = var44.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var47 = new com.martiansoftware.jsap.SimpleJSAP(var46);
    boolean var48 = var47.messagePrinted();
    java.lang.String var49 = var47.getHelp();
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    java.lang.String var52 = var50.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var52);
    boolean var54 = var53.messagePrinted();
    java.lang.String var55 = var53.getHelp();
    com.martiansoftware.jsap.ParseException var56 = new com.martiansoftware.jsap.ParseException(var55);
    java.lang.String[] var57 = new java.lang.String[] { var55};
    com.martiansoftware.jsap.JSAPResult var58 = var47.parse(var57);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var62 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var66 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var67 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var68 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var69 = var58.getClass("hi!");
    com.martiansoftware.jsap.JSAP var70 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var75 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var79 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var80 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var81 = var70.getHelp((-1), "hi!");
    double var83 = var58.getDouble(var81, 0.0d);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var2, 0.0d, 1.0d, 0.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var8.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var14.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var49.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var55.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 0.0d);

  }

  public void test128() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testDefaults2();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test129() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    var0.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var0.setShortflag('4');
    java.lang.String var10 = var0.getId();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var14 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var18 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var19 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var20 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    var0.setDefault("hi!");
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var26 = var25.getHelp();
    java.lang.String var27 = var25.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var28 = new com.martiansoftware.jsap.SimpleJSAP(var27);
    boolean var29 = var28.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!", var29, true);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));

  }

  public void test130() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    com.martiansoftware.jsap.ant.SwitchConfiguration var29 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var30 = var29.getLongflag();
    var29.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var42 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var49 = var48.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var50 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var42, "hi!", true, '4', "", var49);
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var0.setProperty("", "hi!");
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var65 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var69 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var70 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var71 = var0.getProperty("hi!");
    var0.tearDown();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == null);

  }

  public void test131() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    char var11 = var8.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var16 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var17 = var13.setHelp("hi!");
    var13.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var20 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    boolean var25 = var24.messagePrinted();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.UnflaggedOption var39 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var20, var25, var37);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    com.martiansoftware.jsap.UnflaggedOption var58 = var39.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var59 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var60 = var58.setStringParser((com.martiansoftware.jsap.StringParser)var59);
    char var61 = var58.getListSeparator();
    com.martiansoftware.jsap.Switch var62 = var8.setShortFlag(var61);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = var8.setLongFlag("hi!");
    java.lang.String var67 = var66.getLongFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!"+ "'", var16.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "hi!"+ "'", var67.equals("hi!"));

  }

  public void test132() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BooleanStringParser var0 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var7 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var8 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);

  }

  public void test133() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var36 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var44 = var42.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var46 = var42.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var52 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var36, var39, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    java.lang.String var55 = var53.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var56 = new com.martiansoftware.jsap.SimpleJSAP(var55);
    boolean var57 = var56.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var58 = var52.setRequired(var57);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var59 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var60 = var59.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var61 = var52.setAllowMultipleDeclarations(var60);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var16, (java.lang.Object)var61);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);

  }

  public void test134() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.JSAPException var39 = new com.martiansoftware.jsap.JSAPException(var37);
    java.util.Date var40 = var14.getDate(var37);
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var42 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var43 = var42.idIterator();
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var55 = var44.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var65 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var65, "hi!", true, '4', "", var72);
    java.lang.String[] var74 = new java.lang.String[] { var72};
    var42.addDefault(var55, var74);
    java.lang.String[] var76 = new java.lang.String[] { var55};
    com.martiansoftware.jsap.JSAPResult var77 = var41.parse(var76);
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var81 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var85 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var86 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var87 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var90 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var91 = var77.contains("hi!");
    java.lang.Package var92 = var14.getPackage("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      long var93 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.parseSize((java.lang.CharSequence)"hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == null);

  }

  public void test135() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.ant.ParserProperty var26 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var31 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var32 = var28.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var33 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var26.setValue("hi!");
    java.io.File[] var35 = var14.getFileArray("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    boolean var40 = var39.messagePrinted();
    java.lang.String var41 = var39.getHelp();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    boolean var46 = var45.messagePrinted();
    java.lang.String var47 = var45.getHelp();
    com.martiansoftware.jsap.ParseException var48 = new com.martiansoftware.jsap.ParseException(var47);
    java.lang.String[] var49 = new java.lang.String[] { var47};
    com.martiansoftware.jsap.JSAPResult var50 = var39.parse(var49);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var60 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var61 = var50.getClass("hi!");
    java.lang.String var64 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var65 = var50.getURLArray(var64);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var35, (java.lang.Object)var65);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "hi!"+ "'", var31.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var41.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var47.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "hi!"+ "'", var64.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);

  }

  public void test136() throws Throwable {

    java.lang.String var2 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var2, 10.0f, 10.0f, 1.0f);
    java.lang.String var15 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var15, 10.0f, 10.0f, 1.0f);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(10.0f, 1.0f, 0.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "hi!"+ "'", var2.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi!"+ "'", var15.equals("hi!"));

  }

  public void test137() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var16 = var15.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var17 = var3.setScreenWidth(var16);
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    java.lang.String var20 = var18.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var21 = new com.martiansoftware.jsap.SimpleJSAP(var20);
    boolean var22 = var21.messagePrinted();
    java.lang.String var23 = var21.getHelp();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    boolean var28 = var27.messagePrinted();
    java.lang.String var29 = var27.getHelp();
    com.martiansoftware.jsap.ParseException var30 = new com.martiansoftware.jsap.ParseException(var29);
    java.lang.String[] var31 = new java.lang.String[] { var29};
    com.martiansoftware.jsap.JSAPResult var32 = var21.parse(var31);
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var42 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var43 = var32.getClass("hi!");
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var55 = var44.getHelp((-1), "hi!");
    double var57 = var32.getDouble(var55, 0.0d);
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    java.lang.String var60 = var58.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    boolean var62 = var61.messagePrinted();
    java.lang.String var63 = var61.getHelp();
    com.martiansoftware.jsap.ParseException var64 = new com.martiansoftware.jsap.ParseException(var63);
    java.util.Iterator var65 = var32.getExceptionIterator(var63);
    java.lang.String[] var66 = new java.lang.String[] { var63};
    com.martiansoftware.jsap.JSAPResult var67 = var17.parse(var66);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var76 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var77 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var83 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var84 = var83.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var85 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var77, "hi!", true, '4', "", var84);
    com.martiansoftware.jsap.Parameter var86 = var17.getByID("");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var23.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var29.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var63.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + ""+ "'", var84.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == null);

  }

  public void test138() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    java.lang.String var28 = var26.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var29 = new com.martiansoftware.jsap.SimpleJSAP(var28);
    com.martiansoftware.jsap.IDMap var30 = var29.getIDMap();
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var42 = var31.getHelp((-1), "hi!");
    java.lang.String var43 = var30.getIDByLongFlag(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var53 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var61 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var53, "hi!", true, '4', "", var60);
    java.util.List var63 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var64 = var30.getIDByLongFlag("");
    long[] var65 = var14.getLongArray("");
    boolean var66 = var14.success();
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var71 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var72 = var68.setHelp("hi!");
    var68.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var75 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    java.lang.String var78 = var76.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var79 = new com.martiansoftware.jsap.SimpleJSAP(var78);
    boolean var80 = var79.messagePrinted();
    com.martiansoftware.jsap.JSAP var81 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var86 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var90 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var91 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var92 = var81.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var93 = new com.martiansoftware.jsap.SimpleJSAP(var92);
    com.martiansoftware.jsap.UnflaggedOption var94 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var75, var80, var92);
    java.math.BigInteger[] var95 = var14.getBigIntegerArray(var92);
    java.util.Iterator var96 = var14.getErrorMessageIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "hi!"+ "'", var71.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + ""+ "'", var92.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);

  }

  public void test139() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    boolean var50 = var49.messagePrinted();
    java.lang.String var51 = var49.getHelp();
    com.martiansoftware.jsap.ParseException var52 = new com.martiansoftware.jsap.ParseException(var51);
    java.lang.String[] var53 = new java.lang.String[] { var51};
    com.martiansoftware.jsap.JSAPResult var54 = var43.parse(var53);
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    java.util.Iterator var57 = var55.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var58 = var55.getIDMap();
    java.lang.String var59 = var55.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var63 = var54.getByte(var59, (byte)(-1));
    java.math.BigDecimal var64 = var14.getBigDecimal(var59);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var69 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var70 = var66.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var71 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var72 = var66.setStringParser((com.martiansoftware.jsap.StringParser)var71);
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var76 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var80 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var81 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var82 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var85 = var72.setHelp("hi!");
    java.lang.Package var86 = var14.getPackage("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var51.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "hi!"+ "'", var69.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == null);

  }

  public void test140() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    java.lang.String var28 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var29 = var14.getURLArray(var28);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      boolean var48 = var14.getBoolean(var46);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));

  }

  public void test141() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ShortStringParser var0 = com.martiansoftware.jsap.stringparsers.ShortStringParser.getParser();
    com.martiansoftware.jsap.stringparsers.DateStringParser var1 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var1.setUp();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var6 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var10 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var11 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var12 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var20 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var12, "hi!", true, '4', "", var19);
    java.lang.String var21 = var1.getProperty("");
    java.lang.String[] var23 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var1.getProperty("", "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var34 = var0.parse(var33);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "hi!"+ "'", var33.equals("hi!"));

  }

  public void test142() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var34, 1L, 10L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);

  }

  public void test143() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.JSAPException var39 = new com.martiansoftware.jsap.JSAPException(var37);
    java.util.Date var40 = var14.getDate(var37);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var45 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var46 = var42.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var47 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = var42.setStringParser((com.martiansoftware.jsap.StringParser)var47);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var58 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var61 = var48.setHelp("hi!");
    int[] var62 = var14.getIntArray("hi!");
    java.util.Iterator var63 = var14.getBadParameterIDIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "hi!"+ "'", var45.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);

  }

  public void test144() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var29 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var30 = var26.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var31 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var32 = var31.getID();
    java.lang.String var33 = var31.getID();
    com.martiansoftware.jsap.Switch var34 = var24.setDefault(var33);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var35 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser(var33);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "hi!"+ "'", var29.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "hi!"+ "'", var33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);

  }

  public void test145() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var7 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var8 = var4.setHelp("hi!");
    var4.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var11 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var12 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var13 = var12.getHelp();
    java.lang.String var14 = var12.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var15 = new com.martiansoftware.jsap.SimpleJSAP(var14);
    boolean var16 = var15.messagePrinted();
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var28 = var17.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var29 = new com.martiansoftware.jsap.SimpleJSAP(var28);
    com.martiansoftware.jsap.UnflaggedOption var30 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var11, var16, var28);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var0, (java.lang.Object)var30);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));

  }

  public void test146() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ShortStringParser var0 = new com.martiansoftware.jsap.stringparsers.ShortStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var4.unregisterParameter((com.martiansoftware.jsap.Parameter)var6);
    java.lang.String var8 = var6.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var9 = var0.parse(var8);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "[<hi!>]"+ "'", var8.equals("[<hi!>]"));

  }

  public void test147() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test148() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    java.lang.String var17 = var4.getIDByLongFlag(var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var36 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var44 = var42.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var46 = var42.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var52 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var36, var39, false, '4', "hi!");
    java.lang.String var55 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var56 = com.martiansoftware.util.StringUtils.wrapToList(var39, 1);
    java.util.List var58 = com.martiansoftware.util.StringUtils.wrapToList(var39, 1);
    com.martiansoftware.jsap.SyntaxException var59 = new com.martiansoftware.jsap.SyntaxException(var39);
    boolean var60 = var4.idExists(var39);
    com.martiansoftware.jsap.TestCommandLineTokenizer var61 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    com.martiansoftware.jsap.JSAP var62 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var63 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var64 = var63.idIterator();
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var70 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var74 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var75 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var76 = var65.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var80 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var84 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var85 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var86 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var92 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var93 = var92.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var94 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var86, "hi!", true, '4', "", var93);
    java.lang.String[] var95 = new java.lang.String[] { var93};
    var63.addDefault(var76, var95);
    java.lang.String[] var97 = new java.lang.String[] { var76};
    com.martiansoftware.jsap.JSAPResult var98 = var62.parse(var97);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals(var39, (java.lang.Object)var61, (java.lang.Object)var62);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!"+ "'", var55.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ""+ "'", var93.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var97 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var98 == null);

  }

  public void test149() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.ColorStringParser var18 = com.martiansoftware.jsap.stringparsers.ColorStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var28 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var35 = var34.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var36 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var28, "hi!", true, '4', "", var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var55 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var63 = var61.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var65 = var61.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var71 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var55, var58, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var73 = var72.getHelp();
    java.lang.String var74 = var72.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var75 = new com.martiansoftware.jsap.SimpleJSAP(var74);
    boolean var76 = var75.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var80 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var84 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var85 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var86 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var92 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var93 = var92.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var94 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var86, "hi!", true, '4', "", var93);
    com.martiansoftware.jsap.UnflaggedOption var95 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var18, "hi!", false, var76, "hi!");
    junit.framework.Assert.assertFalse(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ""+ "'", var93.equals(""));

  }

  public void test150() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var51 = var27.setList(false);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var61 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var69 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var61, "hi!", true, '4', "", var68);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var70 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    java.lang.String var73 = var71.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var74 = new com.martiansoftware.jsap.SimpleJSAP(var73);
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var78 = var76.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var80 = var76.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var85 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var86 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, var73, false, '4', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var87 = var51.setListSeparator('4');
    boolean var88 = var87.isList();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var88);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == false);

  }

  public void test151() throws Throwable {

    com.martiansoftware.jsap.stringparsers.PackageStringParser var0 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var5 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var17 = var6.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = var19.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption(var3, (com.martiansoftware.jsap.StringParser)var5, var17, false, '4', "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var59 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));

  }

  public void test152() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigIntegerStringParser var0 = new com.martiansoftware.jsap.stringparsers.BigIntegerStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var26 = var15.getClass("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var38 = var27.getHelp((-1), "hi!");
    double var40 = var15.getDouble(var38, 0.0d);
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.ParseException var47 = new com.martiansoftware.jsap.ParseException(var46);
    java.util.Iterator var48 = var15.getExceptionIterator(var46);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var49 = var0.parse(var46);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);

  }

  public void test153() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    java.lang.String var17 = var4.getIDByLongFlag(var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.util.List var37 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var38 = var4.getIDByLongFlag("");
    com.martiansoftware.jsap.JSAP var39 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var40 = var39.getHelp();
    java.lang.String var41 = var39.getUsage();
    com.martiansoftware.jsap.IDMap var42 = var39.getIDMap();
    java.lang.String var43 = var39.toString();
    boolean var44 = var4.idExists(var43);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var44);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);

  }

  public void test154() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    boolean var1 = var0.mustExist();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);

  }

  public void test155() throws Throwable {

    java.lang.String var2 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var2, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 10.0f, 0.0f);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var19 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var20 = var19.getParameter();
    boolean var21 = var19.declaredListSeparator();
    char var22 = var19.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var25 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var24);
    java.lang.String var26 = var24.toString();
    var19.setLongflag(var26);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)10.0f, (java.lang.Object)var26);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "hi!"+ "'", var2.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var26.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));

  }

  public void test156() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.util.Iterator var17 = var15.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var18 = var15.getIDMap();
    java.lang.String var19 = var15.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var23 = var14.getByte(var19, (byte)(-1));
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var23, (byte)1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == (byte)(-1));

  }

  public void test157() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch(var21);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    com.martiansoftware.jsap.UnspecifiedParameterException var54 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var57 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var56);
    com.martiansoftware.jsap.ParseException var58 = new com.martiansoftware.jsap.ParseException("", (java.lang.Throwable)var57);
    com.martiansoftware.jsap.Switch var59 = var35.setDefault("");
    java.lang.String var60 = var35.getLongFlag();
    java.lang.String var61 = var35.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "[]"+ "'", var61.equals("[]"));

  }

  public void test158() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongStringParser var0 = new com.martiansoftware.jsap.stringparsers.LongStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var9 = var0.parse("");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);

  }

  public void test159() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getHelp();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    java.util.Iterator var8 = var5.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    boolean var14 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    java.lang.String var28 = var12.getHelp(100, "hi!");
    java.lang.String var29 = var5.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var49 = var0.getHelp(100, "");
    java.lang.String var50 = var0.toString();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var51 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var52 = var51.getParameter();
    boolean var53 = var51.declaredListSeparator();
    boolean var54 = var51.getIslist();
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var65 = var64.getShortFlag();
    char var66 = var64.getShortFlag();
    char var67 = var64.getShortFlag();
    com.martiansoftware.jsap.Flagged var68 = var55.getByShortFlag(var67);
    junit.framework.Assert.assertNotSame(var50, (java.lang.Object)var54, (java.lang.Object)var67);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var50, (short)10, (short)100);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var28.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == null);

  }

  public void test160() throws Throwable {

    com.martiansoftware.jsap.stringparsers.CharacterStringParser var0 = new com.martiansoftware.jsap.stringparsers.CharacterStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var10 = new com.martiansoftware.jsap.ParseException("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var11 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }

  }

  public void test161() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongStringParser var0 = com.martiansoftware.jsap.stringparsers.LongStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var10 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);

  }

  public void test162() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      double var49 = var14.getDouble("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);

  }

  public void test163() throws Throwable {

    com.martiansoftware.jsap.Defaults var0 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var1 = var0.idIterator();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var13 = var2.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var17 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var21 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var22 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var23 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var30 = var29.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var31 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var23, "hi!", true, '4', "", var30);
    java.lang.String[] var32 = new java.lang.String[] { var30};
    var0.addDefault(var13, var32);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var43 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var51 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var52 = var48.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var53 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var54 = var53.getID();
    java.lang.String[] var55 = new java.lang.String[] { var54};
    var0.addDefault("hi!", var55);
    java.util.Iterator var57 = var0.idIterator();
    java.util.Iterator var58 = var0.idIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "hi!"+ "'", var51.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "hi!"+ "'", var54.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);

  }

  public void test164() throws Throwable {

    java.lang.String var3 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var3, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 10.0f, 0.0f);
    java.lang.String var23 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var23, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(1.0f, 1.0f, 1.0f);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((-1.0f), 10.0f, 1.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "hi!"+ "'", var3.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!"+ "'", var23.equals("hi!"));

  }

  public void test165() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.ant.SwitchConfiguration var28 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var29 = var28.getLongflag();
    var28.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("", (short)10, (short)1);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));

  }

  public void test166() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.JSAPException var39 = new com.martiansoftware.jsap.JSAPException(var37);
    java.util.Date var40 = var14.getDate(var37);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      long var41 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.parseSize((java.lang.CharSequence)var37);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == null);

  }

  public void test167() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigDecimalStringParser var0 = new com.martiansoftware.jsap.stringparsers.BigDecimalStringParser();
    com.martiansoftware.jsap.TestOption var1 = new com.martiansoftware.jsap.TestOption();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var1.setName("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var12 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }

  }

  public void test168() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    junit.framework.Assert.assertFalse(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);

  }

  public void test169() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var4, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    junit.framework.Assert.assertEquals(var4, 100.0d, 10.0d, 100.0d);
    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!", 10.0d, 100.0d, 0.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));

  }

  public void test170() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigDecimalStringParser var0 = new com.martiansoftware.jsap.stringparsers.BigDecimalStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.util.Iterator var18 = var16.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var19 = var16.getIDMap();
    java.lang.String var20 = var16.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var24 = var15.getByte(var20, (byte)(-1));
    com.martiansoftware.jsap.SimpleJSAP var25 = new com.martiansoftware.jsap.SimpleJSAP(var20);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var26 = var0.parse(var20);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == (byte)(-1));

  }

  public void test171() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var23 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var24 = var20.setHelp("hi!");
    var20.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var27 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    java.lang.String var30 = var28.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    boolean var32 = var31.messagePrinted();
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var44 = var33.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var27, var32, var44);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var50 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var54 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var55 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var56 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var62 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var63 = var62.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var64 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var56, "hi!", true, '4', "", var63);
    com.martiansoftware.jsap.UnflaggedOption var65 = var46.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var69 = var67.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var70 = var46.setList(false);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue("", false);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!"+ "'", var23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);

  }

  public void test172() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.IntSizeStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    float[] var20 = var15.getFloatArray(var18);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var30 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var33 = var15.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var38 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var39 = var35.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var40 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var41 = var40.getID();
    boolean[] var42 = var15.getBooleanArray(var41);
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var47 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var48 = var44.setHelp("hi!");
    java.lang.String[] var49 = var15.getStringArray("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var50 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "hi!"+ "'", var38.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "hi!"+ "'", var41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "hi!"+ "'", var47.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);

  }

  public void test173() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ShortStringParser var0 = com.martiansoftware.jsap.stringparsers.ShortStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    boolean var21 = var19.messagePrinted();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var34 = var23.getHelp((-1), "hi!");
    java.lang.String var35 = var19.getHelp(100, "hi!");
    java.util.Date[] var36 = var15.getDateArray(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    boolean var42 = var40.messagePrinted();
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var55 = var44.getHelp((-1), "hi!");
    java.lang.String var56 = var40.getHelp(100, "hi!");
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    java.lang.String var59 = var57.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var60 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    boolean var61 = var60.messagePrinted();
    java.lang.String var62 = var60.getHelp();
    com.martiansoftware.jsap.ParseException var63 = new com.martiansoftware.jsap.ParseException(var62);
    com.martiansoftware.jsap.JSAPException var64 = new com.martiansoftware.jsap.JSAPException(var56, (java.lang.Throwable)var63);
    java.net.InetAddress[] var65 = var15.getInetAddressArray(var56);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var66 = var0.parse(var56);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var35.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var56.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var62.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);

  }

  public void test174() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var16 = var15.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var17 = var3.setScreenWidth(var16);
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    java.lang.String var20 = var18.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var21 = new com.martiansoftware.jsap.SimpleJSAP(var20);
    boolean var22 = var21.messagePrinted();
    java.lang.String var23 = var21.getHelp();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    boolean var28 = var27.messagePrinted();
    java.lang.String var29 = var27.getHelp();
    com.martiansoftware.jsap.ParseException var30 = new com.martiansoftware.jsap.ParseException(var29);
    java.lang.String[] var31 = new java.lang.String[] { var29};
    com.martiansoftware.jsap.JSAPResult var32 = var21.parse(var31);
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var42 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var43 = var32.getClass("hi!");
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var55 = var44.getHelp((-1), "hi!");
    double var57 = var32.getDouble(var55, 0.0d);
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    java.lang.String var60 = var58.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    boolean var62 = var61.messagePrinted();
    java.lang.String var63 = var61.getHelp();
    com.martiansoftware.jsap.ParseException var64 = new com.martiansoftware.jsap.ParseException(var63);
    java.util.Iterator var65 = var32.getExceptionIterator(var63);
    java.lang.String[] var66 = new java.lang.String[] { var63};
    com.martiansoftware.jsap.JSAPResult var67 = var17.parse(var66);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var76 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var77 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var83 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var84 = var83.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var85 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var77, "hi!", true, '4', "", var84);
    java.lang.String var86 = var85.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var86);
    java.lang.Class[] var88 = var67.getClassArray(var86);
    java.lang.String[] var90 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    java.lang.Package[] var91 = var67.getPackageArray("");
    com.martiansoftware.jsap.FlaggedOption var93 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var95 = var93.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var97 = var93.setRequired(false);
    java.lang.String var98 = var93.getUsage();
    java.net.URL var99 = var67.getURL(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var23.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var29.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var63.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + ""+ "'", var84.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var86.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var97 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var98 + "' != '" + "[<hi!>]"+ "'", var98.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var99 == null);

  }

  public void test175() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var38 = com.martiansoftware.util.StringUtils.wrapToList(var21, 1);
    java.util.List var40 = com.martiansoftware.util.StringUtils.wrapToList(var21, 1);
    com.martiansoftware.jsap.SyntaxException var41 = new com.martiansoftware.jsap.SyntaxException(var21);
    com.martiansoftware.jsap.JSAPException var42 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var41);
    com.martiansoftware.jsap.ParseException var43 = new com.martiansoftware.jsap.ParseException((java.lang.Throwable)var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);

  }

  public void test176() throws Throwable {

    com.martiansoftware.jsap.ant.DefaultValue var0 = new com.martiansoftware.jsap.ant.DefaultValue();
    java.lang.String var1 = var0.getValue();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var11 = var10.getShortFlag();
    char var12 = var10.getShortFlag();
    char var13 = var10.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var18 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var19 = var15.setHelp("hi!");
    var15.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var22 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var24 = var23.getHelp();
    java.lang.String var25 = var23.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    boolean var27 = var26.messagePrinted();
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var39 = var28.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    com.martiansoftware.jsap.UnflaggedOption var41 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var22, var27, var39);
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var59 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var51, "hi!", true, '4', "", var58);
    com.martiansoftware.jsap.UnflaggedOption var60 = var41.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var61 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var62 = var60.setStringParser((com.martiansoftware.jsap.StringParser)var61);
    char var63 = var60.getListSeparator();
    com.martiansoftware.jsap.Switch var64 = var10.setShortFlag(var63);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var68 = var10.setLongFlag("hi!");
    var0.addText("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "hi!"+ "'", var18.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);

  }

  public void test177() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var51 = var27.setList(false);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var61 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var69 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var61, "hi!", true, '4', "", var68);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var70 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    java.lang.String var73 = var71.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var74 = new com.martiansoftware.jsap.SimpleJSAP(var73);
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var78 = var76.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var80 = var76.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var85 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var86 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, var73, false, '4', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var87 = var51.setListSeparator('4');
    char var88 = var87.getListSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == '4');

  }

  public void test178() throws Throwable {

    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(10L, 100L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test179() throws Throwable {

    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(100L, (-1L));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test180() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var33 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var34 = new java.lang.Object[] { var33};
    java.lang.Object[] var35 = var14.getObjectArray(var31, var34);
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var36 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException(var31);
    java.lang.String[] var37 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);

  }

  public void test181() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongStringParser var0 = new com.martiansoftware.jsap.stringparsers.LongStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var4 = var2.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var6 = var2.setRequired(false);
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.FlaggedOption var10 = var6.setUsageName(var9);
    java.lang.String var11 = var6.getLongFlag();
    java.lang.String var12 = var6.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var13 = var0.parse(var12);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "[<>]"+ "'", var12.equals("[<>]"));

  }

  public void test182() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      var0.testConfig();
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test183() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.util.Iterator var17 = var15.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var18 = var15.getIDMap();
    java.lang.String var19 = var15.getHelp();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    java.util.Iterator var23 = var20.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    boolean var28 = var27.messagePrinted();
    boolean var29 = var27.messagePrinted();
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var42 = var31.getHelp((-1), "hi!");
    java.lang.String var43 = var27.getHelp(100, "hi!");
    java.lang.String var44 = var20.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var54 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, "hi!", true, '4', "", var61);
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var64 = var15.getHelp(100, "");
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    java.lang.String var67 = var65.getUsage();
    java.util.Iterator var68 = var65.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    java.lang.String var71 = var69.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var72 = new com.martiansoftware.jsap.SimpleJSAP(var71);
    boolean var73 = var72.messagePrinted();
    boolean var74 = var72.messagePrinted();
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var81 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var85 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var86 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var87 = var76.getHelp((-1), "hi!");
    java.lang.String var88 = var72.getHelp(100, "hi!");
    java.lang.String var89 = var65.getHelp(100);
    java.lang.String var90 = var15.getHelp(100);
    boolean[] var91 = var14.getBooleanArray(var90);
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var92 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var43.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + ""+ "'", var87.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var88.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + ""+ "'", var89.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + ""+ "'", var90.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);

  }

  public void test184() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.Defaults var3 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var4 = var3.idIterator();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var14 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.lang.Character var36 = var35.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var39 = var35.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var40 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var41 = new java.lang.String[] { "hi!"};
    var3.addDefault("hi!", var41);
    java.lang.String var43 = com.martiansoftware.util.StringUtils.noNull("hi!");
    var0.setId("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      long var45 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.parseSize((java.lang.CharSequence)"hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + '4'+ "'", var36.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));

  }

  public void test185() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    boolean var5 = var3.messagePrinted();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var18 = var7.getHelp((-1), "hi!");
    java.lang.String var19 = var3.getHelp(100, "hi!");
    com.martiansoftware.jsap.ParseException var20 = new com.martiansoftware.jsap.ParseException(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var19.equals("  [--help]\n        Prints this help message.\n"));

  }

  public void test186() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.tearDown();
    var0.tearDown();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testSimpleDefault();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test187() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.ant.SwitchConfiguration var28 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var29 = var28.getLongflag();
    var28.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var51 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var52 = var51.getLongflag();
    var51.setShortflag('#');
    java.lang.String var55 = var51.getLongflag();
    char var56 = var51.getShortflag();
    com.martiansoftware.jsap.Switch var57 = var50.setShortFlag(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);

  }

  public void test188() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.IntSizeStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var38 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var46 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var38, "hi!", true, '4', "", var45);
    com.martiansoftware.jsap.UnflaggedOption var47 = var28.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var48 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var49 = var47.setStringParser((com.martiansoftware.jsap.StringParser)var48);
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var59 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var67 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var59, "hi!", true, '4', "", var66);
    java.lang.String var68 = var67.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var68);
    com.martiansoftware.jsap.UnflaggedOption var70 = var47.setUsageName(var68);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var71 = var0.parse(var68);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var68.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);

  }

  public void test189() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(false);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);

  }

  public void test190() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    boolean var24 = var23.messagePrinted();
    java.lang.String var25 = var23.getHelp();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    java.lang.String var28 = var26.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var29 = new com.martiansoftware.jsap.SimpleJSAP(var28);
    boolean var30 = var29.messagePrinted();
    java.lang.String var31 = var29.getHelp();
    com.martiansoftware.jsap.ParseException var32 = new com.martiansoftware.jsap.ParseException(var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    com.martiansoftware.jsap.JSAPResult var34 = var23.parse(var33);
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    boolean var40 = var38.messagePrinted();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var53 = var42.getHelp((-1), "hi!");
    java.lang.String var54 = var38.getHelp(100, "hi!");
    java.util.Date[] var55 = var34.getDateArray(var54);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var65 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var65, "hi!", true, '4', "", var72);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var74 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    java.lang.String var77 = var75.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var78 = new com.martiansoftware.jsap.SimpleJSAP(var77);
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var82 = var80.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var84 = var80.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var86 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var89 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var90 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var74, var77, false, '4', "hi!");
    java.lang.Exception[] var91 = var34.getExceptionArray("hi!");
    java.math.BigInteger[] var92 = var14.getBigIntegerArray("hi!");
    com.martiansoftware.jsap.TestSwitch var93 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var93.testLongFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var25.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var31.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var54.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);

  }

  public void test191() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.JSAPException var39 = new com.martiansoftware.jsap.JSAPException(var37);
    java.util.Date var40 = var14.getDate(var37);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var45 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var46 = var42.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var47 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = var42.setStringParser((com.martiansoftware.jsap.StringParser)var47);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var58 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var61 = var48.setHelp("hi!");
    int[] var62 = var14.getIntArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var72 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var78 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var79 = var78.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var80 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var72, "hi!", true, '4', "", var79);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var81 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var82 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var83 = var82.getHelp();
    java.lang.String var84 = var82.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var85 = new com.martiansoftware.jsap.SimpleJSAP(var84);
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var89 = var87.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var91 = var87.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var93 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var95 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var96 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var97 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var81, var84, false, '4', "hi!");
    java.lang.String var98 = var97.getSyntax();
    char[] var99 = var14.getCharArray(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "hi!"+ "'", var45.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + ""+ "'", var83.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + ""+ "'", var84.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var98 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var98.equals("[(-4|--hi!)[:<hi!>]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var99 == null);

  }

  public void test192() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ShortStringParser var0 = new com.martiansoftware.jsap.stringparsers.ShortStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.IDMap var4 = var1.getIDMap();
    java.lang.String var5 = var1.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var6 = var0.parse(var5);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));

  }

  public void test193() throws Throwable {

    com.martiansoftware.jsap.stringparsers.PackageStringParser var0 = new com.martiansoftware.jsap.stringparsers.PackageStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    boolean var21 = var19.messagePrinted();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var34 = var23.getHelp((-1), "hi!");
    java.lang.String var35 = var19.getHelp(100, "hi!");
    java.util.Date[] var36 = var15.getDateArray(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    java.lang.Class[] var55 = var15.getClassArray("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var56 = var0.parse("");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var35.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);

  }

  public void test194() throws Throwable {

    com.martiansoftware.jsap.stringparsers.PackageStringParser var0 = new com.martiansoftware.jsap.stringparsers.PackageStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.IDMap var4 = var1.getIDMap();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var6 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var7 = var6.idIterator();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var19 = var8.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var29 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var37 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var29, "hi!", true, '4', "", var36);
    java.lang.String[] var38 = new java.lang.String[] { var36};
    var6.addDefault(var19, var38);
    java.lang.String[] var40 = new java.lang.String[] { var19};
    com.martiansoftware.jsap.JSAPResult var41 = var5.parse(var40);
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var51 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var54 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var55 = var41.contains("hi!");
    java.math.BigInteger[] var57 = var41.getBigIntegerArray("");
    boolean var58 = var4.idExists("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var59 = var0.parse("");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);

  }

  public void test195() throws Throwable {

    com.martiansoftware.jsap.UnknownFlagException var1 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var2 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var1);
    java.lang.String var3 = var1.toString();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var4 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var5 = var4.getParameter();
    java.lang.String var6 = var4.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var11 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var12 = var8.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var13 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var14 = var13.getID();
    java.lang.String var15 = var13.getID();
    var4.setLongflag(var15);
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var19 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var20 = var19.getLongflag();
    var19.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var23 = var18.setListSeparator('#');
    boolean var24 = var23.isList();
    var4.setAllowmultipledeclarations(var24);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var3, var24);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var3.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!"+ "'", var14.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi!"+ "'", var15.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);

  }

  public void test196() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.ColorStringParser var18 = com.martiansoftware.jsap.stringparsers.ColorStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var28 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var35 = var34.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var36 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var28, "hi!", true, '4', "", var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var55 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var63 = var61.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var65 = var61.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var71 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var55, var58, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var73 = var72.getHelp();
    java.lang.String var74 = var72.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var75 = new com.martiansoftware.jsap.SimpleJSAP(var74);
    boolean var76 = var75.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var80 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var84 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var85 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var86 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var92 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var93 = var92.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var94 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var86, "hi!", true, '4', "", var93);
    com.martiansoftware.jsap.UnflaggedOption var95 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var18, "hi!", false, var76, "hi!");
    char var96 = var95.getListSeparator();
    boolean var97 = var95.isGreedy();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ""+ "'", var93.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);

  }

  public void test197() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.ant.SwitchConfiguration var28 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var29 = var28.getLongflag();
    var28.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var51 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var52 = var51.getParameter();
    java.lang.String var53 = var51.getLongflag();
    com.martiansoftware.jsap.Defaults var54 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var55 = var54.idIterator();
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var65 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var68 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var72 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var76 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var77 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var78 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var84 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var85 = var84.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var86 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var78, "hi!", true, '4', "", var85);
    java.lang.Character var87 = var86.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var90 = var86.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var91 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var92 = new java.lang.String[] { "hi!"};
    var54.addDefault("hi!", var92);
    java.lang.String var94 = com.martiansoftware.util.StringUtils.noNull("hi!");
    var51.setId("hi!");
    com.martiansoftware.jsap.Parameter var96 = var50.setHelp("hi!");
    java.lang.Character var97 = var50.getShortFlagCharacter();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + ""+ "'", var85.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + '4'+ "'", var87.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "hi!"+ "'", var94.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var97 + "' != '" + '#'+ "'", var97.equals('#'));

  }

  public void test198() throws Throwable {

    com.martiansoftware.jsap.stringparsers.InetAddressStringParser var0 = new com.martiansoftware.jsap.stringparsers.InetAddressStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.stringparsers.ColorStringParser var19 = com.martiansoftware.jsap.stringparsers.ColorStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var29 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var37 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var29, "hi!", true, '4', "", var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var47 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var55 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var47, "hi!", true, '4', "", var54);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var56 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    java.lang.String var59 = var57.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var60 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var64 = var62.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var66 = var62.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var71 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var72 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var56, var59, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var73 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var74 = var73.getHelp();
    java.lang.String var75 = var73.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var76 = new com.martiansoftware.jsap.SimpleJSAP(var75);
    boolean var77 = var76.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var81 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var85 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var86 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var87 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var93 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var94 = var93.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var95 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var87, "hi!", true, '4', "", var94);
    com.martiansoftware.jsap.UnflaggedOption var96 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var19, "hi!", false, var77, "hi!");
    com.martiansoftware.jsap.FlaggedOption var97 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.Object var98 = var0.parse("");
    var0.tearDown();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + ""+ "'", var94.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var98 == null);

  }

  public void test199() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP(var25);
      fail("Expected exception of type com.thoughtworks.xstream.io.StreamException");
    } catch (com.thoughtworks.xstream.io.StreamException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));

  }

  public void test200() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var3 = new com.martiansoftware.jsap.ant.ParserProperty();
    var0.addConfiguredProperty(var3);
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var8 = new com.martiansoftware.jsap.SimpleJSAP(var7);
    boolean var9 = var8.messagePrinted();
    java.lang.String var10 = var8.getHelp();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    java.lang.String var16 = var14.getHelp();
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException(var16);
    java.lang.String[] var18 = new java.lang.String[] { var16};
    com.martiansoftware.jsap.JSAPResult var19 = var8.parse(var18);
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.util.Iterator var22 = var20.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var23 = var20.getIDMap();
    java.lang.String var24 = var20.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var28 = var19.getByte(var24, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var29 = new com.martiansoftware.jsap.QualifiedSwitch(var24);
    var3.setValue(var24);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var31 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var32 = var31.getParameter();
    boolean var33 = var31.declaredListSeparator();
    char var34 = var31.getShortflag();
    boolean var35 = var31.getIslist();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var36 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var24, var35);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var10.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var16.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);

  }

  public void test201() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var9 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((short)1, (short)0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test202() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.stringparsers.DateStringParser var1 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var6 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var7 = var3.setHelp("hi!");
    var3.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var10 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var28 = new com.martiansoftware.jsap.SimpleJSAP(var27);
    com.martiansoftware.jsap.UnflaggedOption var29 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var10, var15, var27);
    com.martiansoftware.jsap.ant.SwitchConfiguration var30 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var31 = var30.getLongflag();
    var30.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var43 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var51 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var43, "hi!", true, '4', "", var50);
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var1.setProperty("", "hi!");
    java.lang.String[] var63 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("hi!");
    java.lang.String var64 = var0.getProperty("hi!");
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    java.lang.String var67 = var65.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var68 = new com.martiansoftware.jsap.SimpleJSAP(var67);
    boolean var69 = var68.messagePrinted();
    boolean var70 = var68.messagePrinted();
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var77 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var81 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var82 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var83 = var72.getHelp((-1), "hi!");
    java.lang.String var84 = var68.getHelp(100, "hi!");
    com.martiansoftware.jsap.JSAP var85 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var86 = var85.getHelp();
    java.lang.String var87 = var85.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var88 = new com.martiansoftware.jsap.SimpleJSAP(var87);
    boolean var89 = var88.messagePrinted();
    java.lang.String var90 = var88.getHelp();
    com.martiansoftware.jsap.ParseException var91 = new com.martiansoftware.jsap.ParseException(var90);
    com.martiansoftware.jsap.JSAPException var92 = new com.martiansoftware.jsap.JSAPException(var84, (java.lang.Throwable)var91);
    com.martiansoftware.jsap.JSAP var93 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var94 = var93.getHelp();
    java.util.Iterator var95 = var93.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var96 = var93.getIDMap();
    java.lang.String var97 = var93.getHelp();
    java.lang.String var98 = var93.toString();
    java.lang.String var99 = var0.getProperty(var84, var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "hi!"+ "'", var6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + ""+ "'", var83.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var84.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + ""+ "'", var86.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + ""+ "'", var87.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var90.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + ""+ "'", var94.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var97 + "' != '" + ""+ "'", var97.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var98 + "' != '" + ""+ "'", var98.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var99 + "' != '" + ""+ "'", var99.equals(""));

  }

  public void test203() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.Character var18 = var17.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = var17.setLongFlag("hi!");
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    com.martiansoftware.jsap.stringparsers.FileStringParser var47 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var47.tearDown();
    boolean var49 = var47.mustBeDirectory();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var50 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var51 = var50.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var52 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var53 = var52.getLongflag();
    var52.setShortflag('#');
    java.lang.String var56 = var52.getLongflag();
    char var57 = var52.getShortflag();
    var50.setShortflag(var57);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!", (com.martiansoftware.jsap.StringParser)var31, var45, var49, var57, "hi!");
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var45, '4', ' ');
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + '4'+ "'", var18.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == '#');

  }

  public void test204() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.Character var18 = var17.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = var17.setLongFlag("hi!");
    boolean var22 = var17.isList();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var22);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + '4'+ "'", var18.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);

  }

  public void test205() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.IntSizeStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.UnspecifiedParameterException var19 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var20 = var0.parse("");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));

  }

  public void test206() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testRequired();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test207() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var4 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = var18.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var48 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var48, "hi!", true, '4', "", var55);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption(var2, (com.martiansoftware.jsap.StringParser)var4, var16, false, '4', "hi!");
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var62 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var63 = var59.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var64 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var65 = var4.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "hi!"+ "'", var62.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);

  }

  public void test208() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getListseparator();
    java.lang.String var4 = var0.getLongflag();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);

  }

  public void test209() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var6 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var7 = var6.getID();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var17 = var16.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String[] var37 = var36.getDefault();
    char var38 = var36.getShortFlag();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var7, var17, var38);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == '\u0000');

  }

  public void test210() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var40 = var34.setRequired(var39);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var41 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var42 = var41.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var43 = var34.setAllowMultipleDeclarations(var42);
    boolean var44 = var43.allowMultipleDeclarations();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);

  }

  public void test211() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigIntegerStringParser var0 = com.martiansoftware.jsap.stringparsers.BigIntegerStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    boolean var21 = var19.messagePrinted();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var34 = var23.getHelp((-1), "hi!");
    java.lang.String var35 = var19.getHelp(100, "hi!");
    java.util.Date[] var36 = var15.getDateArray(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    java.lang.Class[] var55 = var15.getClassArray("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var56 = var0.parse("");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var35.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);

  }

  public void test212() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.Defaults var3 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var4 = var3.idIterator();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var14 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.lang.Character var36 = var35.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var39 = var35.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var40 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var41 = new java.lang.String[] { "hi!"};
    var3.addDefault("hi!", var41);
    java.lang.String var43 = com.martiansoftware.util.StringUtils.noNull("hi!");
    var0.setId("hi!");
    com.martiansoftware.jsap.ant.ParserProperty var45 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var55 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var62 = var61.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var63 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var55, "hi!", true, '4', "", var62);
    java.util.List var65 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    var45.setName("");
    var0.addConfiguredProperty(var45);
    java.lang.String[] var68 = var0.getDefaults();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + '4'+ "'", var36.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == null);

  }

  public void test213() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ShortStringParser var0 = com.martiansoftware.jsap.stringparsers.ShortStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.util.Iterator var3 = var1.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var4 = var1.getIDMap();
    java.lang.String var5 = var1.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    java.util.Iterator var9 = var6.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    boolean var15 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var28 = var17.getHelp((-1), "hi!");
    java.lang.String var29 = var13.getHelp(100, "hi!");
    java.lang.String var30 = var6.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var40 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var48 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var40, "hi!", true, '4', "", var47);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var50 = var1.getHelp(100, "");
    java.lang.String var51 = var1.toString();
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    java.lang.String var55 = var53.getUsage();
    java.util.Iterator var56 = var53.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    java.lang.String var59 = var57.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var60 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    boolean var61 = var60.messagePrinted();
    boolean var62 = var60.messagePrinted();
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var69 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var73 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var74 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var75 = var64.getHelp((-1), "hi!");
    java.lang.String var76 = var60.getHelp(100, "hi!");
    java.lang.String var77 = var53.getHelp(100);
    java.lang.String var78 = var1.getHelp(1, var77);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var79 = var0.parse(var78);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var29.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var76.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));

  }

  public void test214() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.tearDown();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testRequired();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test215() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    com.martiansoftware.jsap.ant.SwitchConfiguration var29 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var30 = var29.getLongflag();
    var29.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var42 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var49 = var48.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var50 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var42, "hi!", true, '4', "", var49);
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var0.setProperty("", "hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var62 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("");
    com.martiansoftware.jsap.ant.ParserProperty var63 = new com.martiansoftware.jsap.ant.ParserProperty();
    java.lang.String var64 = var63.getValue();
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var74 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var80 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var81 = var80.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var74, "hi!", true, '4', "", var81);
    java.lang.Character var83 = var82.getShortFlagCharacter();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("", (java.lang.Object)var63, (java.lang.Object)var82);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + '4'+ "'", var83.equals('4'));

  }

  public void test216() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongStringParser var0 = new com.martiansoftware.jsap.stringparsers.LongStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    boolean var21 = var19.messagePrinted();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var34 = var23.getHelp((-1), "hi!");
    java.lang.String var35 = var19.getHelp(100, "hi!");
    java.util.Date[] var36 = var15.getDateArray(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var55 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var63 = var61.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var65 = var61.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var71 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var55, var58, false, '4', "hi!");
    java.lang.Exception[] var72 = var15.getExceptionArray("hi!");
    com.martiansoftware.jsap.JSAP var73 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var78 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var82 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var83 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var84 = var73.getHelp((-1), "hi!");
    java.lang.Object var85 = var15.getObject("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var86 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var35.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + ""+ "'", var84.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == null);

  }

  public void test217() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    boolean var3 = var0.mustExist();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var13 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var21 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var13, "hi!", true, '4', "", var20);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var27 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var28 = var24.setHelp("hi!");
    var24.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var31 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.lang.String var34 = var32.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    boolean var36 = var35.messagePrinted();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var48 = var37.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    com.martiansoftware.jsap.UnflaggedOption var50 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var31, var36, var48);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.UnflaggedOption var69 = var50.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var70 = var22.setList(true);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var75 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var76 = var72.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var77 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var78 = var72.setStringParser((com.martiansoftware.jsap.StringParser)var77);
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var86 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var87 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var88 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var91 = var78.setHelp("hi!");
    com.martiansoftware.jsap.FlaggedOption var92 = var22.setUsageName("hi!");
    com.martiansoftware.jsap.FlaggedOption var94 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var95 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    java.lang.String var96 = var0.getProperty("hi!", "hi!");
    var0.setUp();
    var0.tearDown();
    var0.setUp();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi!"+ "'", var27.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "hi!"+ "'", var75.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "hi!"+ "'", var96.equals("hi!"));

  }

  public void test218() throws Throwable {

    junit.framework.Test var0 = com.martiansoftware.jsap.TestCommandLineTokenizer.suite();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);

  }

  public void test219() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var11 = var0.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    com.martiansoftware.jsap.JSAPException var13 = new com.martiansoftware.jsap.JSAPException(var11);
    com.martiansoftware.jsap.JSAPException var14 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var13);
    com.martiansoftware.jsap.JSAPException var15 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));

  }

  public void test220() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var28 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var29 = var28.getParameter();
    boolean var30 = var28.declaredListSeparator();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var34 = var32.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var36 = var32.setRequired(false);
    var28.setAllowmultipledeclarations(false);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var38 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser("", false);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);

  }

  public void test221() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    java.lang.Class[] var54 = var14.getClassArray("");
    com.martiansoftware.jsap.stringparsers.DateStringParser var55 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var55.setUp();
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var60 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var64 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var65 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var66 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var73 = var72.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var74 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var66, "hi!", true, '4', "", var73);
    java.lang.String var75 = var55.getProperty("");
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var79 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var83 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var84 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var85 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var90 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var92 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var95 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var96 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var97 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var98 = var55.getProperty("hi!", "hi!");
    java.io.File var99 = var14.getFile("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var98 + "' != '" + "hi!"+ "'", var98.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var99 == null);

  }

  public void test222() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.JSAPException var39 = new com.martiansoftware.jsap.JSAPException(var37);
    java.util.Date var40 = var14.getDate(var37);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var45 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var46 = var42.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var47 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = var42.setStringParser((com.martiansoftware.jsap.StringParser)var47);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var58 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var61 = var48.setHelp("hi!");
    int[] var62 = var14.getIntArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var72 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var72.testSwitchParse();
    var72.testLongFlag();
    var72.testID();
    java.lang.String var76 = var72.getName();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      double var77 = var14.getDouble(var76);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "hi!"+ "'", var45.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "hi!"+ "'", var76.equals("hi!"));

  }

  public void test223() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    boolean var50 = var49.messagePrinted();
    java.lang.String var51 = var49.getHelp();
    com.martiansoftware.jsap.ParseException var52 = new com.martiansoftware.jsap.ParseException(var51);
    java.lang.String[] var53 = new java.lang.String[] { var51};
    com.martiansoftware.jsap.JSAPResult var54 = var43.parse(var53);
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    java.util.Iterator var57 = var55.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var58 = var55.getIDMap();
    java.lang.String var59 = var55.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var63 = var54.getByte(var59, (byte)(-1));
    java.math.BigDecimal var64 = var14.getBigDecimal(var59);
    java.awt.Color var66 = var14.getColor("hi!");
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var71 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var72 = var68.setHelp("hi!");
    var68.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var75 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    java.lang.String var78 = var76.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var79 = new com.martiansoftware.jsap.SimpleJSAP(var78);
    boolean var80 = var79.messagePrinted();
    com.martiansoftware.jsap.JSAP var81 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var86 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var90 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var91 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var92 = var81.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var93 = new com.martiansoftware.jsap.SimpleJSAP(var92);
    com.martiansoftware.jsap.UnflaggedOption var94 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var75, var80, var92);
    java.math.BigDecimal[] var95 = var14.getBigDecimalArray("");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var51.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "hi!"+ "'", var71.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + ""+ "'", var92.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);

  }

  public void test224() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);

  }

  public void test225() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var54 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    java.lang.String var57 = var55.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var58 = new com.martiansoftware.jsap.SimpleJSAP(var57);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var62 = var60.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var64 = var60.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var69 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var70 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, var57, false, '4', "hi!");
    java.lang.Exception[] var71 = var14.getExceptionArray("hi!");
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var77 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var81 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var82 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var83 = var72.getHelp((-1), "hi!");
    java.lang.Object var84 = var14.getObject("hi!");
    java.util.Iterator var85 = var14.getBadParameterIDIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + ""+ "'", var83.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);

  }

  public void test226() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var33 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var34 = new java.lang.Object[] { var33};
    java.lang.Object[] var35 = var14.getObjectArray(var31, var34);
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);

  }

  public void test227() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var38 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var46 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var38, "hi!", true, '4', "", var45);
    com.martiansoftware.jsap.UnflaggedOption var47 = var28.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var51 = var49.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var52 = var28.setList(false);
    com.martiansoftware.jsap.stringparsers.FileStringParser var53 = var0.setMustBeFile(false);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var54 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var55 = var54.getParameter();
    boolean var56 = var54.declaredListSeparator();
    char var57 = var54.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var58 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var59 = var58.hasProperties();
    var54.setRequired(var59);
    junit.framework.Assert.assertFalse(var59);
    com.martiansoftware.jsap.stringparsers.FileStringParser var62 = var0.setMustBeDirectory(var59);
    var62.setUp();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);

  }

  public void test228() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var6 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var7 = var6.hasProperties();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var8 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var9 = var8.hasProperties();
    java.lang.String var10 = var8.getStringparser();
    boolean var11 = var8.getIslist();
    com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var12 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var5, var7, var11);
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var22 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var30 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var22, "hi!", true, '4', "", var29);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var31 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.lang.String var34 = var32.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var39 = var37.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var41 = var37.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, var34, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var48 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var49 = var12.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);

  }

  public void test229() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)"hi!");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);

  }

  public void test230() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.Defaults var3 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var4 = var3.idIterator();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var14 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.lang.Character var36 = var35.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var39 = var35.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var40 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var41 = new java.lang.String[] { "hi!"};
    var3.addDefault("hi!", var41);
    java.lang.String var43 = com.martiansoftware.util.StringUtils.noNull("hi!");
    var0.setId("hi!");
    com.martiansoftware.jsap.stringparsers.FileStringParser var45 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var45.tearDown();
    boolean var47 = var45.mustBeDirectory();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var48 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser("hi!", var47);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + '4'+ "'", var36.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);

  }

  public void test231() throws Throwable {

    com.martiansoftware.jsap.TestOption var0 = new com.martiansoftware.jsap.TestOption();
    int var1 = var0.countTestCases();
    int var2 = var0.countTestCases();
    int var3 = var0.countTestCases();
    junit.framework.TestResult var4 = var0.run();
    var0.testParsing();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);

  }

  public void test232() throws Throwable {

    com.martiansoftware.jsap.ant.ParserProperty var0 = new com.martiansoftware.jsap.ant.ParserProperty();
    java.lang.String var1 = var0.getValue();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    com.martiansoftware.jsap.stringparsers.ColorStringParser var20 = com.martiansoftware.jsap.stringparsers.ColorStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var48 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var48, "hi!", true, '4', "", var55);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var57 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    java.lang.String var60 = var58.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var65 = var63.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var67 = var63.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var69 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var57, var60, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var74 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var75 = var74.getHelp();
    java.lang.String var76 = var74.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var77 = new com.martiansoftware.jsap.SimpleJSAP(var76);
    boolean var78 = var77.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var86 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var87 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var88 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var90 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var94 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var95 = var94.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var96 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var88, "hi!", true, '4', "", var95);
    com.martiansoftware.jsap.UnflaggedOption var97 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var20, "hi!", false, var78, "hi!");
    var0.setValue("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + ""+ "'", var95.equals(""));

  }

  public void test233() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var2 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var3 = var2.getLongflag();
    var2.setShortflag('#');
    java.lang.String var6 = var2.getLongflag();
    char var7 = var2.getShortflag();
    var0.setShortflag(var7);
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    char var11 = var10.getShortFlag();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var7, var11);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '\u0000');

  }

  public void test234() throws Throwable {

    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(0L, 100L);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test235() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongStringParser var0 = new com.martiansoftware.jsap.stringparsers.LongStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var19 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));

  }

  public void test236() throws Throwable {

    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((short)(-1), (short)10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test237() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var11 = var0.getHelp((-1), "hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var12 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var13 = var12.getLongflag();
    var12.setShortflag('#');
    java.lang.String var16 = var12.getLongflag();
    var12.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var12.setShortflag('4');
    com.martiansoftware.jsap.Flagged var22 = var0.getByShortFlag((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var27 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var28 = var24.setHelp("hi!");
    var24.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var31 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.lang.String var34 = var32.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    boolean var36 = var35.messagePrinted();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var48 = var37.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    com.martiansoftware.jsap.UnflaggedOption var50 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var31, var36, var48);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.UnflaggedOption var69 = var50.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var73 = var71.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var74 = var50.setList(false);
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var78 = var76.setRequired(false);
    java.lang.String var79 = var76.getID();
    boolean var80 = var76.allowMultipleDeclarations();
    com.martiansoftware.jsap.UnflaggedOption var81 = var74.setList(var80);
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var85 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var89 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var90 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var91 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var94 = new com.martiansoftware.jsap.ParseException();
    com.martiansoftware.jsap.JSAPException var95 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var94);
    junit.framework.Assert.assertNotNull("hi!", (java.lang.Object)var94);
    com.martiansoftware.jsap.UnflaggedOption var97 = var74.setUsageName("hi!");
    java.lang.String[] var98 = new java.lang.String[] { "hi!"};
    com.martiansoftware.jsap.JSAPResult var99 = var0.parse(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi!"+ "'", var27.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "hi!"+ "'", var79.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var97 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var98 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var99 == null);

  }

  public void test238() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    java.lang.String var35 = var33.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var36 = new com.martiansoftware.jsap.SimpleJSAP(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var36.unregisterParameter((com.martiansoftware.jsap.Parameter)var38);
    com.martiansoftware.jsap.TestOption var40 = new com.martiansoftware.jsap.TestOption();
    int var41 = var40.countTestCases();
    int var42 = var40.countTestCases();
    int var43 = var40.countTestCases();
    java.lang.String var44 = var36.getHelp(var43);
    char[] var45 = var14.getCharArray(var44);
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var47 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var48 = var47.idIterator();
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var60 = var49.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var70 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var78 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, "hi!", true, '4', "", var77);
    java.lang.String[] var79 = new java.lang.String[] { var77};
    var47.addDefault(var60, var79);
    java.lang.String[] var81 = new java.lang.String[] { var60};
    com.martiansoftware.jsap.JSAPResult var82 = var46.parse(var81);
    java.lang.String var85 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.InetAddress[] var86 = var82.getInetAddressArray(var85);
    java.util.Iterator var87 = var14.getExceptionIterator(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var44.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi!"+ "'", var85.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);

  }

  public void test239() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.stringparsers.DateStringParser var1 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var6 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var7 = var3.setHelp("hi!");
    var3.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var10 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var28 = new com.martiansoftware.jsap.SimpleJSAP(var27);
    com.martiansoftware.jsap.UnflaggedOption var29 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var10, var15, var27);
    com.martiansoftware.jsap.ant.SwitchConfiguration var30 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var31 = var30.getLongflag();
    var30.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var43 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var51 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var43, "hi!", true, '4', "", var50);
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var1.setProperty("", "hi!");
    java.lang.String[] var63 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("hi!");
    java.lang.String var64 = var0.getProperty("hi!");
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var74 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var80 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var81 = var80.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var74, "hi!", true, '4', "", var81);
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      java.lang.Object var83 = var0.parse("hi!");
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test240() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DoubleStringParser var0 = com.martiansoftware.jsap.stringparsers.DoubleStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var4 = var2.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var6 = var2.setRequired(false);
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.FlaggedOption var10 = var6.setUsageName(var9);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var11 = var0.parse(var9);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);

  }

  public void test241() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    java.lang.String var58 = var57.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var58);
    boolean var60 = var14.userSpecified(var58);
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var62 = var61.getHelp();
    java.util.Iterator var63 = var61.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var64 = var61.getIDMap();
    java.lang.String var65 = var61.getHelp();
    java.lang.String var66 = var61.toString();
    java.lang.Object[] var67 = var14.getObjectArray(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var58.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);

  }

  public void test242() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    boolean var3 = var0.mustExist();
    var0.tearDown();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var8 = new com.martiansoftware.jsap.SimpleJSAP(var7);
    boolean var9 = var8.messagePrinted();
    boolean var10 = var8.messagePrinted();
    com.martiansoftware.jsap.stringparsers.FileStringParser var11 = var0.setMustBeFile(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);

  }

  public void test243() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var6 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var7 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var8 = var7.getRequired();
    boolean var9 = var7.hasProperties();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var10 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser("hi!", var9);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);

  }

  public void test244() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var4 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = var18.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var48 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var48, "hi!", true, '4', "", var55);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption(var2, (com.martiansoftware.jsap.StringParser)var4, var16, false, '4', "hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var58 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var59 = var58.getParameter();
    boolean var60 = var58.declaredListSeparator();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var61 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser(var2, var60);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);

  }

  public void test245() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var6 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var5);
    java.lang.String var7 = var5.toString();
    var0.setLongflag(var7);
    java.lang.String[] var9 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize(var7);
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var21 = var10.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    java.lang.String var50 = var49.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var50);
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption(var50);
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch(var21, '4', var50);
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var62 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var63 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var71 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var63, "hi!", true, '4', "", var70);
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var75 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var79 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var80 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var81 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals(var21, "hi!", "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertSame((java.lang.Object)var9, (java.lang.Object)"hi!");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var7.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var50.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));

  }

  public void test246() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    java.lang.String var39 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.InetAddress[] var40 = var36.getInetAddressArray(var39);
    com.martiansoftware.jsap.Defaults var41 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var42 = var41.idIterator();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var46 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var50 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var52 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var55 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var65 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var65, "hi!", true, '4', "", var72);
    java.lang.Character var74 = var73.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var77 = var73.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var78 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var79 = new java.lang.String[] { "hi!"};
    var41.addDefault("hi!", var79);
    java.lang.String var81 = com.martiansoftware.util.StringUtils.noNull("hi!");
    float var83 = var36.getFloat(var81, 10.0f);
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var87 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var90 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var91 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var92 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var93 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.JSAPException var94 = new com.martiansoftware.jsap.JSAPException(var81, (java.lang.Throwable)var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "hi!"+ "'", var39.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + '4'+ "'", var74.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "hi!"+ "'", var81.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 10.0f);

  }

  public void test247() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test1();
    var0.test3();

  }

  public void test248() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    java.lang.String var25 = var8.getHelp();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var26 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var25);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "hi!"+ "'", var25.equals("hi!"));

  }

  public void test249() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    java.lang.String[] var1 = var0.getDefaults();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var6 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var7 = var3.setHelp("hi!");
    var3.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var10 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var28 = new com.martiansoftware.jsap.SimpleJSAP(var27);
    com.martiansoftware.jsap.UnflaggedOption var29 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var10, var15, var27);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    com.martiansoftware.jsap.UnflaggedOption var48 = var29.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var52 = var50.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var53 = var29.setList(false);
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var62 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var63 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var71 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var63, "hi!", true, '4', "", var70);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var72 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var73 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var74 = var73.getHelp();
    java.lang.String var75 = var73.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var76 = new com.martiansoftware.jsap.SimpleJSAP(var75);
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var80 = var78.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var82 = var78.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var84 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var86 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var87 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var88 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var72, var75, false, '4', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var89 = var53.setListSeparator('4');
    boolean var90 = var89.isList();
    var0.setGreedy(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "hi!"+ "'", var6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);

  }

  public void test250() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var33 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var34 = new java.lang.Object[] { var33};
    java.lang.Object[] var35 = var14.getObjectArray(var31, var34);
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    boolean var40 = var39.messagePrinted();
    java.lang.String var41 = var39.getHelp();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    boolean var46 = var45.messagePrinted();
    java.lang.String var47 = var45.getHelp();
    com.martiansoftware.jsap.ParseException var48 = new com.martiansoftware.jsap.ParseException(var47);
    java.lang.String[] var49 = new java.lang.String[] { var47};
    com.martiansoftware.jsap.JSAPResult var50 = var39.parse(var49);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var69 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var70 = new java.lang.Object[] { var69};
    java.lang.Object[] var71 = var50.getObjectArray(var67, var70);
    boolean var72 = var14.userSpecified(var67);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var73 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var74 = var73.getParameter();
    boolean var75 = var73.declaredListSeparator();
    char var76 = var73.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var78 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var79 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var78);
    java.lang.String var80 = var78.toString();
    var73.setLongflag(var80);
    com.martiansoftware.jsap.JSAP var82 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var83 = var82.getHelp();
    java.lang.String var84 = var82.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var85 = new com.martiansoftware.jsap.SimpleJSAP(var84);
    boolean var86 = var85.messagePrinted();
    java.lang.String var87 = var85.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var88 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var89 = var88.hasProperties();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var90 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var91 = var90.hasProperties();
    java.lang.String var92 = var90.getStringparser();
    boolean var93 = var90.getIslist();
    com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var94 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var87, var89, var93);
    var73.setRequired(var89);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var96 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    boolean var97 = var96.getIslist();
    junit.framework.Assert.assertEquals(var67, var89, var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var41.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var47.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var80.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + ""+ "'", var83.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + ""+ "'", var84.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var87.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);

  }

  public void test251() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var47 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var48 = var46.setStringParser((com.martiansoftware.jsap.StringParser)var47);
    char var49 = var46.getListSeparator();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var59 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var67 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var59, "hi!", true, '4', "", var66);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var68 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    java.lang.String var71 = var69.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var72 = new com.martiansoftware.jsap.SimpleJSAP(var71);
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var76 = var74.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var78 = var74.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var80 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var83 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var84 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var68, var71, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var85 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var86 = var85.getHelp();
    java.lang.String var87 = var85.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var88 = new com.martiansoftware.jsap.SimpleJSAP(var87);
    boolean var89 = var88.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var90 = var84.setRequired(var89);
    java.lang.Character var91 = var90.getShortFlagCharacter();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var49, (char)var91);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + ""+ "'", var86.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + ""+ "'", var87.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + '4'+ "'", var91.equals('4'));

  }

  public void test252() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    boolean var5 = var3.messagePrinted();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var18 = var7.getHelp((-1), "hi!");
    java.lang.String var19 = var3.getHelp(100, "hi!");
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    boolean var24 = var23.messagePrinted();
    java.lang.String var25 = var23.getHelp();
    com.martiansoftware.jsap.ParseException var26 = new com.martiansoftware.jsap.ParseException(var25);
    com.martiansoftware.jsap.JSAPException var27 = new com.martiansoftware.jsap.JSAPException(var19, (java.lang.Throwable)var26);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame(var19);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var19.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var25.equals("  [--help]\n        Prints this help message.\n"));

  }

  public void test253() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var5.addDefault("hi!");
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var22.unregisterParameter((com.martiansoftware.jsap.Parameter)var24);
    java.lang.String var26 = var24.getSyntax();
    java.lang.String[] var27 = new java.lang.String[] { var26};
    com.martiansoftware.jsap.FlaggedOption var28 = var5.setDefault(var27);
    com.martiansoftware.jsap.FlaggedOption var30 = var5.setListSeparator('a');
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    java.lang.String var33 = var31.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var34 = new com.martiansoftware.jsap.SimpleJSAP(var33);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var35 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var47 = var36.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var51 = var49.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var61 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var69 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var61, "hi!", true, '4', "", var68);
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var73 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var77 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var78 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var79 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var85 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var86 = var85.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var87 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var79, "hi!", true, '4', "", var86);
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption(var33, (com.martiansoftware.jsap.StringParser)var35, var47, false, '4', "hi!");
    com.martiansoftware.jsap.FlaggedOption var89 = var5.setList(false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "[<hi!>]"+ "'", var26.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + ""+ "'", var86.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);

  }

  public void test254() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var4 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = var18.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var48 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var48, "hi!", true, '4', "", var55);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption(var2, (com.martiansoftware.jsap.StringParser)var4, var16, false, '4', "hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch(var2);
    com.martiansoftware.jsap.TestUsageString var59 = new com.martiansoftware.jsap.TestUsageString(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));

  }

  public void test255() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var40 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var41 = var37.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var42 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    java.lang.String var45 = var43.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var46 = new com.martiansoftware.jsap.SimpleJSAP(var45);
    boolean var47 = var46.messagePrinted();
    boolean var48 = var46.messagePrinted();
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var61 = var50.getHelp((-1), "hi!");
    java.lang.String var62 = var46.getHelp(100, "hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    java.lang.String var65 = var63.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var66 = new com.martiansoftware.jsap.SimpleJSAP(var65);
    boolean var67 = var66.messagePrinted();
    java.lang.String var68 = var66.getHelp();
    com.martiansoftware.jsap.ParseException var69 = new com.martiansoftware.jsap.ParseException(var68);
    com.martiansoftware.jsap.JSAPException var70 = new com.martiansoftware.jsap.JSAPException(var62, (java.lang.Throwable)var69);
    var14.addException("hi!", (java.lang.Exception)var69);
    com.martiansoftware.jsap.ParseException var72 = new com.martiansoftware.jsap.ParseException((java.lang.Throwable)var69);
    com.martiansoftware.jsap.JSAPException var73 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var69);
    java.lang.String var74 = var73.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!"+ "'", var40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var62.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var68.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "com.martiansoftware.jsap.JSAPException: com.martiansoftware.jsap.ParseException:   [--help]\n        Prints this help message.\n"+ "'", var74.equals("com.martiansoftware.jsap.JSAPException: com.martiansoftware.jsap.ParseException:   [--help]\n        Prints this help message.\n"));

  }

  public void test256() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var38 = var34.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var39 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var40 = var39.getID();
    boolean[] var41 = var14.getBooleanArray(var40);
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    boolean var46 = var45.messagePrinted();
    java.lang.String var47 = var45.getHelp();
    com.martiansoftware.jsap.JSAP var48 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var49 = var48.getHelp();
    java.lang.String var50 = var48.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var51 = new com.martiansoftware.jsap.SimpleJSAP(var50);
    boolean var52 = var51.messagePrinted();
    java.lang.String var53 = var51.getHelp();
    com.martiansoftware.jsap.ParseException var54 = new com.martiansoftware.jsap.ParseException(var53);
    java.lang.String[] var55 = new java.lang.String[] { var53};
    com.martiansoftware.jsap.JSAPResult var56 = var45.parse(var55);
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    java.lang.String var59 = var57.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var60 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    float[] var61 = var56.getFloatArray(var59);
    java.math.BigInteger[] var62 = var14.getBigIntegerArray(var59);
    junit.framework.Assert.assertNotNull((java.lang.Object)var14);
    com.martiansoftware.jsap.Defaults var64 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var65 = var64.idIterator();
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var76 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var77 = var66.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var81 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var85 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var86 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var87 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var93 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var94 = var93.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var95 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var87, "hi!", true, '4', "", var94);
    java.lang.String[] var96 = new java.lang.String[] { var94};
    var64.addDefault(var77, var96);
    java.io.File var98 = var14.getFile(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!"+ "'", var40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var47.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var53.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + ""+ "'", var94.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == null);

  }

  public void test257() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.Defaults var35 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var36 = var35.idIterator();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var59 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var67 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var59, "hi!", true, '4', "", var66);
    java.lang.Character var68 = var67.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var71 = var67.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var72 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var73 = new java.lang.String[] { "hi!"};
    var35.addDefault("hi!", var73);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var75 = var18.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + '4'+ "'", var68.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);

  }

  public void test258() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ByteStringParser var0 = com.martiansoftware.jsap.stringparsers.ByteStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    java.lang.Character var19 = var18.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var22 = var18.setLongFlag("hi!");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var32 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var40 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var32, "hi!", true, '4', "", var39);
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.ParseException var47 = new com.martiansoftware.jsap.ParseException(var46);
    com.martiansoftware.jsap.stringparsers.FileStringParser var48 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var48.tearDown();
    boolean var50 = var48.mustBeDirectory();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var51 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var52 = var51.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var53 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var54 = var53.getLongflag();
    var53.setShortflag('#');
    java.lang.String var57 = var53.getLongflag();
    char var58 = var53.getShortflag();
    var51.setShortflag(var58);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!", (com.martiansoftware.jsap.StringParser)var32, var46, var50, var58, "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var63 = var0.parse(var46);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + '4'+ "'", var19.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == '#');

  }

  public void test259() throws Throwable {

    junit.framework.Test var0 = com.martiansoftware.jsap.TestOption.suite();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);

  }

  public void test260() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntegerStringParser var0 = com.martiansoftware.jsap.stringparsers.IntegerStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var19 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var27 = var25.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var29 = var25.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var19, var22, false, '4', "hi!");
    java.lang.String var38 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var39 = com.martiansoftware.util.StringUtils.wrapToList(var22, 1);
    java.util.List var41 = com.martiansoftware.util.StringUtils.wrapToList(var22, 1);
    com.martiansoftware.jsap.SyntaxException var42 = new com.martiansoftware.jsap.SyntaxException(var22);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var43 = var0.parse(var22);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "hi!"+ "'", var38.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);

  }

  public void test261() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    var0.setUp();
    boolean var4 = var0.mustExist();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);

  }

  public void test262() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.ant.SwitchConfiguration var28 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var29 = var28.getLongflag();
    var28.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var51 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var52 = var51.getParameter();
    java.lang.String var53 = var51.getLongflag();
    com.martiansoftware.jsap.Defaults var54 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var55 = var54.idIterator();
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var65 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var68 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var72 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var76 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var77 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var78 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var84 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var85 = var84.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var86 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var78, "hi!", true, '4', "", var85);
    java.lang.Character var87 = var86.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var90 = var86.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var91 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var92 = new java.lang.String[] { "hi!"};
    var54.addDefault("hi!", var92);
    java.lang.String var94 = com.martiansoftware.util.StringUtils.noNull("hi!");
    var51.setId("hi!");
    com.martiansoftware.jsap.Parameter var96 = var50.setHelp("hi!");
    java.lang.String var97 = var96.getHelp();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + ""+ "'", var85.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + '4'+ "'", var87.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "hi!"+ "'", var94.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var97 + "' != '" + "hi!"+ "'", var97.equals("hi!"));

  }

  public void test263() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ClassStringParser var0 = new com.martiansoftware.jsap.stringparsers.ClassStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    boolean var21 = var19.messagePrinted();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var34 = var23.getHelp((-1), "hi!");
    java.lang.String var35 = var19.getHelp(100, "hi!");
    java.util.Date[] var36 = var15.getDateArray(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    java.lang.Class[] var55 = var15.getClassArray("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var56 = var0.parse("");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var35.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);

  }

  public void test264() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.JSAPException var39 = new com.martiansoftware.jsap.JSAPException(var37);
    java.util.Date var40 = var14.getDate(var37);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var45 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var46 = var42.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var47 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = var42.setStringParser((com.martiansoftware.jsap.StringParser)var47);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var58 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var61 = var48.setHelp("hi!");
    int[] var62 = var14.getIntArray("hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    java.lang.String var65 = var63.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var66 = new com.martiansoftware.jsap.SimpleJSAP(var65);
    boolean var67 = var66.messagePrinted();
    java.lang.String var68 = var66.getHelp();
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    java.lang.String var71 = var69.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var72 = new com.martiansoftware.jsap.SimpleJSAP(var71);
    boolean var73 = var72.messagePrinted();
    java.lang.String var74 = var72.getHelp();
    com.martiansoftware.jsap.ParseException var75 = new com.martiansoftware.jsap.ParseException(var74);
    java.lang.String[] var76 = new java.lang.String[] { var74};
    com.martiansoftware.jsap.JSAPResult var77 = var66.parse(var76);
    com.martiansoftware.jsap.JSAP var78 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var79 = var78.getHelp();
    java.lang.String var80 = var78.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var81 = new com.martiansoftware.jsap.SimpleJSAP(var80);
    float[] var82 = var77.getFloatArray(var80);
    java.net.URL var83 = var14.getURL(var80);
    com.martiansoftware.jsap.TestUsageString var84 = new com.martiansoftware.jsap.TestUsageString(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "hi!"+ "'", var45.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var68.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var74.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + ""+ "'", var80.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == null);

  }

  public void test265() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test3();
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    var0.setName(var4);
    var0.test8();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));

  }

  public void test266() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    var0.setShortflag('#');
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var17 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var24 = var23.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var25 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var17, "hi!", true, '4', "", var24);
    java.lang.Character var26 = var25.getShortFlagCharacter();
    com.martiansoftware.jsap.Flagged var27 = var7.getByShortFlag(var26);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals('#', (char)var26);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + '4'+ "'", var26.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == null);

  }

  public void test267() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var2 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var3 = var2.getLongflag();
    var2.setShortflag('#');
    java.lang.String var6 = var2.getLongflag();
    char var7 = var2.getShortflag();
    var0.setShortflag(var7);
    java.lang.String[] var9 = var0.getDefaults();
    com.martiansoftware.jsap.ant.ParserProperty var10 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var14 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var18 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var19 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var20 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var28 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var20, "hi!", true, '4', "", var27);
    java.util.List var30 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    var10.setName("");
    var0.addConfiguredProperty(var10);
    boolean var33 = var0.hasProperties();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == true);

  }

  public void test268() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var33 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var34 = new java.lang.Object[] { var33};
    java.lang.Object[] var35 = var14.getObjectArray(var31, var34);
    java.lang.String var38 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var43 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var44 = var40.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var45 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var46 = var45.getID();
    java.lang.String var47 = var45.getID();
    com.martiansoftware.jsap.JSAPException var48 = new com.martiansoftware.jsap.JSAPException(var38, (java.lang.Throwable)var45);
    java.math.BigInteger[] var49 = var14.getBigIntegerArray(var38);
    java.lang.String[] var51 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    java.lang.String[] var52 = var14.getStringArray("");
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var62 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var68 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var69 = var68.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var70 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var62, "hi!", true, '4', "", var69);
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("");
    long[] var72 = var14.getLongArray("");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "hi!"+ "'", var38.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "hi!"+ "'", var46.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "hi!"+ "'", var47.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);

  }

  public void test269() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ByteStringParser var0 = com.martiansoftware.jsap.stringparsers.ByteStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var10 = var9.getShortFlag();
    char var11 = var9.getShortFlag();
    com.martiansoftware.jsap.JSAP var12 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var13 = var12.getHelp();
    java.lang.String var14 = var12.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var15 = new com.martiansoftware.jsap.SimpleJSAP(var14);
    com.martiansoftware.jsap.Switch var16 = var9.setDefault(var14);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var17 = var0.parse(var14);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);

  }

  public void test270() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.util.Iterator var17 = var15.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var18 = var15.getIDMap();
    java.lang.String var19 = var15.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var23 = var14.getByte(var19, (byte)(-1));
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    java.util.Iterator var27 = var24.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    java.lang.String var30 = var28.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    boolean var32 = var31.messagePrinted();
    boolean var33 = var31.messagePrinted();
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var46 = var35.getHelp((-1), "hi!");
    java.lang.String var47 = var31.getHelp(100, "hi!");
    java.lang.String var48 = var24.getHelp(100);
    java.math.BigInteger[] var49 = var14.getBigIntegerArray(var48);
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    java.lang.String var52 = var50.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var52);
    boolean var54 = var53.messagePrinted();
    java.lang.String var55 = var53.getHelp();
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var65 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var66 = var65.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var67 = var53.setScreenWidth(var66);
    boolean var68 = var67.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var72 = var70.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var74 = var70.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var78 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var82 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var83 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var84 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var74.addDefault("hi!");
    com.martiansoftware.jsap.JSAPResult var88 = var67.parse("hi!");
    java.lang.String var89 = var67.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var48, var89);
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var47.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var55.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + "[--help]"+ "'", var89.equals("[--help]"));

  }

  public void test271() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    java.lang.String var39 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.InetAddress[] var40 = var36.getInetAddressArray(var39);
    com.martiansoftware.jsap.Defaults var41 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var42 = var41.idIterator();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var46 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var50 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var52 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var55 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var65 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var65, "hi!", true, '4', "", var72);
    java.lang.Character var74 = var73.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var77 = var73.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var78 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var79 = new java.lang.String[] { "hi!"};
    var41.addDefault("hi!", var79);
    java.lang.String var81 = com.martiansoftware.util.StringUtils.noNull("hi!");
    float var83 = var36.getFloat(var81, 10.0f);
    com.martiansoftware.jsap.stringparsers.FileStringParser var84 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var86 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var89 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var90 = var86.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var91 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var92 = var91.getID();
    java.lang.Object var93 = var84.parse(var92);
    java.math.BigDecimal var94 = var36.getBigDecimal(var92);
    java.lang.String[] var96 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    java.util.Date[] var97 = var36.getDateArray("");
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "hi!"+ "'", var39.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + '4'+ "'", var74.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "hi!"+ "'", var81.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 10.0f);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + "hi!"+ "'", var89.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + "hi!"+ "'", var92.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var97 == null);

  }

  public void test272() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var7 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var8 = var2.setStringParser((com.martiansoftware.jsap.StringParser)var7);
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var18 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var21 = var8.setHelp("hi!");
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var24 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var25 = var24.idIterator();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var47 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var55 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var47, "hi!", true, '4', "", var54);
    java.lang.String[] var56 = new java.lang.String[] { var54};
    var24.addDefault(var37, var56);
    java.lang.String[] var58 = new java.lang.String[] { var37};
    com.martiansoftware.jsap.JSAPResult var59 = var23.parse(var58);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var64 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var65 = var61.setHelp("hi!");
    var61.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var68 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    java.lang.String var71 = var69.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var72 = new com.martiansoftware.jsap.SimpleJSAP(var71);
    boolean var73 = var72.messagePrinted();
    com.martiansoftware.jsap.JSAP var74 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var79 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var83 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var84 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var85 = var74.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var86 = new com.martiansoftware.jsap.SimpleJSAP(var85);
    com.martiansoftware.jsap.UnflaggedOption var87 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var68, var73, var85);
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.Object[] var90 = new java.lang.Object[] { var89};
    java.lang.Object[] var91 = var59.getObjectArray("", var90);
    com.martiansoftware.jsap.FlaggedOption var93 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var97 = var59.getByte("hi!", (byte)(-1));
    junit.framework.Assert.assertEquals("hi!", (byte)(-1), (byte)(-1));
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((byte)10, (byte)(-1));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "hi!"+ "'", var64.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + ""+ "'", var85.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == (byte)(-1));

  }

  public void test273() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var6 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var7 = var6.getParameter();
    boolean var8 = var6.declaredListSeparator();
    char var9 = var6.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var10 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var11 = var10.hasProperties();
    var6.setRequired(var11);
    junit.framework.Assert.assertFalse(var5, var11);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var11);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);

  }

  public void test274() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.IntSizeStringParser.getParser();
    com.martiansoftware.jsap.stringparsers.DateStringParser var1 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var1.setUp();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var6 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var10 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var11 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var12 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var20 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var12, "hi!", true, '4', "", var19);
    java.lang.String var21 = var1.getProperty("");
    java.lang.String[] var23 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var1.getProperty("", "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var34 = var0.parse("");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "hi!"+ "'", var33.equals("hi!"));

  }

  public void test275() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.Defaults var40 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var41 = var40.idIterator();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var51 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var54 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var62 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var63 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var64 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var70 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var71 = var70.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var72 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var64, "hi!", true, '4', "", var71);
    java.lang.Character var73 = var72.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var76 = var72.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var77 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var78 = new java.lang.String[] { "hi!"};
    var40.addDefault("hi!", var78);
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var83 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var86 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var87 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var88 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var89 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var91 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var95 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var96 = var95.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var97 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var89, "hi!", true, '4', "", var96);
    java.lang.String[] var98 = var40.getDefault("hi!");
    java.lang.Package var99 = var14.getPackage("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + '4'+ "'", var73.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + ""+ "'", var96.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var98 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var99 == null);

  }

  public void test276() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    java.lang.String var28 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var29 = var14.getURLArray(var28);
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.lang.String var32 = var30.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var33 = new com.martiansoftware.jsap.SimpleJSAP(var32);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var34 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var46 = var35.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var72 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var76 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var77 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var78 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var84 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var85 = var84.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var86 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var78, "hi!", true, '4', "", var85);
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption(var32, (com.martiansoftware.jsap.StringParser)var34, var46, false, '4', "hi!");
    java.math.BigDecimal[] var88 = var14.getBigDecimalArray(var32);
    com.martiansoftware.jsap.TestCommandLineTokenizer var89 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var89.test7();
    var89.test7();
    var89.test4();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var14, (java.lang.Object)var89);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + ""+ "'", var85.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);

  }

  public void test277() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testRequired();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testRequired();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test278() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var40 = var34.setRequired(var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var50 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var53 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var54 = var40.setUsageName("hi!");
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var62 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var63 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var64 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var70 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var71 = var70.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var72 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var64, "hi!", true, '4', "", var71);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var73 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var74 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var75 = var74.getHelp();
    java.lang.String var76 = var74.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var77 = new com.martiansoftware.jsap.SimpleJSAP(var76);
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var81 = var79.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var83 = var79.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var85 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var88 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var89 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var73, var76, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var90 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var91 = var90.getHelp();
    java.lang.String var92 = var90.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var93 = new com.martiansoftware.jsap.SimpleJSAP(var92);
    boolean var94 = var93.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var95 = var89.setRequired(var94);
    java.lang.Character var96 = var95.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var97 = var40.setListSeparator((char)var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + ""+ "'", var91.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + ""+ "'", var92.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + '4'+ "'", var96.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var97 == null);

  }

  public void test279() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testSimpleDefault();
    var0.setUp();
    var0.testDefaults2();
    var0.testRequired();

  }

  public void test280() throws Throwable {

    java.lang.String var2 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.fail(var2);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "hi!"+ "'", var2.equals("hi!"));

  }

  public void test281() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.getRequired();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var2 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var3 = var2.getParameter();
    boolean var4 = var2.declaredListSeparator();
    char var5 = var2.getShortflag();
    boolean var6 = var2.getIslist();
    var0.setGreedy(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);

  }

  public void test282() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var55 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var56 = var55.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var57 = var43.setScreenWidth(var56);
    boolean var58 = var57.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var62 = var60.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var64 = var60.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var74 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var64.addDefault("hi!");
    com.martiansoftware.jsap.JSAPResult var78 = var57.parse("hi!");
    java.lang.String var79 = var57.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      float var80 = var14.getFloat(var79);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "[--help]"+ "'", var79.equals("[--help]"));

  }

  public void test283() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.IntSizeStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.util.Iterator var3 = var1.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var4 = var1.getIDMap();
    java.lang.String var5 = var1.getUsage();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAPResult var8 = var1.parse("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var9 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);

  }

  public void test284() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test3();
    var0.test10();
    var0.test10();
    var0.test6();

  }

  public void test285() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var34 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var42 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var34, "hi!", true, '4', "", var41);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var43 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    java.lang.String var46 = var44.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var47 = new com.martiansoftware.jsap.SimpleJSAP(var46);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var51 = var49.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var53 = var49.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var59 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var43, var46, false, '4', "hi!");
    java.lang.String var62 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var63 = com.martiansoftware.util.StringUtils.wrapToList(var46, 1);
    java.util.List var65 = com.martiansoftware.util.StringUtils.wrapToList(var46, 1);
    java.lang.String[] var66 = new java.lang.String[] { var46};
    com.martiansoftware.jsap.Switch var67 = var8.setDefault(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "hi!"+ "'", var62.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);

  }

  public void test286() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.FlaggedOption var9 = var5.setUsageName(var8);
    char var10 = var5.getShortFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '\u0000');

  }

  public void test287() throws Throwable {

    junit.framework.Test var0 = com.martiansoftware.jsap.stringparsers.TestAll.suite();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);

  }

  public void test288() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var38 = com.martiansoftware.util.StringUtils.wrapToList(var21, 1);
    java.util.List var40 = com.martiansoftware.util.StringUtils.wrapToList(var21, 1);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var59 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    java.lang.String var62 = var60.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var63 = new com.martiansoftware.jsap.SimpleJSAP(var62);
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var67 = var65.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var69 = var65.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var74 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var75 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var59, var62, false, '4', "hi!");
    java.lang.String var78 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var79 = com.martiansoftware.util.StringUtils.wrapToList(var62, 1);
    java.util.List var81 = com.martiansoftware.util.StringUtils.wrapToList(var62, 1);
    junit.framework.Assert.assertEquals(1, 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "hi!"+ "'", var78.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);

  }

  public void test289() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var47 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var48 = var46.setStringParser((com.martiansoftware.jsap.StringParser)var47);
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var58 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var66 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var58, "hi!", true, '4', "", var65);
    java.lang.String var67 = var66.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var67);
    com.martiansoftware.jsap.UnflaggedOption var69 = var46.setUsageName(var67);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var70 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var71 = var70.getRequired();
    com.martiansoftware.jsap.UnflaggedOption var72 = var69.setList(var71);
    com.martiansoftware.jsap.JSAP var73 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var74 = var73.getHelp();
    java.lang.String var75 = var73.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var76 = new com.martiansoftware.jsap.SimpleJSAP(var75);
    boolean var77 = var76.messagePrinted();
    java.lang.String var78 = var76.getHelp();
    com.martiansoftware.jsap.JSAP var79 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var80 = var79.getHelp();
    java.lang.String var81 = var79.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var82 = new com.martiansoftware.jsap.SimpleJSAP(var81);
    boolean var83 = var82.messagePrinted();
    java.lang.String var84 = var82.getHelp();
    com.martiansoftware.jsap.ParseException var85 = new com.martiansoftware.jsap.ParseException(var84);
    java.lang.String[] var86 = new java.lang.String[] { var84};
    com.martiansoftware.jsap.JSAPResult var87 = var76.parse(var86);
    com.martiansoftware.jsap.JSAP var88 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var89 = var88.getHelp();
    java.util.Iterator var90 = var88.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var91 = var88.getIDMap();
    java.lang.String var92 = var88.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var96 = var87.getByte(var92, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var97 = new com.martiansoftware.jsap.QualifiedSwitch(var92);
    boolean var98 = var97.required();
    com.martiansoftware.jsap.UnflaggedOption var99 = var69.setGreedy(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var67.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var78.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + ""+ "'", var80.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var84.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + ""+ "'", var89.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + ""+ "'", var92.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var99 == null);

  }

  public void test290() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var6 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var5);
    java.lang.String var7 = var5.toString();
    var0.setLongflag(var7);
    java.lang.String[] var9 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize(var7);
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.util.Iterator var12 = var10.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var13 = var10.getIDMap();
    java.lang.String var14 = var10.getHelp();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    java.util.Iterator var18 = var15.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    boolean var23 = var22.messagePrinted();
    boolean var24 = var22.messagePrinted();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    java.lang.String var38 = var22.getHelp(100, "hi!");
    java.lang.String var39 = var15.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var59 = var10.getHelp(100, "");
    java.lang.String var60 = com.martiansoftware.util.StringUtils.padRightToWidth(var7, 100);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var7.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var38.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'.                                    "+ "'", var60.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'.                                    "));

  }

  public void test291() throws Throwable {

    com.martiansoftware.jsap.TestOption var0 = new com.martiansoftware.jsap.TestOption();
    int var1 = var0.countTestCases();
    var0.testSettersAndGetters();
    var0.testSettersAndGetters();
    var0.testSettersAndGetters();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == 1);

  }

  public void test292() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    java.lang.String var39 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.InetAddress[] var40 = var36.getInetAddressArray(var39);
    com.martiansoftware.jsap.Defaults var41 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var42 = var41.idIterator();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var46 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var50 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var52 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var55 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var65 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var65, "hi!", true, '4', "", var72);
    java.lang.Character var74 = var73.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var77 = var73.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var78 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var79 = new java.lang.String[] { "hi!"};
    var41.addDefault("hi!", var79);
    java.lang.String var81 = com.martiansoftware.util.StringUtils.noNull("hi!");
    float var83 = var36.getFloat(var81, 10.0f);
    com.martiansoftware.jsap.QualifiedSwitch var84 = new com.martiansoftware.jsap.QualifiedSwitch(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "hi!"+ "'", var39.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + '4'+ "'", var74.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "hi!"+ "'", var81.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 10.0f);

  }

  public void test293() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    var35.setUsage(var38);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var41 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser(var38);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));

  }

  public void test294() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var19 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));

  }

  public void test295() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    boolean var40 = var39.messagePrinted();
    java.lang.String var41 = var39.getHelp();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    boolean var46 = var45.messagePrinted();
    java.lang.String var47 = var45.getHelp();
    com.martiansoftware.jsap.ParseException var48 = new com.martiansoftware.jsap.ParseException(var47);
    java.lang.String[] var49 = new java.lang.String[] { var47};
    com.martiansoftware.jsap.JSAPResult var50 = var39.parse(var49);
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    java.util.Iterator var53 = var51.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var54 = var51.getIDMap();
    java.lang.String var55 = var51.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var59 = var50.getByte(var55, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var60 = new com.martiansoftware.jsap.QualifiedSwitch(var55);
    java.net.InetAddress[] var61 = var14.getInetAddressArray(var55);
    junit.framework.Assert.assertEquals(var55, (byte)10, (byte)10);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame(var55);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var41.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var47.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);

  }

  public void test296() throws Throwable {

    java.lang.String var2 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var2, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    junit.framework.Assert.assertEquals(var2, 100.0d, 10.0d, 100.0d);
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    boolean var24 = var23.messagePrinted();
    java.lang.String var25 = var23.getHelp();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    java.lang.String var28 = var26.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var29 = new com.martiansoftware.jsap.SimpleJSAP(var28);
    boolean var30 = var29.messagePrinted();
    java.lang.String var31 = var29.getHelp();
    com.martiansoftware.jsap.ParseException var32 = new com.martiansoftware.jsap.ParseException(var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    com.martiansoftware.jsap.JSAPResult var34 = var23.parse(var33);
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var44 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var45 = var34.getClass("hi!");
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var57 = var46.getHelp((-1), "hi!");
    double var59 = var34.getDouble(var57, 0.0d);
    junit.framework.Assert.assertNotNull((java.lang.Object)0.0d);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(100.0d, 0.0d, 0.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "hi!"+ "'", var2.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var25.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var31.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 0.0d);

  }

  public void test297() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.ColorStringParser var18 = com.martiansoftware.jsap.stringparsers.ColorStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var28 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var35 = var34.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var36 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var28, "hi!", true, '4', "", var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var55 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var63 = var61.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var65 = var61.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var71 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var55, var58, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var73 = var72.getHelp();
    java.lang.String var74 = var72.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var75 = new com.martiansoftware.jsap.SimpleJSAP(var74);
    boolean var76 = var75.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var80 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var84 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var85 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var86 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var92 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var93 = var92.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var94 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var86, "hi!", true, '4', "", var93);
    com.martiansoftware.jsap.UnflaggedOption var95 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var18, "hi!", false, var76, "hi!");
    com.martiansoftware.jsap.FlaggedOption var96 = new com.martiansoftware.jsap.FlaggedOption("");
    com.martiansoftware.jsap.stringparsers.FileStringParser var97 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    boolean var98 = var97.mustExist();
    com.martiansoftware.jsap.FlaggedOption var99 = var96.setRequired(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ""+ "'", var93.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var99 == null);

  }

  public void test298() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.JSAPResult var43 = var0.parse(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var53 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var56 = new com.martiansoftware.jsap.TestOption();
    int var57 = var56.countTestCases();
    int var58 = var56.countTestCases();
    java.lang.String var59 = com.martiansoftware.util.StringUtils.padRight("hi!", var58);
    com.martiansoftware.jsap.JSAPResult var60 = var0.parse(var59);
    com.martiansoftware.jsap.IDMap var61 = var0.getIDMap();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi! "+ "'", var59.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);

  }

  public void test299() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    com.martiansoftware.jsap.stringparsers.DateStringParser var4 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var9 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var10 = var6.setHelp("hi!");
    var6.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var13 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var15 = var14.getHelp();
    java.lang.String var16 = var14.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var17 = new com.martiansoftware.jsap.SimpleJSAP(var16);
    boolean var18 = var17.messagePrinted();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var30 = var19.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    com.martiansoftware.jsap.UnflaggedOption var32 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var13, var18, var30);
    com.martiansoftware.jsap.ant.SwitchConfiguration var33 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var34 = var33.getLongflag();
    var33.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.Switch var55 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var4.setProperty("", "hi!");
    boolean var66 = var3.idExists("hi!");
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var71 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var72 = var68.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var73 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var74 = var68.setStringParser((com.martiansoftware.jsap.StringParser)var73);
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var78 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var82 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var83 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var84 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var87 = var74.setHelp("hi!");
    java.lang.String var88 = var3.getIDByLongFlag("hi!");
    junit.framework.Assert.assertNotNull((java.lang.Object)var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "hi!"+ "'", var71.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == null);

  }

  public void test300() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var4 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var5 = var4.getRequired();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var6 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var7 = var6.getParameter();
    java.lang.String var8 = var6.getStringparser();
    char var9 = var6.getListseparator();
    boolean var10 = var6.hasProperties();
    com.martiansoftware.jsap.ant.ParserProperty[] var11 = var6.getParserProperties();
    com.martiansoftware.jsap.stringparsers.FileStringParser var12 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var12.tearDown();
    var12.setUp();
    boolean var15 = var12.mustExist();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var16 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var17 = var16.hasProperties();
    java.lang.String var18 = var16.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var19 = new com.martiansoftware.jsap.ant.ParserProperty();
    var16.addConfiguredProperty(var19);
    boolean var21 = var16.getGreedy();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    java.lang.Character var40 = var39.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var43 = var39.setLongFlag("hi!");
    boolean var44 = var39.isList();
    var16.setGreedy(var44);
    com.martiansoftware.jsap.stringparsers.FileStringParser var46 = var12.setMustBeDirectory(var44);
    var6.setRequired(var44);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var48 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var2, var5, var44);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + '4'+ "'", var40.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);

  }

  public void test301() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("");
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var24 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var25 = var21.setHelp("hi!");
    var21.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var28 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var30 = var29.getHelp();
    java.lang.String var31 = var29.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    boolean var33 = var32.messagePrinted();
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var45 = var34.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var46 = new com.martiansoftware.jsap.SimpleJSAP(var45);
    com.martiansoftware.jsap.UnflaggedOption var47 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var28, var33, var45);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var57 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var65 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var57, "hi!", true, '4', "", var64);
    com.martiansoftware.jsap.UnflaggedOption var66 = var47.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var67 = var19.setList(true);
    var0.unregisterParameter((com.martiansoftware.jsap.Parameter)var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "hi!"+ "'", var24.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);

  }

  public void test302() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BooleanStringParser var0 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.util.Iterator var3 = var1.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var4 = var1.getIDMap();
    java.lang.String var5 = var1.getHelp();
    java.lang.String var6 = var1.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var7 = var0.parse(var6);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));

  }

  public void test303() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var3 = new com.martiansoftware.jsap.ant.ParserProperty();
    var0.addConfiguredProperty(var3);
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var8 = new com.martiansoftware.jsap.SimpleJSAP(var7);
    boolean var9 = var8.messagePrinted();
    java.lang.String var10 = var8.getHelp();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    java.lang.String var16 = var14.getHelp();
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException(var16);
    java.lang.String[] var18 = new java.lang.String[] { var16};
    com.martiansoftware.jsap.JSAPResult var19 = var8.parse(var18);
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.util.Iterator var22 = var20.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var23 = var20.getIDMap();
    java.lang.String var24 = var20.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var28 = var19.getByte(var24, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var29 = new com.martiansoftware.jsap.QualifiedSwitch(var24);
    var3.setValue(var24);
    java.lang.String var31 = var3.getValue();
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    java.lang.String var35 = var33.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var36 = new com.martiansoftware.jsap.SimpleJSAP(var35);
    boolean var37 = var36.messagePrinted();
    java.lang.String var38 = var36.getHelp();
    com.martiansoftware.jsap.JSAP var39 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var40 = var39.getHelp();
    java.lang.String var41 = var39.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var42 = new com.martiansoftware.jsap.SimpleJSAP(var41);
    boolean var43 = var42.messagePrinted();
    java.lang.String var44 = var42.getHelp();
    com.martiansoftware.jsap.ParseException var45 = new com.martiansoftware.jsap.ParseException(var44);
    java.lang.String[] var46 = new java.lang.String[] { var44};
    com.martiansoftware.jsap.JSAPResult var47 = var36.parse(var46);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var57 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var58 = var47.getClass("hi!");
    java.lang.String var61 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var62 = var47.getURLArray(var61);
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    java.util.Iterator var65 = var63.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var66 = var63.getIDMap();
    java.lang.String var67 = var63.getHelp();
    java.lang.String var68 = var63.toString();
    java.lang.Object[] var69 = var47.getObjectArray(var68);
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var73 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var77 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var78 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var79 = var78.getShortFlag();
    char var80 = var78.getShortFlag();
    java.lang.Character var81 = var78.getShortFlagCharacter();
    java.lang.String var82 = var78.getSyntax();
    long var84 = var47.getLong(var82, (-1L));
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var31, 0L, (-1L));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var10.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var16.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var38.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var44.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "hi!"+ "'", var61.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + '4'+ "'", var81.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "[-4|--hi!]"+ "'", var82.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == (-1L));

  }

  public void test304() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ByteStringParser var0 = com.martiansoftware.jsap.stringparsers.ByteStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var4.unregisterParameter((com.martiansoftware.jsap.Parameter)var6);
    java.lang.String var8 = var6.getSyntax();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    java.lang.String var14 = var12.getHelp();
    com.martiansoftware.jsap.ParseException var15 = new com.martiansoftware.jsap.ParseException(var14);
    com.martiansoftware.jsap.FlaggedOption var16 = var6.setUsageName(var14);
    java.lang.String var17 = var16.getHelp();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var18 = var0.parse(var17);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "[<hi!>]"+ "'", var8.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var14.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));

  }

  public void test305() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ShortStringParser var0 = com.martiansoftware.jsap.stringparsers.ShortStringParser.getParser();
    com.martiansoftware.jsap.stringparsers.FileStringParser var1 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var1.tearDown();
    var1.setUp();
    var1.setUp();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var9 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var10 = var6.setHelp("hi!");
    boolean var11 = var6.allowMultipleDeclarations();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var12 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    junit.framework.Assert.assertNotSame((java.lang.Object)var11, (java.lang.Object)var12);
    com.martiansoftware.jsap.stringparsers.FileStringParser var14 = var1.setMustBeFile(var11);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    var1.setProperty("hi!", var44);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var47 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));

  }

  public void test306() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigIntegerStringParser var0 = com.martiansoftware.jsap.stringparsers.BigIntegerStringParser.getParser();
    com.martiansoftware.jsap.stringparsers.DateStringParser var1 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var1.setUp();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var6 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var10 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var11 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var12 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var20 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var12, "hi!", true, '4', "", var19);
    java.lang.String var21 = var1.getProperty("");
    java.lang.String var22 = com.martiansoftware.util.StringUtils.noNull("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var23 = var0.parse("");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));

  }

  public void test307() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var3 = new com.martiansoftware.jsap.ant.ParserProperty();
    var0.addConfiguredProperty(var3);
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var8 = new com.martiansoftware.jsap.SimpleJSAP(var7);
    boolean var9 = var8.messagePrinted();
    java.lang.String var10 = var8.getHelp();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    java.lang.String var16 = var14.getHelp();
    com.martiansoftware.jsap.ParseException var17 = new com.martiansoftware.jsap.ParseException(var16);
    java.lang.String[] var18 = new java.lang.String[] { var16};
    com.martiansoftware.jsap.JSAPResult var19 = var8.parse(var18);
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.util.Iterator var22 = var20.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var23 = var20.getIDMap();
    java.lang.String var24 = var20.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var28 = var19.getByte(var24, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var29 = new com.martiansoftware.jsap.QualifiedSwitch(var24);
    var3.setValue(var24);
    java.lang.String var34 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var34, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(1.0f, 1.0f, 1.0f);
    java.lang.String var50 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var50, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 10.0f, 0.0f);
    junit.framework.Assert.assertEquals(var24, 1.0f, (-1.0f), 10.0f);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var10.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var16.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "hi!"+ "'", var34.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "hi!"+ "'", var50.equals("hi!"));

  }

  public void test308() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ByteStringParser var0 = com.martiansoftware.jsap.stringparsers.ByteStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var25 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var33 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var25, "hi!", true, '4', "", var32);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var34 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var35 = new java.lang.Object[] { var34};
    java.lang.Object[] var36 = var15.getObjectArray(var32, var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    java.lang.String var45 = var43.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var46 = new com.martiansoftware.jsap.SimpleJSAP(var45);
    boolean var47 = var46.messagePrinted();
    java.lang.String var48 = var46.getHelp();
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException(var48);
    java.lang.String[] var50 = new java.lang.String[] { var48};
    com.martiansoftware.jsap.JSAPResult var51 = var40.parse(var50);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var61 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var69 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var61, "hi!", true, '4', "", var68);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var70 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var71 = new java.lang.Object[] { var70};
    java.lang.Object[] var72 = var51.getObjectArray(var68, var71);
    boolean var73 = var15.userSpecified(var68);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var74 = var0.parse(var68);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var48.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);

  }

  public void test309() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    var7.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var14 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var31 = var20.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    com.martiansoftware.jsap.UnflaggedOption var33 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var14, var19, var31);
    boolean var34 = var33.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var39 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var40 = var36.setHelp("hi!");
    var36.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var43 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    java.lang.String var46 = var44.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var47 = new com.martiansoftware.jsap.SimpleJSAP(var46);
    boolean var48 = var47.messagePrinted();
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var60 = var49.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    com.martiansoftware.jsap.UnflaggedOption var62 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var43, var48, var60);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var72 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var78 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var79 = var78.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var80 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var72, "hi!", true, '4', "", var79);
    com.martiansoftware.jsap.UnflaggedOption var81 = var62.setRequired(true);
    com.martiansoftware.jsap.UnflaggedOption var82 = var33.setRequired(true);
    var3.registerParameter((com.martiansoftware.jsap.Parameter)var33);
    com.martiansoftware.jsap.TestOption var84 = new com.martiansoftware.jsap.TestOption();
    int var85 = var84.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var86 = var3.setScreenWidth(var85);
    com.martiansoftware.jsap.JSAP var87 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var88 = var87.getHelp();
    java.lang.String var89 = var87.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var90 = new com.martiansoftware.jsap.SimpleJSAP(var89);
    com.martiansoftware.jsap.FlaggedOption var92 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var90.unregisterParameter((com.martiansoftware.jsap.Parameter)var92);
    java.lang.String var94 = var90.getUsage();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.JSAPResult var95 = var86.parse(var94);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "hi!"+ "'", var39.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + ""+ "'", var88.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + ""+ "'", var89.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "[--help]"+ "'", var94.equals("[--help]"));

  }

  public void test310() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    java.lang.String var7 = var3.getUsage();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var17 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var24 = var23.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var25 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var17, "hi!", true, '4', "", var24);
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("");
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var31 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var32 = var28.setHelp("hi!");
    var28.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var35 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    boolean var40 = var39.messagePrinted();
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var46 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var50 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var52 = var41.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var52);
    com.martiansoftware.jsap.UnflaggedOption var54 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var35, var40, var52);
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var62 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var63 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var64 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var70 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var71 = var70.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var72 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var64, "hi!", true, '4', "", var71);
    com.martiansoftware.jsap.UnflaggedOption var73 = var54.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var74 = var26.setList(true);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull(var7, (java.lang.Object)true);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "[--help]"+ "'", var7.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "hi!"+ "'", var31.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);

  }

  public void test311() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigIntegerStringParser var0 = new com.martiansoftware.jsap.stringparsers.BigIntegerStringParser();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var1 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var2 = var1.hasProperties();
    java.lang.String var3 = var1.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var4 = new com.martiansoftware.jsap.ant.ParserProperty();
    var1.addConfiguredProperty(var4);
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.JSAP var12 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var13 = var12.getHelp();
    java.lang.String var14 = var12.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var15 = new com.martiansoftware.jsap.SimpleJSAP(var14);
    boolean var16 = var15.messagePrinted();
    java.lang.String var17 = var15.getHelp();
    com.martiansoftware.jsap.ParseException var18 = new com.martiansoftware.jsap.ParseException(var17);
    java.lang.String[] var19 = new java.lang.String[] { var17};
    com.martiansoftware.jsap.JSAPResult var20 = var9.parse(var19);
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.util.Iterator var23 = var21.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var24 = var21.getIDMap();
    java.lang.String var25 = var21.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var29 = var20.getByte(var25, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var30 = new com.martiansoftware.jsap.QualifiedSwitch(var25);
    var4.setValue(var25);
    java.lang.String var32 = var4.getValue();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var33 = var0.parse(var32);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var17.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));

  }

  public void test312() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getShortflag();
    boolean var4 = var0.getIslist();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var4);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);

  }

  public void test313() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigDecimalStringParser var0 = com.martiansoftware.jsap.stringparsers.BigDecimalStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var4.unregisterParameter((com.martiansoftware.jsap.Parameter)var6);
    java.lang.String var8 = var6.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var9 = var0.parse(var8);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "[<hi!>]"+ "'", var8.equals("[<hi!>]"));

  }

  public void test314() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.tearDown();
    var0.tearDown();
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      var0.testConfig();
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test315() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    boolean var40 = var39.messagePrinted();
    java.lang.String var41 = var39.getHelp();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    boolean var46 = var45.messagePrinted();
    java.lang.String var47 = var45.getHelp();
    com.martiansoftware.jsap.ParseException var48 = new com.martiansoftware.jsap.ParseException(var47);
    java.lang.String[] var49 = new java.lang.String[] { var47};
    com.martiansoftware.jsap.JSAPResult var50 = var39.parse(var49);
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    java.util.Iterator var53 = var51.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var54 = var51.getIDMap();
    java.lang.String var55 = var51.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var59 = var50.getByte(var55, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var60 = new com.martiansoftware.jsap.QualifiedSwitch(var55);
    java.net.InetAddress[] var61 = var14.getInetAddressArray(var55);
    junit.framework.Assert.assertEquals(var55, (byte)10, (byte)10);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var65 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser(var55);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var41.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var47.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);

  }

  public void test316() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    boolean var40 = var39.messagePrinted();
    boolean var41 = var39.messagePrinted();
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var54 = var43.getHelp((-1), "hi!");
    java.lang.String var55 = var39.getHelp(100, "hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    boolean var60 = var59.messagePrinted();
    java.lang.String var61 = var59.getHelp();
    com.martiansoftware.jsap.ParseException var62 = new com.martiansoftware.jsap.ParseException(var61);
    com.martiansoftware.jsap.JSAPException var63 = new com.martiansoftware.jsap.JSAPException(var55, (java.lang.Throwable)var62);
    java.net.InetAddress[] var64 = var14.getInetAddressArray(var55);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var74 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var80 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var81 = var80.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var74, "hi!", true, '4', "", var81);
    java.lang.String var83 = var82.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var83);
    com.martiansoftware.jsap.TestFlaggedOption var85 = new com.martiansoftware.jsap.TestFlaggedOption(var83);
    java.util.Date var86 = var14.getDate(var83);
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var90 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var93 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var94 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var95 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var96 = new com.martiansoftware.jsap.ParseException("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      double var97 = var14.getDouble("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var55.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var61.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var83.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == null);

  }

  public void test317() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    com.martiansoftware.jsap.JSAP var25 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var26 = var25.getHelp();
    java.lang.String var27 = var25.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var28 = new com.martiansoftware.jsap.SimpleJSAP(var27);
    boolean var29 = var28.messagePrinted();
    java.lang.String var30 = var28.getHelp();
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    java.lang.String var33 = var31.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var34 = new com.martiansoftware.jsap.SimpleJSAP(var33);
    boolean var35 = var34.messagePrinted();
    java.lang.String var36 = var34.getHelp();
    com.martiansoftware.jsap.ParseException var37 = new com.martiansoftware.jsap.ParseException(var36);
    java.lang.String[] var38 = new java.lang.String[] { var36};
    com.martiansoftware.jsap.JSAPResult var39 = var28.parse(var38);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var50 = var39.getClass("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var62 = var51.getHelp((-1), "hi!");
    double var64 = var39.getDouble(var62, 0.0d);
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    java.lang.String var67 = var65.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var68 = new com.martiansoftware.jsap.SimpleJSAP(var67);
    boolean var69 = var68.messagePrinted();
    java.lang.String var70 = var68.getHelp();
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    java.lang.String var73 = var71.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var74 = new com.martiansoftware.jsap.SimpleJSAP(var73);
    boolean var75 = var74.messagePrinted();
    java.lang.String var76 = var74.getHelp();
    com.martiansoftware.jsap.ParseException var77 = new com.martiansoftware.jsap.ParseException(var76);
    java.lang.String[] var78 = new java.lang.String[] { var76};
    com.martiansoftware.jsap.JSAPResult var79 = var68.parse(var78);
    com.martiansoftware.jsap.JSAP var80 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var81 = var80.getHelp();
    java.util.Iterator var82 = var80.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var83 = var80.getIDMap();
    java.lang.String var84 = var80.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var88 = var79.getByte(var84, (byte)(-1));
    java.math.BigDecimal var89 = var39.getBigDecimal(var84);
    java.lang.String[] var90 = new java.lang.String[] { var84};
    com.martiansoftware.jsap.Switch var91 = var8.setDefault(var90);
    java.lang.String var92 = var91.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var30.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var36.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var70.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var76.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + ""+ "'", var84.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + "[-4|--hi!]"+ "'", var92.equals("[-4|--hi!]"));

  }

  public void test318() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var57 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var65 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var57, "hi!", true, '4', "", var64);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var66 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    java.lang.String var69 = var67.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var70 = new com.martiansoftware.jsap.SimpleJSAP(var69);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var74 = var72.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var76 = var72.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var78 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var81 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var66, var69, false, '4', "hi!");
    java.lang.String var85 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var86 = com.martiansoftware.util.StringUtils.wrapToList(var69, 1);
    java.util.List var88 = com.martiansoftware.util.StringUtils.wrapToList(var69, 1);
    char[] var89 = var14.getCharArray(var69);
    com.martiansoftware.jsap.UnknownFlagException var91 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var92 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var91);
    java.lang.String var93 = var91.toString();
    java.lang.String var94 = com.martiansoftware.util.StringUtils.noNull(var93);
    java.util.Iterator var95 = var14.getExceptionIterator(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi!"+ "'", var85.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var93.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var94.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);

  }

  public void test319() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    boolean var40 = var39.messagePrinted();
    java.lang.String var41 = var39.getHelp();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    boolean var46 = var45.messagePrinted();
    java.lang.String var47 = var45.getHelp();
    com.martiansoftware.jsap.ParseException var48 = new com.martiansoftware.jsap.ParseException(var47);
    java.lang.String[] var49 = new java.lang.String[] { var47};
    com.martiansoftware.jsap.JSAPResult var50 = var39.parse(var49);
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    java.util.Iterator var53 = var51.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var54 = var51.getIDMap();
    java.lang.String var55 = var51.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var59 = var50.getByte(var55, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var60 = new com.martiansoftware.jsap.QualifiedSwitch(var55);
    java.net.InetAddress[] var61 = var14.getInetAddressArray(var55);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption(var55);
    com.martiansoftware.jsap.stringparsers.FileStringParser var63 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var63.tearDown();
    var63.setUp();
    var63.setUp();
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var71 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var72 = var68.setHelp("hi!");
    boolean var73 = var68.allowMultipleDeclarations();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var74 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    junit.framework.Assert.assertNotSame((java.lang.Object)var73, (java.lang.Object)var74);
    com.martiansoftware.jsap.stringparsers.FileStringParser var76 = var63.setMustBeFile(var73);
    com.martiansoftware.jsap.FlaggedOption var77 = var62.setStringParser((com.martiansoftware.jsap.StringParser)var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var41.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var47.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "hi!"+ "'", var71.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);

  }

  public void test320() throws Throwable {

    com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource var0 = new com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test321() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    java.lang.String var7 = var5.getSyntax();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var9 = var8.getHelp();
    java.lang.String var10 = var8.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var11 = new com.martiansoftware.jsap.SimpleJSAP(var10);
    boolean var12 = var11.messagePrinted();
    java.lang.String var13 = var11.getHelp();
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException(var13);
    com.martiansoftware.jsap.FlaggedOption var15 = var5.setUsageName(var13);
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "[<hi!>]"+ "'", var7.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var13.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "[<  [--help]\n        Prints this help message.\n>]"+ "'", var17.equals("[<  [--help]\n        Prints this help message.\n>]"));

  }

  public void test322() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    com.martiansoftware.jsap.ant.SwitchConfiguration var2 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var3 = var2.getLongflag();
    com.martiansoftware.jsap.ant.DefaultValue var4 = new com.martiansoftware.jsap.ant.DefaultValue();
    var2.addConfiguredDefault(var4);
    var0.addConfiguredDefault(var4);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var7 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var8 = var7.getParameter();
    java.lang.String var9 = var7.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var14 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var15 = var11.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var16 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var17 = var16.getID();
    java.lang.String var18 = var16.getID();
    var7.setLongflag(var18);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var22 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var23 = var22.getLongflag();
    var22.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var26 = var21.setListSeparator('#');
    boolean var27 = var26.isList();
    var7.setAllowmultipledeclarations(var27);
    char var29 = var7.getShortflag();
    var0.setShortflag(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!"+ "'", var14.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "hi!"+ "'", var17.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "hi!"+ "'", var18.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == '\u0000');

  }

  public void test323() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    boolean var50 = var49.messagePrinted();
    java.lang.String var51 = var49.getHelp();
    com.martiansoftware.jsap.ParseException var52 = new com.martiansoftware.jsap.ParseException(var51);
    java.lang.String[] var53 = new java.lang.String[] { var51};
    com.martiansoftware.jsap.JSAPResult var54 = var43.parse(var53);
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    java.lang.String var57 = var55.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var58 = new com.martiansoftware.jsap.SimpleJSAP(var57);
    float[] var59 = var54.getFloatArray(var57);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var68 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var69 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var72 = var54.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var77 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var78 = var74.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var79 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var80 = var79.getID();
    boolean[] var81 = var54.getBooleanArray(var80);
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var86 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var87 = var83.setHelp("hi!");
    java.lang.String[] var88 = var54.getStringArray("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      boolean var89 = var14.getBoolean("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var51.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "hi!"+ "'", var77.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "hi!"+ "'", var80.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + "hi!"+ "'", var86.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);

  }

  public void test324() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    java.lang.String var7 = var5.getSyntax();
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP(var7);
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test325() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var29 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var32 = var14.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var38 = var34.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var39 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var40 = var39.getID();
    boolean[] var41 = var14.getBooleanArray(var40);
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var46 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var47 = var43.setHelp("hi!");
    java.lang.String[] var48 = var14.getStringArray("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    java.lang.String var51 = var49.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    boolean var53 = var52.messagePrinted();
    java.lang.String var54 = var52.getHelp();
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    java.lang.String var57 = var55.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var58 = new com.martiansoftware.jsap.SimpleJSAP(var57);
    boolean var59 = var58.messagePrinted();
    java.lang.String var60 = var58.getHelp();
    com.martiansoftware.jsap.ParseException var61 = new com.martiansoftware.jsap.ParseException(var60);
    java.lang.String[] var62 = new java.lang.String[] { var60};
    com.martiansoftware.jsap.JSAPResult var63 = var52.parse(var62);
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    java.util.Iterator var66 = var64.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var67 = var64.getIDMap();
    java.lang.String var68 = var64.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var72 = var63.getByte(var68, (byte)(-1));
    com.martiansoftware.jsap.JSAP var73 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var74 = var73.getHelp();
    java.lang.String var75 = var73.getUsage();
    java.util.Iterator var76 = var73.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var77 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var78 = var77.getHelp();
    java.lang.String var79 = var77.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var80 = new com.martiansoftware.jsap.SimpleJSAP(var79);
    boolean var81 = var80.messagePrinted();
    boolean var82 = var80.messagePrinted();
    com.martiansoftware.jsap.JSAP var84 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var89 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var92 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var93 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var94 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var95 = var84.getHelp((-1), "hi!");
    java.lang.String var96 = var80.getHelp(100, "hi!");
    java.lang.String var97 = var73.getHelp(100);
    java.math.BigInteger[] var98 = var63.getBigIntegerArray(var97);
    char[] var99 = var14.getCharArray(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!"+ "'", var40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "hi!"+ "'", var46.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var54.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var60.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + ""+ "'", var95.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var96.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var97 + "' != '" + ""+ "'", var97.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var98 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var99 == null);

  }

  public void test326() throws Throwable {

    com.martiansoftware.jsap.stringparsers.CharacterStringParser var0 = com.martiansoftware.jsap.stringparsers.CharacterStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var6 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var10 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var11 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var12 = var1.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    com.martiansoftware.jsap.JSAPException var14 = new com.martiansoftware.jsap.JSAPException(var12);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var15 = var0.parse(var12);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));

  }

  public void test327() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    var0.tearDown();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var4 = var3.getHelp();
    java.lang.String var5 = var3.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var6 = new com.martiansoftware.jsap.SimpleJSAP(var5);
    boolean var7 = var6.messagePrinted();
    var6.finalize();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    java.util.Iterator var12 = var9.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var14 = var13.getHelp();
    java.lang.String var15 = var13.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var16 = new com.martiansoftware.jsap.SimpleJSAP(var15);
    boolean var17 = var16.messagePrinted();
    boolean var18 = var16.messagePrinted();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var31 = var20.getHelp((-1), "hi!");
    java.lang.String var32 = var16.getHelp(100, "hi!");
    java.lang.String var33 = var9.getHelp(100);
    com.martiansoftware.jsap.Flagged var34 = var6.getByLongFlag(var33);
    boolean var35 = var6.messagePrinted();
    java.lang.String var36 = var6.getHelp();
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      java.lang.Object var37 = var0.parse(var36);
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test328() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigIntegerStringParser var0 = new com.martiansoftware.jsap.stringparsers.BigIntegerStringParser();
    com.martiansoftware.jsap.ant.SwitchConfiguration var1 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var2 = var1.getLongflag();
    var1.setShortflag('#');
    java.lang.String var5 = var1.getLongflag();
    var1.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var1.setShortflag('4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var14 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var18 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var19 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var20 = var19.getShortFlag();
    var1.setShortflag(var20);
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var25 = var23.setRequired(false);
    java.lang.String var26 = var23.getID();
    var1.setId(var26);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var28 = var0.parse(var26);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "hi!"+ "'", var26.equals("hi!"));

  }

  public void test329() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testSimpleDefault();
    var0.setUp();
    var0.testConfig();

  }

  public void test330() throws Throwable {

    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((byte)(-1), (byte)100);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test331() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getUsage();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAPResult var7 = var0.parse("hi!");
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var9 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var10 = var9.idIterator();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var16 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var21 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var22 = var11.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var32 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var40 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var32, "hi!", true, '4', "", var39);
    java.lang.String[] var41 = new java.lang.String[] { var39};
    var9.addDefault(var22, var41);
    java.lang.String[] var43 = new java.lang.String[] { var22};
    com.martiansoftware.jsap.JSAPResult var44 = var8.parse(var43);
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    java.lang.String var47 = var45.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var48 = new com.martiansoftware.jsap.SimpleJSAP(var47);
    boolean var49 = var48.messagePrinted();
    java.lang.String var50 = var48.getHelp();
    com.martiansoftware.jsap.JSAPResult var51 = var8.parse(var50);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var61 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var64 = new com.martiansoftware.jsap.TestOption();
    int var65 = var64.countTestCases();
    int var66 = var64.countTestCases();
    java.lang.String var67 = com.martiansoftware.util.StringUtils.padRight("hi!", var66);
    com.martiansoftware.jsap.JSAPResult var68 = var8.parse(var67);
    com.martiansoftware.jsap.ParseException var69 = new com.martiansoftware.jsap.ParseException(var67);
    var0.setUsage(var67);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var74 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var78 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var79 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var80 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var86 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var87 = var86.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var88 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var80, "hi!", true, '4', "", var87);
    var0.setUsage("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var50.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "hi! "+ "'", var67.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + ""+ "'", var87.equals(""));

  }

  public void test332() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testRequired();
    var0.testConfig();
    var0.testSimpleDefault();
    var0.tearDown();

  }

  public void test333() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var25 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var26 = var25.getParameter();
    boolean var27 = var25.declaredListSeparator();
    char var28 = var25.getShortflag();
    char var29 = var25.getShortflag();
    com.martiansoftware.jsap.Switch var30 = var8.setShortFlag(var29);
    java.lang.String var31 = var30.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame(var31);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "[--hi!]"+ "'", var31.equals("[--hi!]"));

  }

  public void test334() throws Throwable {

    junit.framework.Assert.assertEquals((short)0, (short)0);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    junit.framework.Assert.assertEquals((short)0, (short)0);

  }

  public void test335() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    boolean var2 = var0.mustExist();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);

  }

  public void test336() throws Throwable {

    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    var4.finalize();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var11 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var12 = var8.setHelp("hi!");
    var8.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var15 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var32 = var21.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var33 = new com.martiansoftware.jsap.SimpleJSAP(var32);
    com.martiansoftware.jsap.UnflaggedOption var34 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var15, var20, var32);
    boolean var35 = var34.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var40 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var41 = var37.setHelp("hi!");
    var37.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var44 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    java.lang.String var47 = var45.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var48 = new com.martiansoftware.jsap.SimpleJSAP(var47);
    boolean var49 = var48.messagePrinted();
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var61 = var50.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var62 = new com.martiansoftware.jsap.SimpleJSAP(var61);
    com.martiansoftware.jsap.UnflaggedOption var63 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var44, var49, var61);
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var71 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var72 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var73 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var79 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var80 = var79.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var81 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var73, "hi!", true, '4', "", var80);
    com.martiansoftware.jsap.UnflaggedOption var82 = var63.setRequired(true);
    com.martiansoftware.jsap.UnflaggedOption var83 = var34.setRequired(true);
    var4.registerParameter((com.martiansoftware.jsap.Parameter)var34);
    com.martiansoftware.jsap.TestOption var85 = new com.martiansoftware.jsap.TestOption();
    int var86 = var85.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var87 = var4.setScreenWidth(var86);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(0, var86);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "hi!"+ "'", var40.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + ""+ "'", var80.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);

  }

  public void test337() throws Throwable {

    com.martiansoftware.jsap.Defaults var0 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var1 = var0.idIterator();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var13 = var2.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var17 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var21 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var22 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var23 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var30 = var29.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var31 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var23, "hi!", true, '4', "", var30);
    java.lang.String[] var32 = new java.lang.String[] { var30};
    var0.addDefault(var13, var32);
    java.lang.String var34 = com.martiansoftware.util.StringUtils.noNull(var13);
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch(var13);
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch(var13);
    java.lang.String var37 = var36.getUsage();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "[]"+ "'", var37.equals("[]"));

  }

  public void test338() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DoubleStringParser var0 = com.martiansoftware.jsap.stringparsers.DoubleStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var5 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var17 = var6.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = var19.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption(var3, (com.martiansoftware.jsap.StringParser)var5, var17, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    java.lang.String var61 = var59.getUsage();
    junit.framework.Assert.assertEquals(var3, var61);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var63 = var0.parse(var3);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));

  }

  public void test339() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var6 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var7 = var1.setStringParser((com.martiansoftware.jsap.StringParser)var6);
    com.martiansoftware.jsap.ant.SwitchConfiguration var8 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var9 = var8.getLongflag();
    var8.setShortflag('#');
    java.lang.String var12 = var8.getLongflag();
    var8.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var15 = var1.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var25 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var33 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var25, "hi!", true, '4', "", var32);
    java.lang.String[] var34 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.FlaggedOption var35 = var15.setDefault(var34);
    com.martiansoftware.jsap.StringParser var36 = var35.getStringParser();
    char var37 = var35.getListSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == '#');

  }

  public void test340() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ColorStringParser var0 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var3 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }

  }

  public void test341() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test4();
    var0.test4();

  }

  public void test342() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch(var21);
    java.lang.String var36 = var35.getSyntax();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var38 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var39 = var38.idIterator();
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var51 = var40.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var61 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var69 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var61, "hi!", true, '4', "", var68);
    java.lang.String[] var70 = new java.lang.String[] { var68};
    var38.addDefault(var51, var70);
    java.lang.String[] var72 = new java.lang.String[] { var51};
    com.martiansoftware.jsap.JSAPResult var73 = var37.parse(var72);
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var77 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var81 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var82 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var83 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var86 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var87 = var73.contains("hi!");
    java.math.BigInteger[] var89 = var73.getBigIntegerArray("");
    com.martiansoftware.jsap.ParseException var90 = new com.martiansoftware.jsap.ParseException("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var36, "");
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "[]"+ "'", var36.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);

  }

  public void test343() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var51 = var49.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var53 = var49.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var62 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var63 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var53.addDefault("hi!");
    java.lang.String var70 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var70, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(1.0f, 1.0f, 1.0f);
    float var83 = var14.getFloat("hi!", 1.0f);
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var86 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var87 = var86.getLongflag();
    var86.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var90 = var85.setListSeparator('#');
    java.lang.Character var91 = var90.getShortFlagCharacter();
    java.lang.String var92 = var90.getUsage();
    junit.framework.Assert.assertEquals((short)0, (short)0);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    short var98 = var14.getShort(var92, (short)0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "hi!"+ "'", var70.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1.0f);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + "[<hi!>]"+ "'", var92.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == (short)0);

  }

  public void test344() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var9 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var9.testSwitchParse();
    var9.testLongFlag();
    var9.testID();
    var9.testSwitchParse();
    var9.testLongFlag();

  }

  public void test345() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.ant.SwitchConfiguration var28 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var29 = var28.getLongflag();
    var28.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var39 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var40 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var41 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var49 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var41, "hi!", true, '4', "", var48);
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var51 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var52 = var51.getParameter();
    java.lang.String var53 = var51.getLongflag();
    com.martiansoftware.jsap.Defaults var54 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var55 = var54.idIterator();
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var65 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var68 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var72 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var76 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var77 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var78 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var84 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var85 = var84.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var86 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var78, "hi!", true, '4', "", var85);
    java.lang.Character var87 = var86.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var90 = var86.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var91 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var92 = new java.lang.String[] { "hi!"};
    var54.addDefault("hi!", var92);
    java.lang.String var94 = com.martiansoftware.util.StringUtils.noNull("hi!");
    var51.setId("hi!");
    com.martiansoftware.jsap.Parameter var96 = var50.setHelp("hi!");
    java.lang.String var97 = var50.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + ""+ "'", var85.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + '4'+ "'", var87.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "hi!"+ "'", var94.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var97 + "' != '" + "[-#|--hi!]"+ "'", var97.equals("[-#|--hi!]"));

  }

  public void test346() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigDecimalStringParser var0 = com.martiansoftware.jsap.stringparsers.BigDecimalStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    java.lang.String var7 = var4.getHelp();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var8 = var0.parse(var7);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var7.equals("  [--help]\n        Prints this help message.\n"));

  }

  public void test347() throws Throwable {

    com.martiansoftware.jsap.stringparsers.PackageStringParser var0 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var1 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var2 = var1.hasProperties();
    java.lang.String var3 = var1.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var4 = new com.martiansoftware.jsap.ant.ParserProperty();
    var1.addConfiguredProperty(var4);
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.JSAP var12 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var13 = var12.getHelp();
    java.lang.String var14 = var12.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var15 = new com.martiansoftware.jsap.SimpleJSAP(var14);
    boolean var16 = var15.messagePrinted();
    java.lang.String var17 = var15.getHelp();
    com.martiansoftware.jsap.ParseException var18 = new com.martiansoftware.jsap.ParseException(var17);
    java.lang.String[] var19 = new java.lang.String[] { var17};
    com.martiansoftware.jsap.JSAPResult var20 = var9.parse(var19);
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.util.Iterator var23 = var21.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var24 = var21.getIDMap();
    java.lang.String var25 = var21.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var29 = var20.getByte(var25, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var30 = new com.martiansoftware.jsap.QualifiedSwitch(var25);
    var4.setValue(var25);
    java.lang.String var32 = var4.getValue();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var33 = var0.parse(var32);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var17.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));

  }

  public void test348() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getUsage();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAPResult var7 = var0.parse("hi!");
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var12 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var13 = var9.setHelp("hi!");
    var9.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var16 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    java.lang.String var19 = var17.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var20 = new com.martiansoftware.jsap.SimpleJSAP(var19);
    boolean var21 = var20.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var34 = new com.martiansoftware.jsap.SimpleJSAP(var33);
    com.martiansoftware.jsap.UnflaggedOption var35 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var16, var21, var33);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    com.martiansoftware.jsap.UnflaggedOption var54 = var35.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var58 = var56.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var59 = var35.setList(false);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var68 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var69 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var77 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var69, "hi!", true, '4', "", var76);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var78 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var79 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var80 = var79.getHelp();
    java.lang.String var81 = var79.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var82 = new com.martiansoftware.jsap.SimpleJSAP(var81);
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var86 = var84.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var88 = var84.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var90 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var92 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var93 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var94 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var78, var81, false, '4', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var95 = var59.setListSeparator('4');
    boolean var96 = var95.isList();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue("hi!", var96);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!"+ "'", var12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + ""+ "'", var80.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == false);

  }

  public void test349() throws Throwable {

    com.martiansoftware.jsap.UnknownFlagException var1 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    java.lang.String var2 = var1.getFlag();
    com.martiansoftware.jsap.ParseException var3 = new com.martiansoftware.jsap.ParseException((java.lang.Throwable)var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "4"+ "'", var2.equals("4"));

  }

  public void test350() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigDecimalStringParser var0 = new com.martiansoftware.jsap.stringparsers.BigDecimalStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var26 = var15.getClass("hi!");
    java.lang.String var29 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var30 = var15.getURLArray(var29);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var31 = var0.parse(var29);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "hi!"+ "'", var29.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);

  }

  public void test351() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.util.Iterator var17 = var15.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var18 = var15.getIDMap();
    java.lang.String var19 = var15.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var23 = var14.getByte(var19, (byte)(-1));
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    java.util.Iterator var27 = var24.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    java.lang.String var30 = var28.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    boolean var32 = var31.messagePrinted();
    boolean var33 = var31.messagePrinted();
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var46 = var35.getHelp((-1), "hi!");
    java.lang.String var47 = var31.getHelp(100, "hi!");
    java.lang.String var48 = var24.getHelp(100);
    java.math.BigInteger[] var49 = var14.getBigIntegerArray(var48);
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    java.lang.String var52 = var50.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var52);
    boolean var54 = var53.messagePrinted();
    java.lang.String var55 = var53.getHelp();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    boolean var60 = var59.messagePrinted();
    java.lang.String var61 = var59.getHelp();
    com.martiansoftware.jsap.ParseException var62 = new com.martiansoftware.jsap.ParseException(var61);
    java.lang.String[] var63 = new java.lang.String[] { var61};
    com.martiansoftware.jsap.JSAPResult var64 = var53.parse(var63);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var74 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var80 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var81 = var80.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var74, "hi!", true, '4', "", var81);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var83 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var84 = new java.lang.Object[] { var83};
    java.lang.Object[] var85 = var64.getObjectArray(var81, var84);
    com.martiansoftware.jsap.stringparsers.FileStringParser var86 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var91 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var92 = var88.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var93 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var94 = var93.getID();
    java.lang.Object var95 = var86.parse(var94);
    java.io.File[] var96 = var64.getFileArray(var94);
    double[] var97 = var14.getDoubleArray(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var47.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var55.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var61.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + "hi!"+ "'", var91.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "hi!"+ "'", var94.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var96 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var97 == null);

  }

  public void test352() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var29 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var30 = var26.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var31 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var32 = var31.getID();
    java.lang.String var33 = var31.getID();
    com.martiansoftware.jsap.Switch var34 = var24.setDefault(var33);
    java.lang.String var35 = var24.getID();
    junit.framework.Assert.assertNotNull((java.lang.Object)var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "hi!"+ "'", var29.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "hi!"+ "'", var33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "hi!"+ "'", var35.equals("hi!"));

  }

  public void test353() throws Throwable {

    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    java.lang.String var6 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var6, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    junit.framework.Assert.assertEquals(var6, 100.0d, 10.0d, 100.0d);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(100.0d, 10.0d, 0.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "hi!"+ "'", var6.equals("hi!"));

  }

  public void test354() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    var7.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var14 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var31 = var20.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    com.martiansoftware.jsap.UnflaggedOption var33 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var14, var19, var31);
    boolean var34 = var33.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var39 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var40 = var36.setHelp("hi!");
    var36.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var43 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    java.lang.String var46 = var44.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var47 = new com.martiansoftware.jsap.SimpleJSAP(var46);
    boolean var48 = var47.messagePrinted();
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var60 = var49.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    com.martiansoftware.jsap.UnflaggedOption var62 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var43, var48, var60);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var72 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var78 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var79 = var78.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var80 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var72, "hi!", true, '4', "", var79);
    com.martiansoftware.jsap.UnflaggedOption var81 = var62.setRequired(true);
    com.martiansoftware.jsap.UnflaggedOption var82 = var33.setRequired(true);
    var3.registerParameter((com.martiansoftware.jsap.Parameter)var33);
    java.util.Iterator var84 = var3.getUnflaggedOptionsIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "hi!"+ "'", var39.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);

  }

  public void test355() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var15 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var23 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var15, "hi!", true, '4', "", var22);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("");
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var29 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var30 = var26.setHelp("hi!");
    var26.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var33 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var35 = var34.getHelp();
    java.lang.String var36 = var34.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var37 = new com.martiansoftware.jsap.SimpleJSAP(var36);
    boolean var38 = var37.messagePrinted();
    com.martiansoftware.jsap.JSAP var39 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var50 = var39.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var51 = new com.martiansoftware.jsap.SimpleJSAP(var50);
    com.martiansoftware.jsap.UnflaggedOption var52 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var33, var38, var50);
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var62 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var68 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var69 = var68.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var70 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var62, "hi!", true, '4', "", var69);
    com.martiansoftware.jsap.UnflaggedOption var71 = var52.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var72 = var24.setList(true);
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var77 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var78 = var74.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var79 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var80 = var74.setStringParser((com.martiansoftware.jsap.StringParser)var79);
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var84 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var88 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var89 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var90 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var93 = var80.setHelp("hi!");
    com.martiansoftware.jsap.FlaggedOption var94 = var24.setUsageName("hi!");
    com.martiansoftware.jsap.UnknownFlagException var95 = new com.martiansoftware.jsap.UnknownFlagException("hi!");
    com.martiansoftware.jsap.Flagged var96 = var3.getByLongFlag("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "hi!"+ "'", var29.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "hi!"+ "'", var77.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == null);

  }

  public void test356() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BooleanStringParser var0 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var26 = var15.getClass("hi!");
    java.lang.String var29 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var30 = var15.getURLArray(var29);
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    java.util.Iterator var33 = var31.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var34 = var31.getIDMap();
    java.lang.String var35 = var31.getHelp();
    java.lang.String var36 = var31.toString();
    java.lang.Object[] var37 = var15.getObjectArray(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var47 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var55 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var47, "hi!", true, '4', "", var54);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var56 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    java.lang.String var59 = var57.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var60 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var64 = var62.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var66 = var62.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var71 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var72 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var56, var59, false, '4', "hi!");
    java.lang.String var75 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var76 = com.martiansoftware.util.StringUtils.wrapToList(var59, 1);
    java.lang.String var77 = var15.getString(var59);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var78 = var0.parse(var59);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "hi!"+ "'", var29.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var30 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "hi!"+ "'", var75.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == null);

  }

  public void test357() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var38 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var46 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var38, "hi!", true, '4', "", var45);
    com.martiansoftware.jsap.UnflaggedOption var47 = var28.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var51 = var49.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var52 = var28.setList(false);
    com.martiansoftware.jsap.stringparsers.FileStringParser var53 = var0.setMustBeFile(false);
    com.martiansoftware.jsap.stringparsers.FileStringParser var55 = var53.setMustBeDirectory(false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);

  }

  public void test358() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test5();
    var0.test7();
    var0.test7();

  }

  public void test359() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    boolean var40 = var39.messagePrinted();
    java.lang.String var41 = var39.getHelp();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    boolean var46 = var45.messagePrinted();
    java.lang.String var47 = var45.getHelp();
    com.martiansoftware.jsap.ParseException var48 = new com.martiansoftware.jsap.ParseException(var47);
    java.lang.String[] var49 = new java.lang.String[] { var47};
    com.martiansoftware.jsap.JSAPResult var50 = var39.parse(var49);
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    java.util.Iterator var53 = var51.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var54 = var51.getIDMap();
    java.lang.String var55 = var51.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var59 = var50.getByte(var55, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var60 = new com.martiansoftware.jsap.QualifiedSwitch(var55);
    java.net.InetAddress[] var61 = var14.getInetAddressArray(var55);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption(var55);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var63 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var64 = var63.getParameter();
    boolean var65 = var63.declaredListSeparator();
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var69 = var67.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var71 = var67.setRequired(false);
    var63.setAllowmultipledeclarations(false);
    com.martiansoftware.jsap.FlaggedOption var73 = var62.setRequired(false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var41.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var47.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);

  }

  public void test360() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.stringparsers.DateStringParser var15 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var15.setUp();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var26 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var26, "hi!", true, '4', "", var33);
    java.lang.String var35 = var15.getProperty("");
    java.lang.String[] var36 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.JSAPResult var37 = var3.parse(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var47 = var46.getShortFlag();
    com.martiansoftware.jsap.Flagged var48 = var3.getByShortFlag((java.lang.Character)var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == null);

  }

  public void test361() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var11 = var0.getHelp((-1), "hi!");
    java.util.Iterator var12 = var0.getUnflaggedOptionsIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);

  }

  public void test362() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    java.lang.Class[] var54 = var14.getClassArray("");
    com.martiansoftware.jsap.Defaults var55 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var56 = var55.idIterator();
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var60 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var64 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var65 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var66 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var69 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var73 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var77 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var78 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var79 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var85 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var86 = var85.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var87 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var79, "hi!", true, '4', "", var86);
    java.lang.Character var88 = var87.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var90 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var91 = var87.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var92 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var93 = new java.lang.String[] { "hi!"};
    var55.addDefault("hi!", var93);
    java.lang.String var95 = com.martiansoftware.util.StringUtils.noNull("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      long var96 = var14.getLong(var95);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + ""+ "'", var86.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + '4'+ "'", var88.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "hi!"+ "'", var95.equals("hi!"));

  }

  public void test363() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.util.Iterator var17 = var15.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var18 = var15.getIDMap();
    java.lang.String var19 = var15.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var23 = var14.getByte(var19, (byte)(-1));
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var25 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var26 = var25.idIterator();
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var38 = var27.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var48 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var48, "hi!", true, '4', "", var55);
    java.lang.String[] var57 = new java.lang.String[] { var55};
    var25.addDefault(var38, var57);
    java.lang.String[] var59 = new java.lang.String[] { var38};
    com.martiansoftware.jsap.JSAPResult var60 = var24.parse(var59);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var65 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var66 = var62.setHelp("hi!");
    var62.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var69 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var70 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var71 = var70.getHelp();
    java.lang.String var72 = var70.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var73 = new com.martiansoftware.jsap.SimpleJSAP(var72);
    boolean var74 = var73.messagePrinted();
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var80 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var84 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var85 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var86 = var75.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var87 = new com.martiansoftware.jsap.SimpleJSAP(var86);
    com.martiansoftware.jsap.UnflaggedOption var88 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var69, var74, var86);
    com.martiansoftware.jsap.FlaggedOption var90 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.Object[] var91 = new java.lang.Object[] { var90};
    java.lang.Object[] var92 = var60.getObjectArray("", var91);
    com.martiansoftware.jsap.FlaggedOption var94 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var98 = var60.getByte("hi!", (byte)(-1));
    junit.framework.Assert.assertEquals(var23, var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "hi!"+ "'", var65.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + ""+ "'", var86.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == (byte)(-1));

  }

  public void test364() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    java.lang.String var28 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var29 = var14.getURLArray(var28);
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.util.Iterator var32 = var30.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var33 = var30.getIDMap();
    java.lang.String var34 = var30.getHelp();
    java.lang.String var35 = var30.toString();
    java.lang.Object[] var36 = var14.getObjectArray(var35);
    com.martiansoftware.jsap.ant.SwitchConfiguration var37 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var38 = var37.getLongflag();
    var37.setShortflag('#');
    java.lang.String var41 = var37.getLongflag();
    java.lang.String var42 = var37.getId();
    com.martiansoftware.jsap.Parameter var43 = var37.getParameter();
    boolean var44 = var37.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var49 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var50 = var46.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var51 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var52 = var51.getID();
    java.lang.String var53 = var51.getID();
    com.martiansoftware.jsap.JSAPException var54 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var51);
    java.lang.String var55 = var54.toString();
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch(var55);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var35, (java.lang.Object)var44, (java.lang.Object)var55);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "hi!"+ "'", var49.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "hi!"+ "'", var52.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "hi!"+ "'", var53.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "com.martiansoftware.jsap.JSAPException: com.martiansoftware.jsap.IllegalMultipleDeclarationException: Parameter 'hi!' cannot be declared more than once."+ "'", var55.equals("com.martiansoftware.jsap.JSAPException: com.martiansoftware.jsap.IllegalMultipleDeclarationException: Parameter 'hi!' cannot be declared more than once."));

  }

  public void test365() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.setUp();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var3 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var4 = var3.idIterator();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var26 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var26, "hi!", true, '4', "", var33);
    java.lang.String[] var35 = new java.lang.String[] { var33};
    var3.addDefault(var16, var35);
    java.lang.String[] var37 = new java.lang.String[] { var16};
    com.martiansoftware.jsap.JSAPResult var38 = var2.parse(var37);
    com.martiansoftware.jsap.JSAP var39 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var40 = var39.getHelp();
    java.lang.String var41 = var39.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var42 = new com.martiansoftware.jsap.SimpleJSAP(var41);
    boolean var43 = var42.messagePrinted();
    java.lang.String var44 = var42.getHelp();
    com.martiansoftware.jsap.JSAPResult var45 = var2.parse(var44);
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var55 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var58 = new com.martiansoftware.jsap.TestOption();
    int var59 = var58.countTestCases();
    int var60 = var58.countTestCases();
    java.lang.String var61 = com.martiansoftware.util.StringUtils.padRight("hi!", var60);
    com.martiansoftware.jsap.JSAPResult var62 = var2.parse(var61);
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    java.lang.String var65 = var63.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var66 = new com.martiansoftware.jsap.SimpleJSAP(var65);
    boolean var67 = var66.messagePrinted();
    java.lang.String var68 = var66.getHelp();
    java.lang.String var71 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var71, 10.0f, 10.0f, 1.0f);
    var66.setHelp(var71);
    byte[] var83 = var62.getByteArray(var71);
    java.lang.Object var84 = var0.parse(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var44.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "hi! "+ "'", var61.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var68.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "hi!"+ "'", var71.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);

  }

  public void test366() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var5.addDefault("hi!");
    java.lang.String var19 = var5.getSyntax();
    boolean var20 = var5.isList();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var39 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var47 = var45.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var49 = var45.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var54 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var55 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, var42, false, '4', "hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch(var42);
    java.lang.Character var57 = var56.getShortFlagCharacter();
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    java.lang.String var60 = var58.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    boolean var62 = var61.messagePrinted();
    java.lang.String var63 = var61.getHelp();
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    java.lang.String var66 = var64.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var67 = new com.martiansoftware.jsap.SimpleJSAP(var66);
    boolean var68 = var67.messagePrinted();
    java.lang.String var69 = var67.getHelp();
    com.martiansoftware.jsap.ParseException var70 = new com.martiansoftware.jsap.ParseException(var69);
    java.lang.String[] var71 = new java.lang.String[] { var69};
    com.martiansoftware.jsap.JSAPResult var72 = var61.parse(var71);
    com.martiansoftware.jsap.JSAP var73 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var74 = var73.getHelp();
    java.lang.String var75 = var73.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var76 = new com.martiansoftware.jsap.SimpleJSAP(var75);
    float[] var77 = var72.getFloatArray(var75);
    com.martiansoftware.jsap.JSAPException var78 = new com.martiansoftware.jsap.JSAPException(var75);
    com.martiansoftware.jsap.Switch var79 = var56.setDefault(var75);
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var82 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var83 = var82.getLongflag();
    var82.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var86 = var81.setListSeparator('#');
    boolean var87 = var86.isList();
    junit.framework.Assert.assertFalse(var75, var87);
    com.martiansoftware.jsap.FlaggedOption var89 = var5.setAllowMultipleDeclarations(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "[<hi!>]"+ "'", var19.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var63.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var69.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);

  }

  public void test367() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DoubleStringParser var0 = com.martiansoftware.jsap.stringparsers.DoubleStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    boolean var21 = var19.messagePrinted();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var28 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var32 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var33 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var34 = var23.getHelp((-1), "hi!");
    java.lang.String var35 = var19.getHelp(100, "hi!");
    java.util.Date[] var36 = var15.getDateArray(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    java.lang.Class[] var55 = var15.getClassArray("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var56 = var0.parse("");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var35.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);

  }

  public void test368() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testRequired();
    var0.tearDown();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testSimpleDefault();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test369() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var33 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var34 = new java.lang.Object[] { var33};
    java.lang.Object[] var35 = var14.getObjectArray(var31, var34);
    com.martiansoftware.jsap.stringparsers.FileStringParser var36 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var41 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var42 = var38.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var43 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var44 = var43.getID();
    java.lang.Object var45 = var36.parse(var44);
    java.io.File[] var46 = var14.getFileArray(var44);
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var58 = var47.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    com.martiansoftware.jsap.JSAPException var60 = new com.martiansoftware.jsap.JSAPException(var58);
    java.lang.Class[] var61 = var14.getClassArray(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "hi!"+ "'", var41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "hi!"+ "'", var44.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);

  }

  public void test370() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var5.addDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var23 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var24 = var20.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var25 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = var20.setStringParser((com.martiansoftware.jsap.StringParser)var25);
    com.martiansoftware.jsap.FlaggedOption var27 = var5.setStringParser((com.martiansoftware.jsap.StringParser)var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var46 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var54 = var52.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var56 = var52.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, var49, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    java.lang.String var65 = var63.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var66 = new com.martiansoftware.jsap.SimpleJSAP(var65);
    boolean var67 = var66.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var68 = var62.setRequired(var67);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var69 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var70 = var69.hasProperties();
    com.martiansoftware.jsap.FlaggedOption var71 = var62.setAllowMultipleDeclarations(var70);
    com.martiansoftware.jsap.FlaggedOption var72 = var5.setAllowMultipleDeclarations(var70);
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var76 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var80 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var81 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var82 = var81.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var83 = var72.setListSeparator(var82);
    char var84 = var83.getShortFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!"+ "'", var23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == '\u0000');

  }

  public void test371() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var46 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var49 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var50 = var36.contains("hi!");
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.Exception var70 = var36.getException("");
    com.martiansoftware.jsap.ant.ParserProperty var71 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var76 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var77 = var73.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var78 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var71.setValue("hi!");
    boolean var80 = var36.userSpecified("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertNull((java.lang.Object)var80);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "hi!"+ "'", var76.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);

  }

  public void test372() throws Throwable {

    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((byte)(-1), (byte)10);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test373() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.String var18 = var17.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var18);
    com.martiansoftware.jsap.TestFlaggedOption var20 = new com.martiansoftware.jsap.TestFlaggedOption(var18);
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP(var18);
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test374() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ClassStringParser var0 = com.martiansoftware.jsap.stringparsers.ClassStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var5 = var0.parse(var3);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));

  }

  public void test375() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.util.Iterator var17 = var15.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var18 = var15.getIDMap();
    java.lang.String var19 = var15.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var23 = var14.getByte(var19, (byte)(-1));
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    boolean var28 = var27.messagePrinted();
    java.lang.String var29 = var27.getHelp();
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.lang.String var32 = var30.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var33 = new com.martiansoftware.jsap.SimpleJSAP(var32);
    boolean var34 = var33.messagePrinted();
    java.lang.String var35 = var33.getHelp();
    com.martiansoftware.jsap.ParseException var36 = new com.martiansoftware.jsap.ParseException(var35);
    java.lang.String[] var37 = new java.lang.String[] { var35};
    com.martiansoftware.jsap.JSAPResult var38 = var27.parse(var37);
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var48 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var49 = var38.getClass("hi!");
    java.lang.String var51 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 100);
    char[] var52 = var14.getCharArray(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var29.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var35.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "hi!                                                                                                 "+ "'", var51.equals("hi!                                                                                                 "));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);

  }

  public void test376() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongStringParser var0 = new com.martiansoftware.jsap.stringparsers.LongStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.util.Iterator var3 = var1.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var4 = var1.getIDMap();
    java.lang.String var5 = var1.getHelp();
    java.lang.String var6 = var1.toString();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var18 = var7.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var38 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var46 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var38, "hi!", true, '4', "", var45);
    java.lang.String var47 = var46.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var47);
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption(var47);
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch(var18, '4', var47);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var72 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var76 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var77 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var78 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals(var18, "hi!", "hi!");
    var1.setHelp(var18);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var81 = var0.parse(var18);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var47.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));

  }

  public void test377() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var4.unregisterParameter((com.martiansoftware.jsap.Parameter)var6);
    com.martiansoftware.jsap.TestOption var8 = new com.martiansoftware.jsap.TestOption();
    int var9 = var8.countTestCases();
    int var10 = var8.countTestCases();
    int var11 = var8.countTestCases();
    java.lang.String var12 = var4.getHelp(var11);
    com.martiansoftware.jsap.TestUsageString var13 = new com.martiansoftware.jsap.TestUsageString(var12);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var14 = var0.parse(var12);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var12.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));

  }

  public void test378() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var6 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var7 = var6.hasProperties();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var8 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var9 = var8.hasProperties();
    java.lang.String var10 = var8.getStringparser();
    boolean var11 = var8.getIslist();
    com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var12 = com.martiansoftware.jsap.stringparsers.EnumeratedStringParser.getParser(var5, var7, var11);
    var12.tearDown();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var17 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var21 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var22 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var23 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var30 = var29.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var31 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var23, "hi!", true, '4', "", var30);
    com.martiansoftware.jsap.UnspecifiedParameterException var32 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var35 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var34);
    com.martiansoftware.jsap.ParseException var36 = new com.martiansoftware.jsap.ParseException("", (java.lang.Throwable)var35);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var37 = var12.parse("");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));

  }

  public void test379() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    java.lang.String var17 = var4.getIDByLongFlag(var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var36 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var44 = var42.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var46 = var42.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var52 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var36, var39, false, '4', "hi!");
    java.lang.String var55 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var56 = com.martiansoftware.util.StringUtils.wrapToList(var39, 1);
    java.util.List var58 = com.martiansoftware.util.StringUtils.wrapToList(var39, 1);
    com.martiansoftware.jsap.SyntaxException var59 = new com.martiansoftware.jsap.SyntaxException(var39);
    boolean var60 = var4.idExists(var39);
    java.lang.String var62 = var4.getIDByShortFlag((java.lang.Character)'a');
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'a');
    com.martiansoftware.jsap.JSAPException var64 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!"+ "'", var55.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == null);

  }

  public void test380() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongStringParser var0 = com.martiansoftware.jsap.stringparsers.LongStringParser.getParser();
    java.lang.String var3 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.lang.String[] var4 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var5 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "hi!"+ "'", var3.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);

  }

  public void test381() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ByteStringParser var0 = new com.martiansoftware.jsap.stringparsers.ByteStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    boolean var29 = var28.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var34 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var35 = var31.setHelp("hi!");
    var31.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var38 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var39 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var40 = var39.getHelp();
    java.lang.String var41 = var39.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var42 = new com.martiansoftware.jsap.SimpleJSAP(var41);
    boolean var43 = var42.messagePrinted();
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var49 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var53 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var55 = var44.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var56 = new com.martiansoftware.jsap.SimpleJSAP(var55);
    com.martiansoftware.jsap.UnflaggedOption var57 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var38, var43, var55);
    com.martiansoftware.jsap.ant.SwitchConfiguration var58 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var59 = var58.getLongflag();
    var58.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var65 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var69 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var70 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var71 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var77 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var78 = var77.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var79 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var71, "hi!", true, '4', "", var78);
    com.martiansoftware.jsap.Switch var80 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var81 = var28.setUsageName("hi!");
    com.martiansoftware.jsap.TestOption var82 = new com.martiansoftware.jsap.TestOption();
    int var83 = var82.countTestCases();
    int var84 = var82.countTestCases();
    java.lang.String var85 = com.martiansoftware.util.StringUtils.padRight("hi!", var84);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var86 = var0.parse(var85);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "hi!"+ "'", var34.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "hi! "+ "'", var85.equals("hi! "));

  }

  public void test382() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    boolean var48 = var14.success();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var58 = var57.getShortFlag();
    char var59 = var57.getShortFlag();
    java.lang.Character var60 = var57.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var70 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var73 = var57.setDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var78 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var79 = var75.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var80 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var81 = var80.getID();
    java.lang.String var82 = var80.getID();
    com.martiansoftware.jsap.Switch var83 = var73.setDefault(var82);
    int[] var84 = var14.getIntArray(var82);
    com.martiansoftware.jsap.JSAP var85 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var86 = var85.getHelp();
    java.lang.String var87 = var85.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var88 = new com.martiansoftware.jsap.SimpleJSAP(var87);
    boolean var89 = var88.messagePrinted();
    java.lang.String var90 = var88.getHelp();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var91 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var92 = var91.getParameter();
    boolean var93 = var91.declaredListSeparator();
    char var94 = var91.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var95 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var96 = var95.hasProperties();
    var91.setRequired(var96);
    junit.framework.Assert.assertFalse(var90, var96);
    java.net.URL[] var99 = var14.getURLArray(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + '4'+ "'", var60.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "hi!"+ "'", var78.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "hi!"+ "'", var81.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "hi!"+ "'", var82.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + ""+ "'", var86.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + ""+ "'", var87.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var90.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var99 == null);

  }

  public void test383() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test3();
    var0.test6();
    var0.test7();
    var0.test4();

  }

  public void test384() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    boolean var20 = var14.success();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    boolean var25 = var24.messagePrinted();
    java.lang.String var26 = var24.getHelp();
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var28 = var27.getHelp();
    java.lang.String var29 = var27.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var30 = new com.martiansoftware.jsap.SimpleJSAP(var29);
    boolean var31 = var30.messagePrinted();
    java.lang.String var32 = var30.getHelp();
    com.martiansoftware.jsap.ParseException var33 = new com.martiansoftware.jsap.ParseException(var32);
    java.lang.String[] var34 = new java.lang.String[] { var32};
    com.martiansoftware.jsap.JSAPResult var35 = var24.parse(var34);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var45 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var46 = var35.getClass("hi!");
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var48 = var47.getHelp();
    java.lang.String var49 = var47.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var50 = new com.martiansoftware.jsap.SimpleJSAP(var49);
    com.martiansoftware.jsap.IDMap var51 = var50.getIDMap();
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var62 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var63 = var52.getHelp((-1), "hi!");
    java.lang.String var64 = var51.getIDByLongFlag(var63);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var74 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var80 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var81 = var80.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var74, "hi!", true, '4', "", var81);
    java.util.List var84 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var85 = var51.getIDByLongFlag("");
    long[] var86 = var35.getLongArray("");
    com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource var87 = new com.martiansoftware.jsap.defaultsources.TestPropertyDefaultSource();
    int var88 = var87.countTestCases();
    com.martiansoftware.jsap.TestOption var89 = new com.martiansoftware.jsap.TestOption();
    int var90 = var89.countTestCases();
    int var91 = var89.countTestCases();
    int var92 = var89.countTestCases();
    junit.framework.Assert.assertEquals("", var88, var92);
    float[] var94 = var14.getFloatArray("");
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var95 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var96 = var95.hasProperties();
    com.martiansoftware.jsap.Parameter var97 = var95.getParameter();
    boolean var98 = var95.hasProperties();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue("", var98);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var26.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var32.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var97 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == false);

  }

  public void test385() throws Throwable {

    com.martiansoftware.jsap.Defaults var0 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var1 = var0.idIterator();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var11 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.Character var33 = var32.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var36 = var32.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var37 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var38 = new java.lang.String[] { "hi!"};
    var0.addDefault("hi!", var38);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    java.lang.String[] var58 = var0.getDefault("hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    java.lang.String var61 = var59.getUsage();
    java.lang.String[] var62 = var0.getDefault(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + '4'+ "'", var33.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == null);

  }

  public void test386() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var1 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var2 = var1.getParameter();
    boolean var3 = var1.declaredListSeparator();
    boolean var4 = var1.getIslist();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var9 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var10 = var6.setHelp("hi!");
    var6.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var13 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var15 = var14.getHelp();
    java.lang.String var16 = var14.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var17 = new com.martiansoftware.jsap.SimpleJSAP(var16);
    boolean var18 = var17.messagePrinted();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var30 = var19.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    com.martiansoftware.jsap.UnflaggedOption var32 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var13, var18, var30);
    com.martiansoftware.jsap.ant.SwitchConfiguration var33 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var34 = var33.getLongflag();
    var33.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.Switch var55 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var1.setListseparator('#');
    com.martiansoftware.jsap.ant.DefaultValue var57 = new com.martiansoftware.jsap.ant.DefaultValue();
    java.lang.String var58 = var57.getValue();
    var1.addConfiguredDefault(var57);
    var0.addConfiguredDefault(var57);
    java.lang.String var61 = var57.getValue();
    java.lang.String var62 = var57.getValue();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == null);

  }

  public void test387() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.String var18 = var17.getSyntax();
    java.lang.String var19 = var17.getSyntax();
    com.martiansoftware.jsap.stringparsers.DateStringParser var20 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var25 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var26 = var22.setHelp("hi!");
    var22.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var29 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.lang.String var32 = var30.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var33 = new com.martiansoftware.jsap.SimpleJSAP(var32);
    boolean var34 = var33.messagePrinted();
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var46 = var35.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var47 = new com.martiansoftware.jsap.SimpleJSAP(var46);
    com.martiansoftware.jsap.UnflaggedOption var48 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var29, var34, var46);
    com.martiansoftware.jsap.ant.SwitchConfiguration var49 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var50 = var49.getLongflag();
    var49.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var62 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var68 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var69 = var68.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var70 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var62, "hi!", true, '4', "", var69);
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var75 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var79 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var80 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var20.setProperty("", "hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var82 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("");
    com.martiansoftware.jsap.Parameter var83 = var17.setHelp("");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var18.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var19.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "hi!"+ "'", var25.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);

  }

  public void test388() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var51 = var27.setList(false);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var61 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var69 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var61, "hi!", true, '4', "", var68);
    com.martiansoftware.jsap.UnflaggedOption var70 = var51.setStringParser((com.martiansoftware.jsap.StringParser)var61);
    boolean var71 = var70.required();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == true);

  }

  public void test389() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    java.lang.String var38 = var36.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var39 = new com.martiansoftware.jsap.SimpleJSAP(var38);
    boolean var40 = var39.messagePrinted();
    java.lang.String var41 = var39.getHelp();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    java.lang.String var44 = var42.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    boolean var46 = var45.messagePrinted();
    java.lang.String var47 = var45.getHelp();
    com.martiansoftware.jsap.ParseException var48 = new com.martiansoftware.jsap.ParseException(var47);
    java.lang.String[] var49 = new java.lang.String[] { var47};
    com.martiansoftware.jsap.JSAPResult var50 = var39.parse(var49);
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    java.util.Iterator var53 = var51.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var54 = var51.getIDMap();
    java.lang.String var55 = var51.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var59 = var50.getByte(var55, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var60 = new com.martiansoftware.jsap.QualifiedSwitch(var55);
    java.net.InetAddress[] var61 = var14.getInetAddressArray(var55);
    junit.framework.Assert.assertEquals(var55, (byte)10, (byte)10);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((byte)10, (byte)(-1));
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var41.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var47.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);

  }

  public void test390() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    java.lang.String var6 = var1.getUsage();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var11 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var12 = var8.setHelp("hi!");
    var8.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var15 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var32 = var21.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var33 = new com.martiansoftware.jsap.SimpleJSAP(var32);
    com.martiansoftware.jsap.UnflaggedOption var34 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var15, var20, var32);
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var44 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var52 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var44, "hi!", true, '4', "", var51);
    com.martiansoftware.jsap.UnflaggedOption var53 = var34.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var54 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var55 = var53.setStringParser((com.martiansoftware.jsap.StringParser)var54);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var65 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var65, "hi!", true, '4', "", var72);
    java.lang.String var74 = var73.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var74);
    com.martiansoftware.jsap.UnflaggedOption var76 = var53.setUsageName(var74);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var77 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var78 = var77.getRequired();
    com.martiansoftware.jsap.UnflaggedOption var79 = var76.setList(var78);
    com.martiansoftware.jsap.FlaggedOption var80 = var1.setRequired(var78);
    java.lang.Character var81 = var1.getShortFlagCharacter();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "[<hi!>]"+ "'", var6.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var74.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == null);

  }

  public void test391() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ClassStringParser var0 = new com.martiansoftware.jsap.stringparsers.ClassStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.UnspecifiedParameterException var19 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var20 = var0.parse("");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));

  }

  public void test392() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.TestFlaggedOption var18 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame("hi!");
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));

  }

  public void test393() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ByteStringParser var0 = com.martiansoftware.jsap.stringparsers.ByteStringParser.getParser();
    com.martiansoftware.jsap.stringparsers.DateStringParser var1 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var6 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var7 = var3.setHelp("hi!");
    var3.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var10 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var11 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var12 = var11.getHelp();
    java.lang.String var13 = var11.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var14 = new com.martiansoftware.jsap.SimpleJSAP(var13);
    boolean var15 = var14.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var28 = new com.martiansoftware.jsap.SimpleJSAP(var27);
    com.martiansoftware.jsap.UnflaggedOption var29 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var10, var15, var27);
    com.martiansoftware.jsap.ant.SwitchConfiguration var30 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var31 = var30.getLongflag();
    var30.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var43 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var51 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var43, "hi!", true, '4', "", var50);
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var1.setProperty("", "hi!");
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var72 = var1.getProperty("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var73 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "hi!"+ "'", var6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == null);

  }

  public void test394() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var26 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var27 = var26.getID();
    char var28 = var26.getShortFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi!"+ "'", var27.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == '\u0000');

  }

  public void test395() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    double var39 = var14.getDouble(var37, 0.0d);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    java.util.Iterator var47 = var14.getExceptionIterator(var45);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var51 = var49.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var53 = var49.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var61 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var62 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var63 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var53.addDefault("hi!");
    boolean var67 = var14.contains("hi!");
    com.martiansoftware.jsap.ant.ParserProperty var68 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var72 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var76 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var77 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var78 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var84 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var85 = var84.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var86 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var78, "hi!", true, '4', "", var85);
    java.util.List var88 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    var68.setName("");
    com.martiansoftware.jsap.TestOption var90 = new com.martiansoftware.jsap.TestOption();
    int var91 = var90.countTestCases();
    int var92 = var90.countTestCases();
    java.util.List var93 = com.martiansoftware.util.StringUtils.wrapToList("", var92);
    java.net.URL[] var94 = var14.getURLArray("");
    boolean var95 = var14.success();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + ""+ "'", var85.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == false);

  }

  public void test396() throws Throwable {

    com.martiansoftware.jsap.ant.ParserProperty var0 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var7 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var0.setValue("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var9 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    boolean var10 = var9.getIslist();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var14 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var18 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var19 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var20 = var19.getShortFlag();
    char var21 = var19.getShortFlag();
    java.lang.Character var22 = var19.getShortFlagCharacter();
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException(var22);
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var33 = var32.getShortFlag();
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var45 = var34.getHelp((-1), "hi!");
    java.lang.String[] var46 = new java.lang.String[] { var45};
    com.martiansoftware.jsap.Switch var47 = var32.setDefault(var46);
    java.lang.Character var48 = var47.getShortFlagCharacter();
    char var49 = var47.getShortFlag();
    junit.framework.Assert.assertEquals((char)var22, var49);
    var9.setShortflag((char)var22);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var56 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var57 = var53.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var58 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var59 = var53.setStringParser((com.martiansoftware.jsap.StringParser)var58);
    com.martiansoftware.jsap.ant.SwitchConfiguration var60 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var61 = var60.getLongflag();
    var60.setShortflag('#');
    java.lang.String var64 = var60.getLongflag();
    var60.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var67 = var53.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var76 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var77 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var79 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var83 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var84 = var83.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var85 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var77, "hi!", true, '4', "", var84);
    java.lang.String[] var86 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.FlaggedOption var87 = var67.setDefault(var86);
    java.lang.String var88 = var67.getLongFlag();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failNotEquals("hi!", (java.lang.Object)var9, (java.lang.Object)var67);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + '4'+ "'", var22.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + '4'+ "'", var48.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "hi!"+ "'", var56.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + ""+ "'", var84.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == null);

  }

  public void test397() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var7 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var8 = var4.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var9 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var10 = var9.getID();
    java.lang.String var11 = var9.getID();
    var0.setLongflag(var11);
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var15 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var16 = var15.getLongflag();
    var15.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var19 = var14.setListSeparator('#');
    boolean var20 = var19.isList();
    var0.setAllowmultipledeclarations(var20);
    char var22 = var0.getShortflag();
    char var23 = var0.getShortflag();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == '\u0000');

  }

  public void test398() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    java.lang.String var37 = var0.toString();
    com.martiansoftware.jsap.TestUsageString var38 = new com.martiansoftware.jsap.TestUsageString(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));

  }

  public void test399() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    boolean var1 = var0.mustExist();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var3 = var2.getHelp();
    java.lang.String var4 = var2.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var5 = new com.martiansoftware.jsap.SimpleJSAP(var4);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var6 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var18 = var7.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var22 = var20.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var32 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var40 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var32, "hi!", true, '4', "", var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption(var4, (com.martiansoftware.jsap.StringParser)var6, var18, false, '4', "hi!");
    java.lang.Object var60 = var0.parse(var4);
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var65 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var69 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var70 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var71 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var77 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var78 = var77.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var79 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var71, "hi!", true, '4', "", var78);
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var83 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var86 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var87 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var88 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var89 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var89.testSwitchParse();
    var89.testLongFlag();
    var89.testID();
    java.lang.String var93 = var89.getName();
    var0.setProperty("", var93);
    com.martiansoftware.jsap.Switch var95 = new com.martiansoftware.jsap.Switch("");
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + "hi!"+ "'", var93.equals("hi!"));

  }

  public void test400() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var6 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var5);
    java.lang.String var7 = var5.toString();
    var0.setLongflag(var7);
    com.martiansoftware.jsap.stringparsers.DateStringParser var9 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var14 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var15 = var11.setHelp("hi!");
    var11.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var18 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    boolean var23 = var22.messagePrinted();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var29 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var34 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var35 = var24.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var36 = new com.martiansoftware.jsap.SimpleJSAP(var35);
    com.martiansoftware.jsap.UnflaggedOption var37 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var18, var23, var35);
    com.martiansoftware.jsap.ant.SwitchConfiguration var38 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var39 = var38.getLongflag();
    var38.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var59 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var51, "hi!", true, '4', "", var58);
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var9.setProperty("", "hi!");
    var0.setLongflag("");
    com.martiansoftware.jsap.ant.ParserProperty[] var72 = var0.getParserProperties();
    char var73 = var0.getShortflag();
    java.lang.String var74 = var0.getStringparser();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var7.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!"+ "'", var14.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == null);

  }

  public void test401() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigIntegerStringParser var0 = com.martiansoftware.jsap.stringparsers.BigIntegerStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var5 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var17 = var6.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = var19.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption(var3, (com.martiansoftware.jsap.StringParser)var5, var17, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    java.lang.String var61 = var59.getUsage();
    junit.framework.Assert.assertEquals(var3, var61);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var63 = var0.parse(var3);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));

  }

  public void test402() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    java.util.Iterator var3 = var0.getUnflaggedOptionsIterator();
    java.lang.String var4 = var0.getHelp();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var14 = var13.getShortFlag();
    char var15 = var13.getShortFlag();
    java.lang.Character var16 = var13.getShortFlagCharacter();
    java.lang.String var17 = var13.getSyntax();
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    java.lang.String var20 = var18.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var21 = new com.martiansoftware.jsap.SimpleJSAP(var20);
    boolean var22 = var21.messagePrinted();
    java.lang.String var23 = var21.getHelp();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    boolean var28 = var27.messagePrinted();
    java.lang.String var29 = var27.getHelp();
    com.martiansoftware.jsap.ParseException var30 = new com.martiansoftware.jsap.ParseException(var29);
    java.lang.String[] var31 = new java.lang.String[] { var29};
    com.martiansoftware.jsap.JSAPResult var32 = var21.parse(var31);
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var36 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var40 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var41 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var42 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var43 = var32.getClass("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var44 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var45 = var44.getID();
    com.martiansoftware.jsap.Switch var46 = var13.setLongFlag(var45);
    com.martiansoftware.jsap.JSAP var47 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var58 = var47.getHelp((-1), "hi!");
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    java.lang.String var61 = var59.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var62 = new com.martiansoftware.jsap.SimpleJSAP(var61);
    boolean var63 = var62.messagePrinted();
    boolean var64 = var62.messagePrinted();
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var76 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var77 = var66.getHelp((-1), "hi!");
    java.lang.String var78 = var62.getHelp(100, "hi!");
    java.lang.String var79 = var47.getHelp(100);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(var4, var45, var79);
      fail("Expected exception of type junit.framework.ComparisonFailure");
    } catch (junit.framework.ComparisonFailure e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + '4'+ "'", var16.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "[-4|--hi!]"+ "'", var17.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var23.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var29.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "hi!"+ "'", var45.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var78.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));

  }

  public void test403() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.JSAPResult var43 = var0.parse(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var53 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var56 = new com.martiansoftware.jsap.TestOption();
    int var57 = var56.countTestCases();
    int var58 = var56.countTestCases();
    java.lang.String var59 = com.martiansoftware.util.StringUtils.padRight("hi!", var58);
    com.martiansoftware.jsap.JSAPResult var60 = var0.parse(var59);
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var62 = var61.getHelp();
    java.lang.String var63 = var61.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var64 = new com.martiansoftware.jsap.SimpleJSAP(var63);
    boolean var65 = var64.messagePrinted();
    java.lang.String var66 = var64.getHelp();
    com.martiansoftware.jsap.JSAP var67 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var68 = var67.getHelp();
    java.lang.String var69 = var67.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var70 = new com.martiansoftware.jsap.SimpleJSAP(var69);
    boolean var71 = var70.messagePrinted();
    java.lang.String var72 = var70.getHelp();
    com.martiansoftware.jsap.ParseException var73 = new com.martiansoftware.jsap.ParseException(var72);
    java.lang.String[] var74 = new java.lang.String[] { var72};
    com.martiansoftware.jsap.JSAPResult var75 = var64.parse(var74);
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var79 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var83 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var84 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var85 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var86 = var75.getClass("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var87 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var88 = var87.getID();
    com.martiansoftware.jsap.JSAPResult var89 = var0.parse(var88);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var91 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser(var88, false);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi! "+ "'", var59.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var66.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var72.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + "hi!"+ "'", var88.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);

  }

  public void test404() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    java.lang.Class[] var54 = var14.getClassArray("");
    com.martiansoftware.jsap.JSAPException var55 = new com.martiansoftware.jsap.JSAPException("");
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var65 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var65, "hi!", true, '4', "", var72);
    java.lang.String var74 = var73.getSyntax();
    com.martiansoftware.jsap.StringParser var75 = var73.getStringParser();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((java.lang.Object)var55, (java.lang.Object)var73);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var34.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var74.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);

  }

  public void test405() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.xml.JSAPConfig var1 = new com.martiansoftware.jsap.xml.JSAPConfig();
    java.lang.String var2 = var1.getHelp();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var3 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    java.lang.String var4 = var3.getStringparser();
    com.martiansoftware.jsap.Defaults var5 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var6 = var5.idIterator();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var18 = var7.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var28 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var35 = var34.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var36 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var28, "hi!", true, '4', "", var35);
    java.lang.String[] var37 = new java.lang.String[] { var35};
    var5.addDefault(var18, var37);
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var48 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var56 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var57 = var53.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var58 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var59 = var58.getID();
    java.lang.String[] var60 = new java.lang.String[] { var59};
    var5.addDefault("hi!", var60);
    var3.setId("hi!");
    var1.setUsage("hi!");
    com.martiansoftware.jsap.Flagged var64 = var0.getByLongFlag("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      long var65 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.parseSize((java.lang.CharSequence)"hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "hi!"+ "'", var56.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi!"+ "'", var59.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);

  }

  public void test406() throws Throwable {

    com.martiansoftware.jsap.Defaults var0 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var1 = var0.idIterator();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var11 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.Character var33 = var32.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var36 = var32.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var37 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var38 = new java.lang.String[] { "hi!"};
    var0.addDefault("hi!", var38);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var49 = var48.getShortFlag();
    char var50 = var48.getShortFlag();
    java.lang.Character var51 = var48.getShortFlagCharacter();
    java.lang.String var52 = var48.getSyntax();
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    java.lang.String var55 = var53.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var56 = new com.martiansoftware.jsap.SimpleJSAP(var55);
    boolean var57 = var56.messagePrinted();
    java.lang.String var58 = var56.getHelp();
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    java.lang.String var61 = var59.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var62 = new com.martiansoftware.jsap.SimpleJSAP(var61);
    boolean var63 = var62.messagePrinted();
    java.lang.String var64 = var62.getHelp();
    com.martiansoftware.jsap.ParseException var65 = new com.martiansoftware.jsap.ParseException(var64);
    java.lang.String[] var66 = new java.lang.String[] { var64};
    com.martiansoftware.jsap.JSAPResult var67 = var56.parse(var66);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var76 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var77 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var78 = var67.getClass("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var79 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    java.lang.String var80 = var79.getID();
    com.martiansoftware.jsap.Switch var81 = var48.setLongFlag(var80);
    java.lang.String[] var82 = var0.getDefault(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + '4'+ "'", var33.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + '4'+ "'", var51.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "[-4|--hi!]"+ "'", var52.equals("[-4|--hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var58.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var64.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "hi!"+ "'", var80.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);

  }

  public void test407() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    float[] var19 = var14.getFloatArray(var17);
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    boolean var24 = var23.messagePrinted();
    java.lang.String var25 = var23.getHelp();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var27 = var26.getHelp();
    java.lang.String var28 = var26.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var29 = new com.martiansoftware.jsap.SimpleJSAP(var28);
    boolean var30 = var29.messagePrinted();
    java.lang.String var31 = var29.getHelp();
    com.martiansoftware.jsap.ParseException var32 = new com.martiansoftware.jsap.ParseException(var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    com.martiansoftware.jsap.JSAPResult var34 = var23.parse(var33);
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    boolean var40 = var38.messagePrinted();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var53 = var42.getHelp((-1), "hi!");
    java.lang.String var54 = var38.getHelp(100, "hi!");
    java.util.Date[] var55 = var34.getDateArray(var54);
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var65 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var65, "hi!", true, '4', "", var72);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var74 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    java.lang.String var77 = var75.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var78 = new com.martiansoftware.jsap.SimpleJSAP(var77);
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var82 = var80.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var84 = var80.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var86 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var89 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var90 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var74, var77, false, '4', "hi!");
    java.lang.Exception[] var91 = var34.getExceptionArray("hi!");
    java.math.BigInteger[] var92 = var14.getBigIntegerArray("hi!");
    com.martiansoftware.jsap.TestSwitch var93 = new com.martiansoftware.jsap.TestSwitch("hi!");
    var93.testID();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var93.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var25.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var31.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var54.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);

  }

  public void test408() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    com.martiansoftware.jsap.ant.DefaultValue var2 = new com.martiansoftware.jsap.ant.DefaultValue();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var4 = var3.getHelp();
    java.lang.String var5 = var3.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var6 = new com.martiansoftware.jsap.SimpleJSAP(var5);
    boolean var7 = var6.messagePrinted();
    java.lang.String var8 = var6.getHelp();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    java.lang.String var14 = var12.getHelp();
    com.martiansoftware.jsap.ParseException var15 = new com.martiansoftware.jsap.ParseException(var14);
    java.lang.String[] var16 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var17 = var6.parse(var16);
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    java.util.Iterator var20 = var18.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var21 = var18.getIDMap();
    java.lang.String var22 = var18.getHelp();
    com.martiansoftware.jsap.JSAP var23 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var24 = var23.getHelp();
    java.lang.String var25 = var23.getUsage();
    java.util.Iterator var26 = var23.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var28 = var27.getHelp();
    java.lang.String var29 = var27.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var30 = new com.martiansoftware.jsap.SimpleJSAP(var29);
    boolean var31 = var30.messagePrinted();
    boolean var32 = var30.messagePrinted();
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var45 = var34.getHelp((-1), "hi!");
    java.lang.String var46 = var30.getHelp(100, "hi!");
    java.lang.String var47 = var23.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var57 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var65 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var57, "hi!", true, '4', "", var64);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var67 = var18.getHelp(100, "");
    com.martiansoftware.jsap.JSAP var68 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var69 = var68.getHelp();
    java.lang.String var70 = var68.getUsage();
    java.util.Iterator var71 = var68.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var73 = var72.getHelp();
    java.lang.String var74 = var72.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var75 = new com.martiansoftware.jsap.SimpleJSAP(var74);
    boolean var76 = var75.messagePrinted();
    boolean var77 = var75.messagePrinted();
    com.martiansoftware.jsap.JSAP var79 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var84 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var88 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var89 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var90 = var79.getHelp((-1), "hi!");
    java.lang.String var91 = var75.getHelp(100, "hi!");
    java.lang.String var92 = var68.getHelp(100);
    java.lang.String var93 = var18.getHelp(100);
    boolean[] var94 = var17.getBooleanArray(var93);
    var2.addText(var93);
    var0.addConfiguredDefault(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var8.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var14.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + ""+ "'", var90.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var91.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + ""+ "'", var92.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ""+ "'", var93.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);

  }

  public void test409() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.IntSizeStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var2 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var3 = var2.idIterator();
    com.martiansoftware.jsap.JSAP var4 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var15 = var4.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var25 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var33 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var25, "hi!", true, '4', "", var32);
    java.lang.String[] var34 = new java.lang.String[] { var32};
    var2.addDefault(var15, var34);
    java.lang.String[] var36 = new java.lang.String[] { var15};
    com.martiansoftware.jsap.JSAPResult var37 = var1.parse(var36);
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    java.lang.String var40 = var38.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var41 = new com.martiansoftware.jsap.SimpleJSAP(var40);
    boolean var42 = var41.messagePrinted();
    java.lang.String var43 = var41.getHelp();
    com.martiansoftware.jsap.JSAPResult var44 = var1.parse(var43);
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var54 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, "hi!", true, '4', "", var61);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var63 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var64 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var65 = var64.getHelp();
    java.lang.String var66 = var64.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var67 = new com.martiansoftware.jsap.SimpleJSAP(var66);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var71 = var69.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var73 = var69.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var75 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var78 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var79 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var63, var66, false, '4', "hi!");
    java.lang.String var82 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var83 = com.martiansoftware.util.StringUtils.wrapToList(var66, 1);
    java.util.List var85 = com.martiansoftware.util.StringUtils.wrapToList(var66, 1);
    java.lang.String[] var86 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize(var66);
    java.lang.Object[] var87 = var44.getObjectArray(var66);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var88 = var0.parse(var66);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var43.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "hi!"+ "'", var82.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);

  }

  public void test410() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var14 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var22 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var14, "hi!", true, '4', "", var21);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var23 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var31 = var29.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var33 = var29.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var23, var26, false, '4', "hi!");
    var3.setUsage(var26);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.UnspecifiedParameterException var59 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    var3.setHelp("");
    com.martiansoftware.jsap.JSAP var61 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var62 = var61.getHelp();
    java.util.Iterator var63 = var61.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var64 = var61.getIDMap();
    java.lang.String var65 = var61.getUsage();
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException(var65);
    com.martiansoftware.jsap.JSAPException var67 = new com.martiansoftware.jsap.JSAPException("", (java.lang.Throwable)var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + ""+ "'", var65.equals(""));

  }

  public void test411() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var6 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var7 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    java.lang.String var15 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var15, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(1.0d, 100.0d, 100.0d);
    junit.framework.Assert.assertEquals(var15, 100.0d, 10.0d, 100.0d);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals("hi!", 100.0d, 0.0d, 10.0d);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi!"+ "'", var15.equals("hi!"));

  }

  public void test412() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FloatStringParser var0 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var7 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var8 = var7.getID();
    java.lang.String var9 = var7.getID();
    com.martiansoftware.jsap.JSAPException var10 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var7);
    java.lang.String var11 = var10.toString();
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch(var11);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var13 = var0.parse(var11);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "com.martiansoftware.jsap.JSAPException: com.martiansoftware.jsap.IllegalMultipleDeclarationException: Parameter 'hi!' cannot be declared more than once."+ "'", var11.equals("com.martiansoftware.jsap.JSAPException: com.martiansoftware.jsap.IllegalMultipleDeclarationException: Parameter 'hi!' cannot be declared more than once."));

  }

  public void test413() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var40 = var34.setRequired(var39);
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var47 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var48 = var47.getParameter();
    boolean var49 = var47.declaredListSeparator();
    char var50 = var47.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var51 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var52 = var51.hasProperties();
    var47.setRequired(var52);
    junit.framework.Assert.assertFalse(var46, var52);
    com.martiansoftware.jsap.FlaggedOption var55 = var40.setList(var52);
    java.lang.String var56 = var40.getHelp();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));

  }

  public void test414() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var5);
    com.martiansoftware.jsap.TestOption var7 = new com.martiansoftware.jsap.TestOption();
    int var8 = var7.countTestCases();
    int var9 = var7.countTestCases();
    int var10 = var7.countTestCases();
    java.lang.String var11 = var3.getHelp(var10);
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var21 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var28 = var27.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var29 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var21, "hi!", true, '4', "", var28);
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    var30.testShortFlag();
    java.lang.String var32 = var30.getName();
    var3.setHelp(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints\n        this\n        help\n        message.\n"+ "'", var11.equals("  [--help]\n        Prints\n        this\n        help\n        message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));

  }

  public void test415() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.tearDown();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = var0.getProperty("hi!");
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      java.lang.Object var18 = var0.parse("hi!");
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test416() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getHelp();
    java.lang.String var5 = var0.toString();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var11 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var15 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var16 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var17 = var6.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    java.lang.String var46 = var45.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var46);
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption(var46);
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch(var17, '4', var46);
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var59 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var67 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var59, "hi!", true, '4', "", var66);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var76 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var77 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals(var17, "hi!", "hi!");
    var0.setHelp(var17);
    com.martiansoftware.jsap.JSAP var80 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var85 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var89 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var90 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var91 = var80.getHelp((-1), "hi!");
    var0.setUsage(var91);
    java.util.Iterator var93 = var0.getUnflaggedOptionsIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var46.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + ""+ "'", var91.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);

  }

  public void test417() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var51 = var27.setList(false);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var55 = var53.setRequired(false);
    java.lang.String var56 = var53.getID();
    boolean var57 = var53.allowMultipleDeclarations();
    com.martiansoftware.jsap.UnflaggedOption var58 = var51.setList(var57);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var59 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var60 = var59.getParameter();
    boolean var61 = var59.declaredListSeparator();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var65 = var63.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var67 = var63.setRequired(false);
    var59.setAllowmultipledeclarations(false);
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var72 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var76 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var77 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var78 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var84 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var85 = var84.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var86 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var78, "hi!", true, '4', "", var85);
    java.lang.Character var87 = var86.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var90 = var86.setLongFlag("hi!");
    boolean var91 = var86.isList();
    var59.setRequired(var91);
    com.martiansoftware.jsap.UnflaggedOption var93 = var51.setRequired(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "hi!"+ "'", var56.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + ""+ "'", var85.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + '4'+ "'", var87.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var93 == null);

  }

  public void test418() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    java.lang.String[] var22 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var32 = var0.getProperty("", "hi!");
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var43 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var51 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var43, "hi!", true, '4', "", var50);
    java.lang.Character var52 = var51.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var55 = var51.setLongFlag("hi!");
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var65 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var71 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var72 = var71.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var65, "hi!", true, '4', "", var72);
    com.martiansoftware.jsap.JSAP var74 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var75 = var74.getHelp();
    java.lang.String var76 = var74.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var77 = new com.martiansoftware.jsap.SimpleJSAP(var76);
    boolean var78 = var77.messagePrinted();
    java.lang.String var79 = var77.getHelp();
    com.martiansoftware.jsap.ParseException var80 = new com.martiansoftware.jsap.ParseException(var79);
    com.martiansoftware.jsap.stringparsers.FileStringParser var81 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var81.tearDown();
    boolean var83 = var81.mustBeDirectory();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var84 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var85 = var84.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var86 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var87 = var86.getLongflag();
    var86.setShortflag('#');
    java.lang.String var90 = var86.getLongflag();
    char var91 = var86.getShortflag();
    var84.setShortflag(var91);
    com.martiansoftware.jsap.FlaggedOption var94 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var95 = new com.martiansoftware.jsap.FlaggedOption("hi!", (com.martiansoftware.jsap.StringParser)var65, var79, var83, var91, "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var96 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + '4'+ "'", var52.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + ""+ "'", var72.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var79.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == '#');

  }

  public void test419() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var5.addDefault("hi!");
    boolean var19 = var5.allowMultipleDeclarations();
    java.lang.Character var20 = var5.getShortFlagCharacter();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);

  }

  public void test420() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var50 = var48.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var51 = var27.setList(false);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var55 = var53.setRequired(false);
    java.lang.String var56 = var53.getID();
    boolean var57 = var53.allowMultipleDeclarations();
    com.martiansoftware.jsap.UnflaggedOption var58 = var51.setList(var57);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var62 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var66 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var67 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var68 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var71 = new com.martiansoftware.jsap.ParseException();
    com.martiansoftware.jsap.JSAPException var72 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var71);
    junit.framework.Assert.assertNotNull("hi!", (java.lang.Object)var71);
    com.martiansoftware.jsap.UnflaggedOption var74 = var51.setUsageName("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var75 = new com.martiansoftware.jsap.QualifiedSwitch("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "hi!"+ "'", var56.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);

  }

  public void test421() throws Throwable {

    com.martiansoftware.jsap.stringparsers.IntSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.IntSizeStringParser.getParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var2 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var3 = var2.idIterator();
    com.martiansoftware.jsap.JSAP var4 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var15 = var4.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var25 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var31 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var32 = var31.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var33 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var25, "hi!", true, '4', "", var32);
    java.lang.String[] var34 = new java.lang.String[] { var32};
    var2.addDefault(var15, var34);
    java.lang.String[] var36 = new java.lang.String[] { var15};
    com.martiansoftware.jsap.JSAPResult var37 = var1.parse(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var47 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var50 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var51 = var37.contains("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var52 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);

  }

  public void test422() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.JSAPResult var43 = var0.parse(var42);
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var53 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.TestOption var56 = new com.martiansoftware.jsap.TestOption();
    int var57 = var56.countTestCases();
    int var58 = var56.countTestCases();
    java.lang.String var59 = com.martiansoftware.util.StringUtils.padRight("hi!", var58);
    com.martiansoftware.jsap.JSAPResult var60 = var0.parse(var59);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var61 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var62 = var61.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var63 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var64 = var63.getLongflag();
    var63.setShortflag('#');
    java.lang.String var67 = var63.getLongflag();
    char var68 = var63.getShortflag();
    var61.setShortflag(var68);
    java.lang.String[] var70 = var61.getDefaults();
    boolean var71 = var61.getIslist();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var75 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var79 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var80 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var81 = var80.getShortFlag();
    com.martiansoftware.jsap.JSAP var82 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var87 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var90 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var91 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var92 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var93 = var82.getHelp((-1), "hi!");
    java.lang.String[] var94 = new java.lang.String[] { var93};
    com.martiansoftware.jsap.Switch var95 = var80.setDefault(var94);
    char var96 = var95.getShortFlag();
    var61.setListseparator(var96);
    com.martiansoftware.jsap.Flagged var98 = var0.getByShortFlag((java.lang.Character)var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "hi! "+ "'", var59.equals("hi! "));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ""+ "'", var93.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == null);

  }

  public void test423() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    java.lang.String var37 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var38 = com.martiansoftware.util.StringUtils.wrapToList(var21, 1);
    java.util.List var40 = com.martiansoftware.util.StringUtils.wrapToList(var21, 1);
    com.martiansoftware.jsap.SyntaxException var41 = new com.martiansoftware.jsap.SyntaxException(var21);
    com.martiansoftware.jsap.JSAPException var42 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var41);
    com.martiansoftware.jsap.ParseException var43 = new com.martiansoftware.jsap.ParseException((java.lang.Throwable)var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);

  }

  public void test424() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    java.lang.String var17 = var4.getIDByLongFlag(var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.util.List var37 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var38 = var4.getIDByLongFlag("");
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var48 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var54 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var55 = var54.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var56 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var48, "hi!", true, '4', "", var55);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var57 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var58 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var59 = var58.getHelp();
    java.lang.String var60 = var58.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var65 = var63.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var67 = var63.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var69 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var73 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var57, var60, false, '4', "hi!");
    java.lang.String var76 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var77 = com.martiansoftware.util.StringUtils.wrapToList(var60, 1);
    java.util.List var79 = com.martiansoftware.util.StringUtils.wrapToList(var60, 1);
    com.martiansoftware.jsap.TestOption var80 = new com.martiansoftware.jsap.TestOption();
    int var81 = var80.countTestCases();
    int var82 = var80.countTestCases();
    junit.framework.Assert.assertEquals("", 1, var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + ""+ "'", var55.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "hi!"+ "'", var76.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var77 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var79 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);

  }

  public void test425() throws Throwable {

    com.martiansoftware.jsap.stringparsers.StringStringParser var0 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var19 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var27 = var25.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var29 = var25.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var19, var22, false, '4', "hi!");
    java.lang.String var36 = var35.getSyntax();
    java.lang.Object var37 = var0.parse(var36);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var47 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var53 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var54 = var53.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var55 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var47, "hi!", true, '4', "", var54);
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    java.lang.Object var57 = var0.parse("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var36.equals("[(-4|--hi!)[:<hi!>]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var37.equals("[(-4|--hi!)[:<hi!>]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "hi!"+ "'", var57.equals("hi!"));

  }

  public void test426() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    boolean var3 = var0.declaredListSeparator();
    boolean var4 = var0.getGreedy();
    char var5 = var0.getListseparator();
    com.martiansoftware.jsap.UnknownFlagException var6 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == ':');

  }

  public void test427() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var3 = new com.martiansoftware.jsap.ant.ParserProperty();
    var0.addConfiguredProperty(var3);
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var17 = new com.martiansoftware.jsap.SimpleJSAP(var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var36 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var43 = var42.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var44 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var36, "hi!", true, '4', "", var43);
    java.lang.String var45 = var44.getSyntax();
    junit.framework.Assert.assertNotNull((java.lang.Object)var45);
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption(var45);
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch(var16, '4', var45);
    var0.setStringparser(var16);
    com.martiansoftware.jsap.Defaults var50 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var51 = var50.idIterator();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var61 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var64 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var68 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var72 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var73 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var74 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var80 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var81 = var80.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var82 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var74, "hi!", true, '4', "", var81);
    java.lang.Character var83 = var82.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var86 = var82.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var87 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var88 = new java.lang.String[] { "hi!"};
    var50.addDefault("hi!", var88);
    var0.setId("hi!");
    boolean var91 = var0.getGreedy();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.Parameter var92 = var0.getParameter();
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var45.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + ""+ "'", var81.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + '4'+ "'", var83.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);

  }

  public void test428() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    var7.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var14 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var31 = var20.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var32 = new com.martiansoftware.jsap.SimpleJSAP(var31);
    com.martiansoftware.jsap.UnflaggedOption var33 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var14, var19, var31);
    boolean var34 = var33.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var39 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var40 = var36.setHelp("hi!");
    var36.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var43 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    java.lang.String var46 = var44.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var47 = new com.martiansoftware.jsap.SimpleJSAP(var46);
    boolean var48 = var47.messagePrinted();
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var60 = var49.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var61 = new com.martiansoftware.jsap.SimpleJSAP(var60);
    com.martiansoftware.jsap.UnflaggedOption var62 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var43, var48, var60);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var71 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var72 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var78 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var79 = var78.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var80 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var72, "hi!", true, '4', "", var79);
    com.martiansoftware.jsap.UnflaggedOption var81 = var62.setRequired(true);
    com.martiansoftware.jsap.UnflaggedOption var82 = var33.setRequired(true);
    var3.registerParameter((com.martiansoftware.jsap.Parameter)var33);
    int var84 = var3.getScreenWidth();
    com.martiansoftware.jsap.FlaggedOption var86 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var88 = var86.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var90 = var86.setRequired(false);
    com.martiansoftware.jsap.JSAP var91 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var92 = var91.getHelp();
    java.lang.String var93 = var91.getUsage();
    com.martiansoftware.jsap.FlaggedOption var94 = var90.setUsageName(var93);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var3.registerParameter((com.martiansoftware.jsap.Parameter)var90);
      fail("Expected exception of type com.martiansoftware.jsap.JSAPException");
    } catch (com.martiansoftware.jsap.JSAPException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "hi!"+ "'", var39.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + ""+ "'", var79.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 80);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + ""+ "'", var92.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ""+ "'", var93.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var94 == null);

  }

  public void test429() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    java.lang.String var28 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var29 = var14.getURLArray(var28);
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.util.Iterator var32 = var30.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var33 = var30.getIDMap();
    java.lang.String var34 = var30.getHelp();
    java.lang.String var35 = var30.toString();
    java.lang.Object[] var36 = var14.getObjectArray(var35);
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    java.lang.String var42 = var40.getHelp();
    com.martiansoftware.jsap.ParseException var43 = new com.martiansoftware.jsap.ParseException(var42);
    java.net.URL[] var44 = var14.getURLArray(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var42.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var44 == null);

  }

  public void test430() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.TestFlaggedOption var18 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    var18.testLongFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));

  }

  public void test431() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    char var11 = var8.getShortFlag();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var16 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var17 = var13.setHelp("hi!");
    var13.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var20 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    java.lang.String var23 = var21.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var24 = new com.martiansoftware.jsap.SimpleJSAP(var23);
    boolean var25 = var24.messagePrinted();
    com.martiansoftware.jsap.JSAP var26 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var37 = var26.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    com.martiansoftware.jsap.UnflaggedOption var39 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var20, var25, var37);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    com.martiansoftware.jsap.UnflaggedOption var58 = var39.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var59 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var60 = var58.setStringParser((com.martiansoftware.jsap.StringParser)var59);
    char var61 = var58.getListSeparator();
    com.martiansoftware.jsap.Switch var62 = var8.setShortFlag(var61);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var65 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var66 = var8.setLongFlag("hi!");
    com.martiansoftware.jsap.Switch var67 = new com.martiansoftware.jsap.Switch("hi!");
    java.lang.String var68 = var67.getID();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!"+ "'", var16.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "hi!"+ "'", var68.equals("hi!"));

  }

  public void test432() throws Throwable {

    com.martiansoftware.jsap.stringparsers.StringStringParser var0 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var19 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var27 = var25.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var29 = var25.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var19, var22, false, '4', "hi!");
    java.lang.String var36 = var35.getSyntax();
    java.lang.Object var37 = var0.parse(var36);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    java.lang.String var44 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var44, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 10.0f, 0.0f);
    java.lang.String var63 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var63, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(var36, 1.0f, 10.0f, 10.0f);
    java.lang.String var78 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(10.0f, 1.0f, 10.0f);
    junit.framework.Assert.assertEquals(var78, 10.0f, 10.0f, 1.0f);
    junit.framework.Assert.assertEquals(1.0f, 1.0f, 1.0f);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals(10.0f, 1.0f, 0.0f);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var36.equals("[(-4|--hi!)[:<hi!>]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var37.equals("[(-4|--hi!)[:<hi!>]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "hi!"+ "'", var44.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "hi!"+ "'", var63.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "hi!"+ "'", var78.equals("hi!"));

  }

  public void test433() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test1();
    var0.test3();
    var0.test10();

  }

  public void test434() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.getRequired();
    boolean var2 = var0.getGreedy();
    com.martiansoftware.jsap.ant.ParserProperty[] var3 = var0.getParserProperties();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);

  }

  public void test435() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.ColorStringParser var18 = com.martiansoftware.jsap.stringparsers.ColorStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var28 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var35 = var34.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var36 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var28, "hi!", true, '4', "", var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var55 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var63 = var61.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var65 = var61.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var71 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var55, var58, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var73 = var72.getHelp();
    java.lang.String var74 = var72.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var75 = new com.martiansoftware.jsap.SimpleJSAP(var74);
    boolean var76 = var75.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var80 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var84 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var85 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var86 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var92 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var93 = var92.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var94 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var86, "hi!", true, '4', "", var93);
    com.martiansoftware.jsap.UnflaggedOption var95 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var18, "hi!", false, var76, "hi!");
    com.martiansoftware.jsap.TestOption var96 = new com.martiansoftware.jsap.TestOption();
    int var97 = var96.countTestCases();
    java.lang.String var98 = com.martiansoftware.util.StringUtils.padRight("hi!", var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + ""+ "'", var74.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ""+ "'", var93.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var98 + "' != '" + "hi! "+ "'", var98.equals("hi! "));

  }

  public void test436() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var24 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var25 = var14.getClass("hi!");
    java.lang.String var28 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.net.URL[] var29 = var14.getURLArray(var28);
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    java.util.Iterator var32 = var30.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var33 = var30.getIDMap();
    java.lang.String var34 = var30.getHelp();
    java.lang.String var35 = var30.toString();
    java.lang.Object[] var36 = var14.getObjectArray(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var55 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var63 = var61.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var65 = var61.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var70 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var71 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var55, var58, false, '4', "hi!");
    java.lang.String var74 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    java.util.List var75 = com.martiansoftware.util.StringUtils.wrapToList(var58, 1);
    java.lang.String var76 = var14.getString(var58);
    com.martiansoftware.jsap.FlaggedOption var78 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var80 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var83 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var84 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var85 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var86 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var88 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var92 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var93 = var92.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var94 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var86, "hi!", true, '4', "", var93);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      long var95 = var14.getLong(var93);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "hi!"+ "'", var28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "hi!"+ "'", var74.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + ""+ "'", var93.equals(""));

  }

  public void test437() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getHelp();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    java.util.Iterator var8 = var5.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    boolean var14 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    java.lang.String var28 = var12.getHelp(100, "hi!");
    java.lang.String var29 = var5.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var49 = var0.getHelp(100, "");
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var52 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var53 = var52.getLongflag();
    var52.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var56 = var51.setListSeparator('#');
    java.lang.Character var57 = var56.getShortFlagCharacter();
    java.lang.String var58 = var56.getUsage();
    boolean var59 = var56.allowMultipleDeclarations();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var60 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser("", var59);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var28.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "[<hi!>]"+ "'", var58.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);

  }

  public void test438() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var23 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var24 = var20.setHelp("hi!");
    var20.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var27 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    java.lang.String var30 = var28.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    boolean var32 = var31.messagePrinted();
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var44 = var33.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var27, var32, var44);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var50 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var54 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var55 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var56 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var62 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var63 = var62.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var64 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var56, "hi!", true, '4', "", var63);
    com.martiansoftware.jsap.UnflaggedOption var65 = var46.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var66 = var18.setList(true);
    boolean var67 = var66.isList();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!"+ "'", var23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == true);

  }

  public void test439() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    var0.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var0.setShortflag('4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var19 = var18.getShortFlag();
    var0.setShortflag(var19);
    java.lang.String var21 = var0.getLongflag();
    char var22 = var0.getShortflag();
    java.lang.String var23 = var0.getLongflag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == null);

  }

  public void test440() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var16 = var5.getHelp((-1), "hi!");
    java.lang.String var17 = var4.getIDByLongFlag(var16);
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var27 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var27, "hi!", true, '4', "", var34);
    java.lang.Character var36 = var35.getShortFlagCharacter();
    java.lang.Character var37 = var35.getShortFlagCharacter();
    java.lang.String var38 = var4.getIDByShortFlag((char)var37);
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var48 = var47.getShortFlag();
    char var49 = var47.getShortFlag();
    java.lang.Character var50 = var47.getShortFlagCharacter();
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException(var50);
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var55 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var59 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var61 = var60.getShortFlag();
    com.martiansoftware.jsap.JSAP var62 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var65 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var67 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var71 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var72 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var73 = var62.getHelp((-1), "hi!");
    java.lang.String[] var74 = new java.lang.String[] { var73};
    com.martiansoftware.jsap.Switch var75 = var60.setDefault(var74);
    java.lang.Character var76 = var75.getShortFlagCharacter();
    char var77 = var75.getShortFlag();
    junit.framework.Assert.assertEquals((char)var50, var77);
    java.lang.String var79 = var4.getIDByShortFlag((java.lang.Character)var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + '4'+ "'", var36.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + '4'+ "'", var37.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + '4'+ "'", var50.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + ""+ "'", var73.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + '4'+ "'", var76.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == null);

  }

  public void test441() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    var3.finalize();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var10 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var11 = var7.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var12 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = var7.setStringParser((com.martiansoftware.jsap.StringParser)var12);
    com.martiansoftware.jsap.ant.SwitchConfiguration var14 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var15 = var14.getLongflag();
    var14.setShortflag('#');
    java.lang.String var18 = var14.getLongflag();
    var14.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var21 = var7.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    java.lang.String[] var40 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.FlaggedOption var41 = var21.setDefault(var40);
    var3.unregisterParameter((com.martiansoftware.jsap.Parameter)var41);
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    java.lang.String var45 = var43.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var46 = new com.martiansoftware.jsap.SimpleJSAP(var45);
    boolean var47 = var46.messagePrinted();
    java.lang.String var48 = var46.getHelp();
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var52 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var55 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var56 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var57 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var58 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var59 = var58.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var60 = var46.setScreenWidth(var59);
    boolean var61 = var60.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var65 = var63.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var67 = var63.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var71 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var74 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var75 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var76 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var77 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var67.addDefault("hi!");
    com.martiansoftware.jsap.JSAPResult var81 = var60.parse("hi!");
    java.lang.String var82 = var60.toString();
    java.lang.String[] var83 = new java.lang.String[] { var82};
    com.martiansoftware.jsap.FlaggedOption var84 = var41.setDefault(var83);
    boolean var85 = var84.allowMultipleDeclarations();
    java.lang.String[] var86 = var84.getDefault();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var48.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "[--help]"+ "'", var82.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var86 == null);

  }

  public void test442() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testRequired();
    var0.tearDown();
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      var0.testConfig();
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test443() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var1 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var2 = var1.getParameter();
    boolean var3 = var1.declaredListSeparator();
    boolean var4 = var1.getIslist();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var9 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var10 = var6.setHelp("hi!");
    var6.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var13 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var15 = var14.getHelp();
    java.lang.String var16 = var14.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var17 = new com.martiansoftware.jsap.SimpleJSAP(var16);
    boolean var18 = var17.messagePrinted();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var30 = var19.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    com.martiansoftware.jsap.UnflaggedOption var32 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var13, var18, var30);
    com.martiansoftware.jsap.ant.SwitchConfiguration var33 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var34 = var33.getLongflag();
    var33.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.Switch var55 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var1.setListseparator('#');
    com.martiansoftware.jsap.ant.DefaultValue var57 = new com.martiansoftware.jsap.ant.DefaultValue();
    java.lang.String var58 = var57.getValue();
    var1.addConfiguredDefault(var57);
    var0.addConfiguredDefault(var57);
    com.martiansoftware.jsap.ant.SwitchConfiguration var61 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var62 = var61.getLongflag();
    com.martiansoftware.jsap.ant.SwitchConfiguration var63 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var64 = var63.getLongflag();
    com.martiansoftware.jsap.ant.DefaultValue var65 = new com.martiansoftware.jsap.ant.DefaultValue();
    var63.addConfiguredDefault(var65);
    var61.addConfiguredDefault(var65);
    var0.addConfiguredDefault(var65);
    com.martiansoftware.jsap.JSAP var69 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var70 = var69.getHelp();
    java.lang.String var71 = var69.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var72 = new com.martiansoftware.jsap.SimpleJSAP(var71);
    boolean var73 = var72.messagePrinted();
    java.lang.String var74 = var72.getHelp();
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    java.lang.String var77 = var75.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var78 = new com.martiansoftware.jsap.SimpleJSAP(var77);
    boolean var79 = var78.messagePrinted();
    java.lang.String var80 = var78.getHelp();
    com.martiansoftware.jsap.ParseException var81 = new com.martiansoftware.jsap.ParseException(var80);
    java.lang.String[] var82 = new java.lang.String[] { var80};
    com.martiansoftware.jsap.JSAPResult var83 = var72.parse(var82);
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var87 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var90 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var91 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var92 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var93 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var94 = var83.getClass("hi!");
    java.lang.String var96 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 100);
    var65.addText(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + ""+ "'", var70.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + ""+ "'", var71.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var74.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var80.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "hi!                                                                                                 "+ "'", var96.equals("hi!                                                                                                 "));

  }

  public void test444() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var5 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var6 = var2.setHelp("hi!");
    var2.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var9 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var10 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var11 = var10.getHelp();
    java.lang.String var12 = var10.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var13 = new com.martiansoftware.jsap.SimpleJSAP(var12);
    boolean var14 = var13.messagePrinted();
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var26 = var15.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.UnflaggedOption var28 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var9, var14, var26);
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var38 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var44 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var45 = var44.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var46 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var38, "hi!", true, '4', "", var45);
    com.martiansoftware.jsap.UnflaggedOption var47 = var28.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var51 = var49.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var52 = var28.setList(false);
    com.martiansoftware.jsap.stringparsers.FileStringParser var53 = var0.setMustBeFile(false);
    var53.tearDown();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "hi!"+ "'", var5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + ""+ "'", var45.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);

  }

  public void test445() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getHelp();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    java.util.Iterator var8 = var5.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    boolean var14 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    java.lang.String var28 = var12.getHelp(100, "hi!");
    java.lang.String var29 = var5.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var49 = var0.getHelp(100, "");
    java.lang.String var50 = var0.toString();
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    java.lang.String var53 = var51.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var54 = new com.martiansoftware.jsap.SimpleJSAP(var53);
    boolean var55 = var54.messagePrinted();
    java.lang.String var56 = var54.getHelp();
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    java.lang.String var59 = var57.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var60 = new com.martiansoftware.jsap.SimpleJSAP(var59);
    boolean var61 = var60.messagePrinted();
    java.lang.String var62 = var60.getHelp();
    com.martiansoftware.jsap.ParseException var63 = new com.martiansoftware.jsap.ParseException(var62);
    java.lang.String[] var64 = new java.lang.String[] { var62};
    com.martiansoftware.jsap.JSAPResult var65 = var54.parse(var64);
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    java.lang.String var68 = var66.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var69 = new com.martiansoftware.jsap.SimpleJSAP(var68);
    float[] var70 = var65.getFloatArray(var68);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var74 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var77 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var78 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var79 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var80 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var83 = var65.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var88 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var89 = var85.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var90 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var91 = var90.getID();
    boolean[] var92 = var65.getBooleanArray(var91);
    com.martiansoftware.jsap.SyntaxException var93 = new com.martiansoftware.jsap.SyntaxException(var91);
    com.martiansoftware.jsap.FlaggedOption var95 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var97 = var95.setRequired(false);
    com.martiansoftware.jsap.defaultsources.PropertyDefaultSource var98 = new com.martiansoftware.jsap.defaultsources.PropertyDefaultSource(var91, false);
    var0.unregisterDefaultSource((com.martiansoftware.jsap.DefaultSource)var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var28.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var56.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + ""+ "'", var59.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var62.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + ""+ "'", var68.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + "hi!"+ "'", var88.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + "hi!"+ "'", var91.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var97 == null);

  }

  public void test446() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.setUp();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var11 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var19 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var11, "hi!", true, '4', "", var18);
    java.lang.String var20 = var0.getProperty("");
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var30 = new com.martiansoftware.jsap.ParseException("hi!");
    junit.framework.Assert.assertEquals("hi!", (short)1, (short)1);
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var43 = var0.getProperty("hi!", "hi!");
    com.martiansoftware.jsap.UnflaggedOption var44 = new com.martiansoftware.jsap.UnflaggedOption(var43);
    com.martiansoftware.jsap.stringparsers.FileStringParser var45 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var45.tearDown();
    boolean var47 = var45.mustBeDirectory();
    com.martiansoftware.jsap.UnflaggedOption var48 = var44.setGreedy(var47);
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var49 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var50 = var49.hasProperties();
    boolean var51 = var49.getIslist();
    com.martiansoftware.jsap.UnflaggedOption var52 = var48.setList(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "hi!"+ "'", var43.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var52 == null);

  }

  public void test447() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    com.martiansoftware.jsap.IDMap var4 = var3.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var14 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var22 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var14, "hi!", true, '4', "", var21);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var23 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var31 = var29.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var33 = var29.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var35 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var23, var26, false, '4', "hi!");
    var3.setUsage(var26);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var45 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var46 = var42.setHelp("hi!");
    var3.setUsage("hi!");
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var51 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var55 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var56 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var57 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var63 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var64 = var63.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var65 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var57, "hi!", true, '4', "", var64);
    java.util.List var67 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    com.martiansoftware.jsap.SimpleJSAP var68 = var3.setScreenWidth(1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "hi!"+ "'", var45.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + ""+ "'", var64.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);

  }

  public void test448() throws Throwable {

    com.martiansoftware.jsap.stringparsers.DateStringParser var0 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var0.tearDown();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = var0.getProperty("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var5 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var6 = var5.getParameter();
    boolean var7 = var5.declaredListSeparator();
    char var8 = var5.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var11 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var10);
    java.lang.String var12 = var10.toString();
    var5.setLongflag(var12);
    com.martiansoftware.jsap.stringparsers.DateStringParser var14 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var19 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var20 = var16.setHelp("hi!");
    var16.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var23 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    boolean var28 = var27.messagePrinted();
    com.martiansoftware.jsap.JSAP var29 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var34 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var38 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var39 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var40 = var29.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var41 = new com.martiansoftware.jsap.SimpleJSAP(var40);
    com.martiansoftware.jsap.UnflaggedOption var42 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var23, var28, var40);
    com.martiansoftware.jsap.ant.SwitchConfiguration var43 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var44 = var43.getLongflag();
    var43.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var50 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var54 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var55 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var56 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var62 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var63 = var62.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var64 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var56, "hi!", true, '4', "", var63);
    com.martiansoftware.jsap.Switch var65 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var69 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var73 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var74 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var14.setProperty("", "hi!");
    var5.setLongflag("");
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      java.lang.Object var77 = var0.parse("");
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test449() throws Throwable {

    com.martiansoftware.jsap.stringparsers.ShortStringParser var0 = new com.martiansoftware.jsap.stringparsers.ShortStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var10 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var14 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var15 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var16 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var17 = var16.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var18 = var4.setScreenWidth(var17);
    boolean var19 = var18.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var23 = var21.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var25 = var21.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var29 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var34 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var35 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var25.addDefault("hi!");
    com.martiansoftware.jsap.JSAPResult var39 = var18.parse("hi!");
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var58 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var59 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var60 = var59.getHelp();
    java.lang.String var61 = var59.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var62 = new com.martiansoftware.jsap.SimpleJSAP(var61);
    com.martiansoftware.jsap.FlaggedOption var64 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var66 = var64.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var68 = var64.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var70 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var73 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var74 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var58, var61, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var75 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    java.lang.String var78 = var76.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var79 = new com.martiansoftware.jsap.SimpleJSAP(var78);
    var75.setUsage(var78);
    var18.setHelp(var78);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var82 = var0.parse(var78);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + ""+ "'", var60.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));

  }

  public void test450() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    boolean var3 = var0.getIslist();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var8 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var9 = var5.setHelp("hi!");
    var5.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var12 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var14 = var13.getHelp();
    java.lang.String var15 = var13.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var16 = new com.martiansoftware.jsap.SimpleJSAP(var15);
    boolean var17 = var16.messagePrinted();
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var29 = var18.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var30 = new com.martiansoftware.jsap.SimpleJSAP(var29);
    com.martiansoftware.jsap.UnflaggedOption var31 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var12, var17, var29);
    com.martiansoftware.jsap.ant.SwitchConfiguration var32 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var33 = var32.getLongflag();
    var32.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    com.martiansoftware.jsap.Switch var54 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var0.setListseparator('#');
    com.martiansoftware.jsap.Parameter var56 = var0.getParameter();
    com.martiansoftware.jsap.ant.ParserProperty var57 = new com.martiansoftware.jsap.ant.ParserProperty();
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var62 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var63 = var59.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var64 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    var57.setValue("hi!");
    var0.addConfiguredProperty(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "hi!"+ "'", var62.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);

  }

  public void test451() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    com.martiansoftware.jsap.stringparsers.DateStringParser var4 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var9 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var10 = var6.setHelp("hi!");
    var6.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var13 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var15 = var14.getHelp();
    java.lang.String var16 = var14.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var17 = new com.martiansoftware.jsap.SimpleJSAP(var16);
    boolean var18 = var17.messagePrinted();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var30 = var19.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    com.martiansoftware.jsap.UnflaggedOption var32 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var13, var18, var30);
    com.martiansoftware.jsap.ant.SwitchConfiguration var33 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var34 = var33.getLongflag();
    var33.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.Switch var55 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var59 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var63 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var64 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var4.setProperty("", "hi!");
    boolean var66 = var3.idExists("hi!");
    java.util.Iterator var67 = var3.idIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + ""+ "'", var15.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);

  }

  public void test452() throws Throwable {

    com.martiansoftware.jsap.TestOption var0 = new com.martiansoftware.jsap.TestOption();
    int var1 = var0.countTestCases();
    var0.testSettersAndGetters();
    var0.testSettersAndGetters();
    int var4 = var0.countTestCases();
    var0.testSettersAndGetters();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);

  }

  public void test453() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.Character var18 = var17.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = var17.setLongFlag("hi!");
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var25 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var29 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var30 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var31 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var39 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var31, "hi!", true, '4', "", var38);
    com.martiansoftware.jsap.JSAP var40 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var41 = var40.getHelp();
    java.lang.String var42 = var40.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var43 = new com.martiansoftware.jsap.SimpleJSAP(var42);
    boolean var44 = var43.messagePrinted();
    java.lang.String var45 = var43.getHelp();
    com.martiansoftware.jsap.ParseException var46 = new com.martiansoftware.jsap.ParseException(var45);
    com.martiansoftware.jsap.stringparsers.FileStringParser var47 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var47.tearDown();
    boolean var49 = var47.mustBeDirectory();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var50 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var51 = var50.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var52 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var53 = var52.getLongflag();
    var52.setShortflag('#');
    java.lang.String var56 = var52.getLongflag();
    char var57 = var52.getShortflag();
    var50.setShortflag(var57);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!", (com.martiansoftware.jsap.StringParser)var31, var45, var49, var57, "hi!");
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var65 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var69 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var70 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var71 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var77 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var78 = var77.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var79 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var71, "hi!", true, '4', "", var78);
    java.lang.Character var80 = var79.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var82 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var83 = var79.setLongFlag("hi!");
    boolean var84 = var79.isList();
    com.martiansoftware.jsap.UnknownFlagException var86 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var87 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var86);
    java.lang.String var88 = var86.toString();
    java.lang.String var89 = com.martiansoftware.util.StringUtils.noNull(var88);
    com.martiansoftware.jsap.Parameter var90 = var79.setHelp(var89);
    com.martiansoftware.jsap.FlaggedOption var91 = var61.setUsageName(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + '4'+ "'", var18.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var45.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var51 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + '4'+ "'", var80.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var83 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var88.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var89.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);

  }

  public void test454() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    var0.setShortflag('#');
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    var0.setShortflag('4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var19 = var18.getShortFlag();
    var0.setShortflag(var19);
    java.lang.String var21 = var0.getLongflag();
    char var22 = var0.getShortflag();
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var32 = var31.getShortFlag();
    char var33 = var31.getShortFlag();
    java.lang.Character var34 = var31.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var44 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var47 = var31.setDefault("hi!");
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var48 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var49 = var48.getParameter();
    boolean var50 = var48.declaredListSeparator();
    char var51 = var48.getShortflag();
    char var52 = var48.getShortflag();
    com.martiansoftware.jsap.Switch var53 = var31.setShortFlag(var52);
    var0.setShortflag(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + '4'+ "'", var34.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var53 == null);

  }

  public void test455() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var7 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var8 = var4.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var9 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var10 = var9.getID();
    java.lang.String var11 = var9.getID();
    var0.setLongflag(var11);
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var15 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var16 = var15.getLongflag();
    var15.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var19 = var14.setListSeparator('#');
    boolean var20 = var19.isList();
    var0.setAllowmultipledeclarations(var20);
    boolean var22 = var0.hasProperties();
    com.martiansoftware.jsap.ant.SwitchConfiguration var23 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var24 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var25 = var24.getParameter();
    boolean var26 = var24.declaredListSeparator();
    boolean var27 = var24.getIslist();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var32 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var33 = var29.setHelp("hi!");
    var29.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var36 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var53 = var42.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var54 = new com.martiansoftware.jsap.SimpleJSAP(var53);
    com.martiansoftware.jsap.UnflaggedOption var55 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var36, var41, var53);
    com.martiansoftware.jsap.ant.SwitchConfiguration var56 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var57 = var56.getLongflag();
    var56.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var68 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var69 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var77 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var69, "hi!", true, '4', "", var76);
    com.martiansoftware.jsap.Switch var78 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var24.setListseparator('#');
    com.martiansoftware.jsap.ant.DefaultValue var80 = new com.martiansoftware.jsap.ant.DefaultValue();
    java.lang.String var81 = var80.getValue();
    var24.addConfiguredDefault(var80);
    var23.addConfiguredDefault(var80);
    var0.addConfiguredDefault(var80);
    java.lang.String[] var85 = var0.getDefaults();
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var88 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var89 = var88.getLongflag();
    var88.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var92 = var87.setListSeparator('#');
    var0.setShortflag('#');
    boolean var94 = var0.getRequired();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == false);

  }

  public void test456() throws Throwable {

    com.martiansoftware.jsap.Defaults var0 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var1 = var0.idIterator();
    com.martiansoftware.jsap.FlaggedOption var3 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var9 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var10 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var11 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var14 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.Character var33 = var32.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var36 = var32.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var37 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var38 = new java.lang.String[] { "hi!"};
    var0.addDefault("hi!", var38);
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var43 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var47 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var48 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var49 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var57 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var49, "hi!", true, '4', "", var56);
    java.lang.String[] var58 = var0.getDefault("hi!");
    java.util.Iterator var59 = var0.idIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + '4'+ "'", var33.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + ""+ "'", var56.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);

  }

  public void test457() throws Throwable {

    junit.framework.Assert.assertEquals((short)0, (short)0);
    junit.framework.Assert.assertEquals((short)0, (short)0);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals((short)(-1), (short)0);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test458() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var3 = var2.getHelp();
    java.lang.String var4 = var2.getUsage();
    com.martiansoftware.jsap.IDMap var5 = var2.getIDMap();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var7 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var8 = var7.idIterator();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var14 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var18 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var19 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var20 = var9.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var24 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var28 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var29 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var30 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var36 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var37 = var36.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var38 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var30, "hi!", true, '4', "", var37);
    java.lang.String[] var39 = new java.lang.String[] { var37};
    var7.addDefault(var20, var39);
    java.lang.String[] var41 = new java.lang.String[] { var20};
    com.martiansoftware.jsap.JSAPResult var42 = var6.parse(var41);
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var46 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var49 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var50 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var51 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var52 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var55 = new com.martiansoftware.jsap.ParseException("hi!");
    boolean var56 = var42.contains("hi!");
    java.math.BigInteger[] var58 = var42.getBigIntegerArray("");
    boolean var59 = var5.idExists("");
    var0.setId("");
    boolean var61 = var0.getGreedy();
    boolean var62 = var0.hasProperties();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);

  }

  public void test459() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test7();
    var0.test8();
    var0.test10();

  }

  public void test460() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.String var18 = var17.getSyntax();
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var23 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var24 = var20.setHelp("hi!");
    var20.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var27 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var28 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var29 = var28.getHelp();
    java.lang.String var30 = var28.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var31 = new com.martiansoftware.jsap.SimpleJSAP(var30);
    boolean var32 = var31.messagePrinted();
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var38 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var42 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var43 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var44 = var33.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var45 = new com.martiansoftware.jsap.SimpleJSAP(var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var27, var32, var44);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var50 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var54 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var55 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var56 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var58 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var62 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var63 = var62.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var64 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var56, "hi!", true, '4', "", var63);
    com.martiansoftware.jsap.UnflaggedOption var65 = var46.setRequired(true);
    boolean var66 = var46.isList();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var18, var66);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var18.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "hi!"+ "'", var23.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + ""+ "'", var30.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);

  }

  public void test461() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var41 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var42 = var38.setHelp("hi!");
    var38.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var45 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    boolean var50 = var49.messagePrinted();
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var62 = var51.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var63 = new com.martiansoftware.jsap.SimpleJSAP(var62);
    com.martiansoftware.jsap.UnflaggedOption var64 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var45, var50, var62);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.Object[] var67 = new java.lang.Object[] { var66};
    java.lang.Object[] var68 = var36.getObjectArray("", var67);
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var74 = var36.getByte("hi!", (byte)(-1));
    java.util.Iterator var75 = var36.getBadParameterIDIterator();
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    java.lang.String var78 = var76.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var79 = new com.martiansoftware.jsap.SimpleJSAP(var78);
    com.martiansoftware.jsap.FlaggedOption var81 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var79.unregisterParameter((com.martiansoftware.jsap.Parameter)var81);
    java.lang.String var83 = var79.getUsage();
    java.lang.String var84 = var79.getUsage();
    java.util.Date[] var85 = var36.getDateArray(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "hi!"+ "'", var41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + "[--help]"+ "'", var83.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + "[--help]"+ "'", var84.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);

  }

  public void test462() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    java.lang.String var2 = var0.getLongflag();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var7 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var8 = var4.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var9 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var10 = var9.getID();
    java.lang.String var11 = var9.getID();
    var0.setLongflag(var11);
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var15 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var16 = var15.getLongflag();
    var15.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var19 = var14.setListSeparator('#');
    boolean var20 = var19.isList();
    var0.setAllowmultipledeclarations(var20);
    boolean var22 = var0.hasProperties();
    com.martiansoftware.jsap.ant.SwitchConfiguration var23 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var24 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var25 = var24.getParameter();
    boolean var26 = var24.declaredListSeparator();
    boolean var27 = var24.getIslist();
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var32 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var33 = var29.setHelp("hi!");
    var29.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var36 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var38 = var37.getHelp();
    java.lang.String var39 = var37.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var40 = new com.martiansoftware.jsap.SimpleJSAP(var39);
    boolean var41 = var40.messagePrinted();
    com.martiansoftware.jsap.JSAP var42 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var47 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var50 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var51 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var52 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var53 = var42.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var54 = new com.martiansoftware.jsap.SimpleJSAP(var53);
    com.martiansoftware.jsap.UnflaggedOption var55 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var36, var41, var53);
    com.martiansoftware.jsap.ant.SwitchConfiguration var56 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var57 = var56.getLongflag();
    var56.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var68 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var69 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var77 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var69, "hi!", true, '4', "", var76);
    com.martiansoftware.jsap.Switch var78 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    var24.setListseparator('#');
    com.martiansoftware.jsap.ant.DefaultValue var80 = new com.martiansoftware.jsap.ant.DefaultValue();
    java.lang.String var81 = var80.getValue();
    var24.addConfiguredDefault(var80);
    var23.addConfiguredDefault(var80);
    var0.addConfiguredDefault(var80);
    java.lang.String[] var85 = var0.getDefaults();
    com.martiansoftware.jsap.FlaggedOption var87 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var88 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var89 = var88.getLongflag();
    var88.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var92 = var87.setListSeparator('#');
    var0.setShortflag('#');
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var94 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var95 = var94.getParameter();
    boolean var96 = var94.declaredListSeparator();
    char var97 = var94.getListseparator();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertEquals('#', var97);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "hi!"+ "'", var10.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var25 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == ':');

  }

  public void test463() throws Throwable {

    com.martiansoftware.jsap.stringparsers.CharacterStringParser var0 = new com.martiansoftware.jsap.stringparsers.CharacterStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    var4.unregisterParameter((com.martiansoftware.jsap.Parameter)var6);
    java.lang.String var8 = var4.getUsage();
    java.lang.String var9 = var4.getUsage();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var10 = var0.parse(var9);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "[--help]"+ "'", var8.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "[--help]"+ "'", var9.equals("[--help]"));

  }

  public void test464() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getUsage();
    var0.finalize();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    var9.finalize();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var16 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var17 = var13.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var18 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var19 = var13.setStringParser((com.martiansoftware.jsap.StringParser)var18);
    com.martiansoftware.jsap.ant.SwitchConfiguration var20 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var21 = var20.getLongflag();
    var20.setShortflag('#');
    java.lang.String var24 = var20.getLongflag();
    var20.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var27 = var13.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    java.lang.String[] var46 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.FlaggedOption var47 = var27.setDefault(var46);
    var9.unregisterParameter((com.martiansoftware.jsap.Parameter)var47);
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    java.lang.String var51 = var49.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var52 = new com.martiansoftware.jsap.SimpleJSAP(var51);
    boolean var53 = var52.messagePrinted();
    java.lang.String var54 = var52.getHelp();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var58 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var62 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var63 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var64 = new com.martiansoftware.jsap.TestSwitch("hi!");
    int var65 = var64.countTestCases();
    com.martiansoftware.jsap.SimpleJSAP var66 = var52.setScreenWidth(var65);
    boolean var67 = var66.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var69 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var71 = var69.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var73 = var69.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var75 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var77 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var81 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var82 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var83 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var73.addDefault("hi!");
    com.martiansoftware.jsap.JSAPResult var87 = var66.parse("hi!");
    java.lang.String var88 = var66.toString();
    java.lang.String[] var89 = new java.lang.String[] { var88};
    com.martiansoftware.jsap.FlaggedOption var90 = var47.setDefault(var89);
    boolean var91 = var90.allowMultipleDeclarations();
    var0.unregisterParameter((com.martiansoftware.jsap.Parameter)var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!"+ "'", var16.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var17 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var54.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var71 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var73 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var87 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + "[--help]"+ "'", var88.equals("[--help]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var90 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);

  }

  public void test465() throws Throwable {

    com.martiansoftware.jsap.stringparsers.URLStringParser var0 = new com.martiansoftware.jsap.stringparsers.URLStringParser();
    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var26 = var15.getClass("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var28 = var27.getHelp();
    java.lang.String var29 = var27.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var30 = new com.martiansoftware.jsap.SimpleJSAP(var29);
    com.martiansoftware.jsap.IDMap var31 = var30.getIDMap();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var43 = var32.getHelp((-1), "hi!");
    java.lang.String var44 = var31.getIDByLongFlag(var43);
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var54 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var60 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var61 = var60.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var62 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, "hi!", true, '4', "", var61);
    java.util.List var64 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var65 = var31.getIDByLongFlag("");
    long[] var66 = var15.getLongArray("");
    com.martiansoftware.jsap.JSAPException var67 = new com.martiansoftware.jsap.JSAPException("");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var68 = var0.parse("");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);

  }

  public void test466() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test1();
    var0.test1();
    var0.test7();

  }

  public void test467() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    java.lang.String[] var35 = var34.getDefault();
    java.lang.String var36 = var34.getHelp();
    java.lang.String var37 = var34.getSyntax();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame(var37);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var37.equals("[(-4|--hi!)[:<hi!>]]"));

  }

  public void test468() throws Throwable {

    com.martiansoftware.jsap.stringparsers.CharacterStringParser var0 = new com.martiansoftware.jsap.stringparsers.CharacterStringParser();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var1 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var2 = var1.getParameter();
    java.lang.String var3 = var1.getLongflag();
    com.martiansoftware.jsap.Defaults var4 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var5 = var4.idIterator();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var15 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.ParseException var18 = new com.martiansoftware.jsap.ParseException("hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var22 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var26 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var27 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var28 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var34 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var35 = var34.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var36 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var28, "hi!", true, '4', "", var35);
    java.lang.Character var37 = var36.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var40 = var36.setLongFlag("hi!");
    com.martiansoftware.jsap.ParseException var41 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.String[] var42 = new java.lang.String[] { "hi!"};
    var4.addDefault("hi!", var42);
    java.lang.String var44 = com.martiansoftware.util.StringUtils.noNull("hi!");
    var1.setId("hi!");
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    boolean var50 = var49.messagePrinted();
    java.lang.String var51 = var49.getHelp();
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    java.lang.String var54 = var52.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var55 = new com.martiansoftware.jsap.SimpleJSAP(var54);
    boolean var56 = var55.messagePrinted();
    java.lang.String var57 = var55.getHelp();
    com.martiansoftware.jsap.ParseException var58 = new com.martiansoftware.jsap.ParseException(var57);
    java.lang.String[] var59 = new java.lang.String[] { var57};
    com.martiansoftware.jsap.JSAPResult var60 = var49.parse(var59);
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var70 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var78 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, "hi!", true, '4', "", var77);
    com.martiansoftware.jsap.examples.Manual_HelloWorld_9 var79 = new com.martiansoftware.jsap.examples.Manual_HelloWorld_9();
    java.lang.Object[] var80 = new java.lang.Object[] { var79};
    java.lang.Object[] var81 = var60.getObjectArray(var77, var80);
    var1.setLongflag(var77);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var83 = var0.parse(var77);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + '4'+ "'", var37.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "hi!"+ "'", var44.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var51.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var57.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var81 == null);

  }

  public void test469() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    boolean var6 = var1.allowMultipleDeclarations();
    java.lang.Character var7 = var1.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var11 = var9.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var13 = var9.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var17 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var21 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var22 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var23 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    var13.addDefault("hi!");
    java.lang.String var27 = var13.getSyntax();
    boolean var28 = var13.isList();
    com.martiansoftware.jsap.FlaggedOption var29 = var1.setRequired(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var11 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "[<hi!>]"+ "'", var27.equals("[<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);

  }

  public void test470() throws Throwable {

    com.martiansoftware.jsap.ant.SwitchConfiguration var0 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var1 = var0.getLongflag();
    var0.setShortflag('#');
    java.lang.String var4 = var0.getLongflag();
    java.lang.String var5 = var0.getLongflag();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    boolean var11 = var9.messagePrinted();
    com.martiansoftware.jsap.JSAP var13 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var24 = var13.getHelp((-1), "hi!");
    java.lang.String var25 = var9.getHelp(100, "hi!");
    com.martiansoftware.jsap.IDMap var26 = var9.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var31 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var32 = var28.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var33 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var34 = var28.setStringParser((com.martiansoftware.jsap.StringParser)var33);
    com.martiansoftware.jsap.ant.SwitchConfiguration var35 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var36 = var35.getLongflag();
    var35.setShortflag('#');
    java.lang.String var39 = var35.getLongflag();
    var35.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var42 = var28.setListSeparator('#');
    java.lang.String var43 = var26.getIDByShortFlag((java.lang.Character)'#');
    var0.setShortflag('#');
    java.lang.String[] var45 = var0.getDefaults();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var25.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "hi!"+ "'", var31.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == null);

  }

  public void test471() throws Throwable {

    com.martiansoftware.jsap.stringparsers.LongSizeStringParser var0 = com.martiansoftware.jsap.stringparsers.LongSizeStringParser.getParser();
    com.martiansoftware.jsap.stringparsers.DateStringParser var1 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var1.setUp();
    com.martiansoftware.jsap.FlaggedOption var4 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var6 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var10 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var11 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var12 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var14 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var20 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var12, "hi!", true, '4', "", var19);
    java.lang.String var21 = var1.getProperty("");
    java.lang.String[] var23 = com.martiansoftware.jsap.CommandLineTokenizer.tokenize("");
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var1.getProperty("", "hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var34 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "hi!"+ "'", var33.equals("hi!"));

  }

  public void test472() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.UnflaggedOption var46 = var27.setRequired(true);
    com.martiansoftware.jsap.stringparsers.URLStringParser var47 = com.martiansoftware.jsap.stringparsers.URLStringParser.getParser();
    com.martiansoftware.jsap.UnflaggedOption var48 = var46.setStringParser((com.martiansoftware.jsap.StringParser)var47);
    com.martiansoftware.jsap.stringparsers.FileStringParser var49 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var54 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var55 = var51.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var56 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var57 = var56.getID();
    java.lang.Object var58 = var49.parse(var57);
    com.martiansoftware.jsap.UnflaggedOption var59 = var48.setUsageName(var57);
    com.martiansoftware.jsap.RequiredParameterMissingException var60 = new com.martiansoftware.jsap.RequiredParameterMissingException(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var46 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var49 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "hi!"+ "'", var54.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var55 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "hi!"+ "'", var57.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);

  }

  public void test473() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.martiansoftware.jsap.stringparsers.EnumeratedStringParser var18 = new com.martiansoftware.jsap.stringparsers.EnumeratedStringParser("hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));

  }

  public void test474() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP("hi!");
    var35.finalize();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var37 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var38 = var37.getParameter();
    boolean var39 = var37.declaredListSeparator();
    char var40 = var37.getListseparator();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var41 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var42 = var41.hasProperties();
    var37.setRequired(var42);
    char var44 = var37.getShortflag();
    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var45 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var46 = var45.hasProperties();
    java.lang.String var47 = var45.getStringparser();
    com.martiansoftware.jsap.ant.ParserProperty var48 = new com.martiansoftware.jsap.ant.ParserProperty();
    var45.addConfiguredProperty(var48);
    com.martiansoftware.jsap.JSAP var50 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var51 = var50.getHelp();
    java.lang.String var52 = var50.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var53 = new com.martiansoftware.jsap.SimpleJSAP(var52);
    boolean var54 = var53.messagePrinted();
    java.lang.String var55 = var53.getHelp();
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    java.lang.String var58 = var56.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var59 = new com.martiansoftware.jsap.SimpleJSAP(var58);
    boolean var60 = var59.messagePrinted();
    java.lang.String var61 = var59.getHelp();
    com.martiansoftware.jsap.ParseException var62 = new com.martiansoftware.jsap.ParseException(var61);
    java.lang.String[] var63 = new java.lang.String[] { var61};
    com.martiansoftware.jsap.JSAPResult var64 = var53.parse(var63);
    com.martiansoftware.jsap.JSAP var65 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var66 = var65.getHelp();
    java.util.Iterator var67 = var65.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var68 = var65.getIDMap();
    java.lang.String var69 = var65.getUsage();
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var73 = var64.getByte(var69, (byte)(-1));
    com.martiansoftware.jsap.QualifiedSwitch var74 = new com.martiansoftware.jsap.QualifiedSwitch(var69);
    var48.setValue(var69);
    var37.setStringparser(var69);
    var35.setUsage(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var55.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var61.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var64 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + ""+ "'", var66.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + ""+ "'", var69.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == (byte)(-1));

  }

  public void test475() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.JSAP var18 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var19 = var18.getHelp();
    java.lang.String var20 = var18.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var21 = new com.martiansoftware.jsap.SimpleJSAP(var20);
    boolean var22 = var21.messagePrinted();
    java.lang.String var23 = var21.getHelp();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var25 = var24.getHelp();
    java.lang.String var26 = var24.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var27 = new com.martiansoftware.jsap.SimpleJSAP(var26);
    boolean var28 = var27.messagePrinted();
    java.lang.String var29 = var27.getHelp();
    com.martiansoftware.jsap.ParseException var30 = new com.martiansoftware.jsap.ParseException(var29);
    java.lang.String[] var31 = new java.lang.String[] { var29};
    com.martiansoftware.jsap.JSAPResult var32 = var21.parse(var31);
    com.martiansoftware.jsap.JSAP var33 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var34 = var33.getHelp();
    java.lang.String var35 = var33.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var36 = new com.martiansoftware.jsap.SimpleJSAP(var35);
    float[] var37 = var32.getFloatArray(var35);
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var41 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var44 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var45 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var46 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var47 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    char[] var50 = var32.getCharArray("hi!");
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var55 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var56 = var52.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var57 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var58 = var57.getID();
    boolean[] var59 = var32.getBooleanArray(var58);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var64 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var65 = var61.setHelp("hi!");
    java.lang.String[] var66 = var32.getStringArray("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var67 = var9.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var23.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + ""+ "'", var26.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var29.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var32 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var50 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "hi!"+ "'", var55.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var56 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "hi!"+ "'", var58.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "hi!"+ "'", var64.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var66 == null);

  }

  public void test476() throws Throwable {

    com.martiansoftware.jsap.stringparsers.URLStringParser var0 = new com.martiansoftware.jsap.stringparsers.URLStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var10 = new com.martiansoftware.jsap.TestSwitch("hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var11 = var0.parse("hi!");
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }

  }

  public void test477() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var2 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    var2.testLongFlag();
    var2.testShortFlag();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var2.runBare();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test478() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var4 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var5 = var1.setHelp("hi!");
    var1.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var8 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var14 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var25 = var14.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var26 = new com.martiansoftware.jsap.SimpleJSAP(var25);
    com.martiansoftware.jsap.UnflaggedOption var27 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var8, var13, var25);
    boolean var28 = var27.isGreedy();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var33 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var34 = var30.setHelp("hi!");
    var30.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var37 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    java.lang.String var40 = var38.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var41 = new com.martiansoftware.jsap.SimpleJSAP(var40);
    boolean var42 = var41.messagePrinted();
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var46 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var48 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var52 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var53 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var54 = var43.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var55 = new com.martiansoftware.jsap.SimpleJSAP(var54);
    com.martiansoftware.jsap.UnflaggedOption var56 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var37, var42, var54);
    com.martiansoftware.jsap.ant.SwitchConfiguration var57 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var58 = var57.getLongflag();
    var57.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var70 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var78 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var70, "hi!", true, '4', "", var77);
    com.martiansoftware.jsap.Switch var79 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.UnflaggedOption var80 = var27.setUsageName("hi!");
    com.martiansoftware.jsap.JSAP var81 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var84 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var86 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var89 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var90 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var91 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var92 = var81.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var93 = new com.martiansoftware.jsap.SimpleJSAP(var92);
    com.martiansoftware.jsap.JSAPException var94 = new com.martiansoftware.jsap.JSAPException(var92);
    com.martiansoftware.jsap.UnflaggedOption var95 = var27.setUsageName(var92);
    com.martiansoftware.jsap.UnknownFlagException var96 = new com.martiansoftware.jsap.UnknownFlagException(var92);
    java.lang.String var97 = var96.getFlag();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "hi!"+ "'", var4.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + ""+ "'", var25.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "hi!"+ "'", var33.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var34 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + ""+ "'", var92.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var95 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var97 + "' != '" + ""+ "'", var97.equals(""));

  }

  public void test479() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BooleanStringParser var0 = new com.martiansoftware.jsap.stringparsers.BooleanStringParser();
    com.martiansoftware.jsap.FlaggedOption var2 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var4 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var8 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var9 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var10 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var18 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var10, "hi!", true, '4', "", var17);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var19 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var20 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var21 = var20.getHelp();
    java.lang.String var22 = var20.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var23 = new com.martiansoftware.jsap.SimpleJSAP(var22);
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var27 = var25.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var29 = var25.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var33 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var34 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var35 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var19, var22, false, '4', "hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch(var22);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var44 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var45 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var46 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var54 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var46, "hi!", true, '4', "", var53);
    com.martiansoftware.jsap.UnspecifiedParameterException var55 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    com.martiansoftware.jsap.UnknownFlagException var57 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var58 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var57);
    com.martiansoftware.jsap.ParseException var59 = new com.martiansoftware.jsap.ParseException("", (java.lang.Throwable)var58);
    com.martiansoftware.jsap.Switch var60 = var36.setDefault("");
    com.martiansoftware.jsap.RequiredParameterMissingException var61 = new com.martiansoftware.jsap.RequiredParameterMissingException("");
    java.lang.String var62 = var61.getID();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var63 = var0.parse(var62);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var29 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));

  }

  public void test480() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var3 = var1.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var5 = var1.setRequired(false);
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.FlaggedOption var9 = var5.setUsageName(var8);
    java.lang.String var10 = var5.getLongFlag();
    java.lang.String var11 = var5.getSyntax();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var21 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var28 = var27.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var29 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var21, "hi!", true, '4', "", var28);
    java.lang.Character var30 = var29.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var33 = var29.setLongFlag("hi!");
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var37 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var41 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var42 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var43 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var49 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var50 = var49.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var51 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var43, "hi!", true, '4', "", var50);
    com.martiansoftware.jsap.JSAP var52 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var53 = var52.getHelp();
    java.lang.String var54 = var52.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var55 = new com.martiansoftware.jsap.SimpleJSAP(var54);
    boolean var56 = var55.messagePrinted();
    java.lang.String var57 = var55.getHelp();
    com.martiansoftware.jsap.ParseException var58 = new com.martiansoftware.jsap.ParseException(var57);
    com.martiansoftware.jsap.stringparsers.FileStringParser var59 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var59.tearDown();
    boolean var61 = var59.mustBeDirectory();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var62 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var63 = var62.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var64 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var65 = var64.getLongflag();
    var64.setShortflag('#');
    java.lang.String var68 = var64.getLongflag();
    char var69 = var64.getShortflag();
    var62.setShortflag(var69);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var73 = new com.martiansoftware.jsap.FlaggedOption("hi!", (com.martiansoftware.jsap.StringParser)var43, var57, var61, var69, "hi!");
    com.martiansoftware.jsap.FlaggedOption var74 = var5.setStringParser((com.martiansoftware.jsap.StringParser)var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "[<>]"+ "'", var11.equals("[<>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + ""+ "'", var28.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + '4'+ "'", var30.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + ""+ "'", var50.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + ""+ "'", var53.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + ""+ "'", var54.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var57.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var63 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);

  }

  public void test481() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var13 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var21 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var13, "hi!", true, '4', "", var20);
    java.util.List var23 = com.martiansoftware.util.StringUtils.wrapToList("", 1);
    java.lang.String var24 = var0.getHelp(1);
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + ""+ "'", var24.equals(""));

  }

  public void test482() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.Defaults var1 = new com.martiansoftware.jsap.Defaults();
    java.util.Iterator var2 = var1.idIterator();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var8 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var12 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var13 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var14 = var3.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var18 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var22 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var23 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var24 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var30 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var31 = var30.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var32 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var24, "hi!", true, '4', "", var31);
    java.lang.String[] var33 = new java.lang.String[] { var31};
    var1.addDefault(var14, var33);
    java.lang.String[] var35 = new java.lang.String[] { var14};
    com.martiansoftware.jsap.JSAPResult var36 = var0.parse(var35);
    com.martiansoftware.jsap.FlaggedOption var38 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var41 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var42 = var38.setHelp("hi!");
    var38.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var45 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    boolean var50 = var49.messagePrinted();
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var54 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var60 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var61 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var62 = var51.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var63 = new com.martiansoftware.jsap.SimpleJSAP(var62);
    com.martiansoftware.jsap.UnflaggedOption var64 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var45, var50, var62);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.Object[] var67 = new java.lang.Object[] { var66};
    java.lang.Object[] var68 = var36.getObjectArray("", var67);
    com.martiansoftware.jsap.FlaggedOption var70 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    junit.framework.Assert.assertEquals((byte)(-1), (byte)(-1));
    byte var74 = var36.getByte("hi!", (byte)(-1));
    java.util.Iterator var75 = var36.getBadParameterIDIterator();
    com.martiansoftware.jsap.JSAP var76 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var77 = var76.getHelp();
    java.lang.String var78 = var76.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var79 = new com.martiansoftware.jsap.SimpleJSAP(var78);
    boolean var80 = var79.messagePrinted();
    java.lang.String var81 = var79.getHelp();
    com.martiansoftware.jsap.ParseException var82 = new com.martiansoftware.jsap.ParseException(var81);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      short var83 = var36.getShort(var81);
      fail("Expected exception of type com.martiansoftware.jsap.UnspecifiedParameterException");
    } catch (com.martiansoftware.jsap.UnspecifiedParameterException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + ""+ "'", var31.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var33 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "hi!"+ "'", var41.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var45 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var67 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var68 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == (byte)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var75 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + ""+ "'", var77.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + ""+ "'", var78.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var81.equals("  [--help]\n        Prints this help message.\n"));

  }

  public void test483() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    java.lang.String var18 = var17.getSyntax();
    com.martiansoftware.jsap.StringParser var19 = var17.getStringParser();
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var23 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var27 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var28 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var29 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var37 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var29, "hi!", true, '4', "", var36);
    com.martiansoftware.jsap.UnspecifiedParameterException var38 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    com.martiansoftware.jsap.UnknownFlagException var40 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var41 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var40);
    com.martiansoftware.jsap.ParseException var42 = new com.martiansoftware.jsap.ParseException("", (java.lang.Throwable)var41);
    com.martiansoftware.jsap.Parameter var43 = var17.setHelp("");
    java.lang.String var44 = var17.getSyntax();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var18.equals("(-4|--)[:<hi!>]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var19 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var43 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "(-4|--)[:<hi!>]"+ "'", var44.equals("(-4|--)[:<hi!>]"));

  }

  public void test484() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var2 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var3 = var2.getLongflag();
    var2.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var6 = var1.setListSeparator('#');
    com.martiansoftware.jsap.FlaggedOption var8 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var11 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var12 = var8.setHelp("hi!");
    var8.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var15 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var17 = var16.getHelp();
    java.lang.String var18 = var16.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var19 = new com.martiansoftware.jsap.SimpleJSAP(var18);
    boolean var20 = var19.messagePrinted();
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var32 = var21.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var33 = new com.martiansoftware.jsap.SimpleJSAP(var32);
    com.martiansoftware.jsap.UnflaggedOption var34 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var15, var20, var32);
    boolean var35 = var34.isGreedy();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var36 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var37 = var36.getParameter();
    boolean var38 = var36.declaredListSeparator();
    char var39 = var36.getShortflag();
    boolean var40 = var36.getIslist();
    com.martiansoftware.jsap.UnflaggedOption var41 = var34.setRequired(var40);
    com.martiansoftware.jsap.FlaggedOption var42 = var6.setAllowMultipleDeclarations(var40);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.assertTrue(var40);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var12 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + ""+ "'", var32.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var41 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);

  }

  public void test485() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.stringparsers.DateStringParser var15 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    var15.setUp();
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var20 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var23 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var24 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var25 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var26 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var28 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var26, "hi!", true, '4', "", var33);
    java.lang.String var35 = var15.getProperty("");
    java.lang.String[] var36 = new java.lang.String[] { ""};
    com.martiansoftware.jsap.JSAPResult var37 = var3.parse(var36);
    java.util.Iterator var38 = var3.getUnflaggedOptionsIterator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var5.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var11.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var36 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var37 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var38 == null);

  }

  public void test486() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.Switch var35 = new com.martiansoftware.jsap.Switch(var21);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    com.martiansoftware.jsap.UnspecifiedParameterException var54 = new com.martiansoftware.jsap.UnspecifiedParameterException("");
    com.martiansoftware.jsap.UnknownFlagException var56 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var57 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var56);
    com.martiansoftware.jsap.ParseException var58 = new com.martiansoftware.jsap.ParseException("", (java.lang.Throwable)var57);
    com.martiansoftware.jsap.Switch var59 = var35.setDefault("");
    com.martiansoftware.jsap.RequiredParameterMissingException var60 = new com.martiansoftware.jsap.RequiredParameterMissingException("");
    java.lang.String var61 = var60.getID();
    java.lang.String var62 = var60.getID();
    com.martiansoftware.jsap.ParseException var63 = new com.martiansoftware.jsap.ParseException((java.lang.Throwable)var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + ""+ "'", var61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + ""+ "'", var62.equals(""));

  }

  public void test487() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testSimpleDefault();
    var0.setUp();
    var0.tearDown();
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      var0.testOneLevelDefaults();
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test488() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.util.Iterator var2 = var0.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.IDMap var3 = var0.getIDMap();
    java.lang.String var4 = var0.getHelp();
    com.martiansoftware.jsap.JSAP var5 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var6 = var5.getHelp();
    java.lang.String var7 = var5.getUsage();
    java.util.Iterator var8 = var5.getUnflaggedOptionsIterator();
    com.martiansoftware.jsap.JSAP var9 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var10 = var9.getHelp();
    java.lang.String var11 = var9.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var12 = new com.martiansoftware.jsap.SimpleJSAP(var11);
    boolean var13 = var12.messagePrinted();
    boolean var14 = var12.messagePrinted();
    com.martiansoftware.jsap.JSAP var16 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var19 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var21 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var25 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var26 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var27 = var16.getHelp((-1), "hi!");
    java.lang.String var28 = var12.getHelp(100, "hi!");
    java.lang.String var29 = var5.getHelp(100);
    com.martiansoftware.jsap.FlaggedOption var31 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var33 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var36 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var37 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var38 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var39 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var41 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var45 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var46 = var45.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var47 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var39, "hi!", true, '4', "", var46);
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("");
    java.lang.String var49 = var0.getHelp(100, "");
    com.martiansoftware.jsap.JSAPException var50 = new com.martiansoftware.jsap.JSAPException("");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + ""+ "'", var1.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + ""+ "'", var7.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var8 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + ""+ "'", var27.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var28.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + ""+ "'", var49.equals(""));

  }

  public void test489() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var9 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var17 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var9, "hi!", true, '4', "", var16);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var18 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var26 = var24.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var28 = var24.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var30 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var34 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var18, var21, false, '4', "hi!");
    com.martiansoftware.jsap.JSAP var35 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var36 = var35.getHelp();
    java.lang.String var37 = var35.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var38 = new com.martiansoftware.jsap.SimpleJSAP(var37);
    boolean var39 = var38.messagePrinted();
    com.martiansoftware.jsap.FlaggedOption var40 = var34.setRequired(var39);
    java.lang.Character var41 = var40.getShortFlagCharacter();
    java.lang.String[] var42 = var40.getDefault();
    java.lang.String var43 = var40.getUsage();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + ""+ "'", var16.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + ""+ "'", var36.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + ""+ "'", var37.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var40 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + '4'+ "'", var41.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var42 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "[(-4|--hi!)[:<hi!>]]"+ "'", var43.equals("[(-4|--hi!)[:<hi!>]]"));

  }

  public void test490() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var0.tearDown();
    var0.setUp();
    boolean var3 = var0.mustExist();
    com.martiansoftware.jsap.FlaggedOption var5 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var7 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var11 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var12 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var13 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var21 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var13, "hi!", true, '4', "", var20);
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("");
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var27 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var28 = var24.setHelp("hi!");
    var24.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var31 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var32 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var33 = var32.getHelp();
    java.lang.String var34 = var32.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var35 = new com.martiansoftware.jsap.SimpleJSAP(var34);
    boolean var36 = var35.messagePrinted();
    com.martiansoftware.jsap.JSAP var37 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var40 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var42 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var45 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var46 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var47 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var48 = var37.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    com.martiansoftware.jsap.UnflaggedOption var50 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var31, var36, var48);
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var54 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var57 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var58 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var59 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var60 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var66 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var67 = var66.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var68 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var60, "hi!", true, '4', "", var67);
    com.martiansoftware.jsap.UnflaggedOption var69 = var50.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var70 = var22.setList(true);
    com.martiansoftware.jsap.FlaggedOption var72 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var75 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var76 = var72.setHelp("hi!");
    com.martiansoftware.jsap.stringparsers.StringStringParser var77 = new com.martiansoftware.jsap.stringparsers.StringStringParser();
    com.martiansoftware.jsap.FlaggedOption var78 = var72.setStringParser((com.martiansoftware.jsap.StringParser)var77);
    com.martiansoftware.jsap.FlaggedOption var80 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var82 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var85 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var86 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var87 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var88 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Parameter var91 = var78.setHelp("hi!");
    com.martiansoftware.jsap.FlaggedOption var92 = var22.setUsageName("hi!");
    com.martiansoftware.jsap.FlaggedOption var94 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var95 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    java.lang.String var96 = var0.getProperty("hi!", "hi!");
    var0.setUp();
    var0.tearDown();
    var0.tearDown();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "hi!"+ "'", var27.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var28 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var31 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + ""+ "'", var34.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + ""+ "'", var67.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var69 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var70 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "hi!"+ "'", var75.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var76 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var91 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var92 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "hi!"+ "'", var96.equals("hi!"));

  }

  public void test491() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var3 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var6 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var7 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var8 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var9 = var8.getShortFlag();
    char var10 = var8.getShortFlag();
    java.lang.Character var11 = var8.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var13 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var15 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var18 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var19 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var20 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var21 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var24 = var8.setDefault("hi!");
    java.lang.String var25 = var8.getHelp();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      junit.framework.Assert.failSame(var25);
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + '4'+ "'", var11.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var24 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "hi!"+ "'", var25.equals("hi!"));

  }

  public void test492() throws Throwable {

    com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration();
    boolean var1 = var0.hasProperties();
    java.lang.String var2 = var0.getStringparser();
    boolean var3 = var0.declaredListSeparator();
    boolean var4 = var0.getGreedy();
    char var5 = var0.getListseparator();
    com.martiansoftware.jsap.FlaggedOption var7 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var9 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var12 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var13 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var14 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var15 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var21 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var22 = var21.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var23 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var15, "hi!", true, '4', "", var22);
    java.lang.Character var24 = var23.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var26 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var27 = var23.setLongFlag("hi!");
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var31 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var35 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var36 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var37 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var39 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var43 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var44 = var43.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var45 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var37, "hi!", true, '4', "", var44);
    com.martiansoftware.jsap.JSAP var46 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var47 = var46.getHelp();
    java.lang.String var48 = var46.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var49 = new com.martiansoftware.jsap.SimpleJSAP(var48);
    boolean var50 = var49.messagePrinted();
    java.lang.String var51 = var49.getHelp();
    com.martiansoftware.jsap.ParseException var52 = new com.martiansoftware.jsap.ParseException(var51);
    com.martiansoftware.jsap.stringparsers.FileStringParser var53 = new com.martiansoftware.jsap.stringparsers.FileStringParser();
    var53.tearDown();
    boolean var55 = var53.mustBeDirectory();
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var56 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var57 = var56.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var58 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var59 = var58.getLongflag();
    var58.setShortflag('#');
    java.lang.String var62 = var58.getLongflag();
    char var63 = var58.getShortflag();
    var56.setShortflag(var63);
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!", (com.martiansoftware.jsap.StringParser)var37, var51, var55, var63, "hi!");
    var0.setRequired(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == ':');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + ""+ "'", var22.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + '4'+ "'", var24.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var27 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + ""+ "'", var44.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + ""+ "'", var47.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + ""+ "'", var48.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var51.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var57 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == '#');

  }

  public void test493() throws Throwable {

    com.martiansoftware.jsap.stringparsers.FileStringParser var0 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    boolean var1 = var0.mustExist();
    com.martiansoftware.jsap.JSAP var2 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var3 = var2.getHelp();
    java.lang.String var4 = var2.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var5 = new com.martiansoftware.jsap.SimpleJSAP(var4);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var6 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var10 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var12 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var15 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var16 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var17 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var18 = var7.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var20 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var22 = var20.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var24 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var26 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var29 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var30 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var31 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var32 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var34 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var38 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var39 = var38.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var40 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var32, "hi!", true, '4', "", var39);
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var44 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var48 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var49 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var50 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var52 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var56 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var57 = var56.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var58 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var50, "hi!", true, '4', "", var57);
    com.martiansoftware.jsap.FlaggedOption var59 = new com.martiansoftware.jsap.FlaggedOption(var4, (com.martiansoftware.jsap.StringParser)var6, var18, false, '4', "hi!");
    java.lang.Object var60 = var0.parse(var4);
    var0.setUp();
    var0.tearDown();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var22 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + ""+ "'", var57.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var60 == null);

  }

  public void test494() throws Throwable {

    com.martiansoftware.jsap.FlaggedOption var1 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.ant.SwitchConfiguration var2 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var3 = var2.getLongflag();
    var2.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var6 = var1.setListSeparator('#');
    boolean var7 = var6.isList();
    com.martiansoftware.jsap.FlaggedOption var9 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var12 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var13 = var9.setHelp("hi!");
    var9.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var16 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var17 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var18 = var17.getHelp();
    java.lang.String var19 = var17.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var20 = new com.martiansoftware.jsap.SimpleJSAP(var19);
    boolean var21 = var20.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var34 = new com.martiansoftware.jsap.SimpleJSAP(var33);
    com.martiansoftware.jsap.UnflaggedOption var35 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var16, var21, var33);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    com.martiansoftware.jsap.UnflaggedOption var54 = var35.setRequired(true);
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var58 = var56.setRequired(false);
    com.martiansoftware.jsap.UnflaggedOption var59 = var35.setList(false);
    com.martiansoftware.jsap.FlaggedOption var61 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var63 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var66 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var67 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var68 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var69 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var71 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var75 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var76 = var75.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var77 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var69, "hi!", true, '4', "", var76);
    com.martiansoftware.jsap.UnflaggedOption var78 = var59.setStringParser((com.martiansoftware.jsap.StringParser)var69);
    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var79 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var80 = var79.getParameter();
    com.martiansoftware.jsap.ant.SwitchConfiguration var81 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var82 = var81.getLongflag();
    var81.setShortflag('#');
    java.lang.String var85 = var81.getLongflag();
    char var86 = var81.getShortflag();
    var79.setShortflag(var86);
    com.martiansoftware.jsap.UnflaggedOption var88 = var59.setListSeparator(var86);
    com.martiansoftware.jsap.FlaggedOption var89 = var6.setShortFlag(var86);
    java.lang.Character var90 = var6.getShortFlagCharacter();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var6 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!"+ "'", var12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var13 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var16 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + ""+ "'", var33.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + ""+ "'", var52.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var54 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var58 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var59 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + ""+ "'", var76.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var78 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == '#');
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var88 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var89 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + '#'+ "'", var90.equals('#'));

  }

  public void test495() throws Throwable {

    com.martiansoftware.jsap.ant.FlaggedOptionConfiguration var0 = new com.martiansoftware.jsap.ant.FlaggedOptionConfiguration();
    com.martiansoftware.jsap.Parameter var1 = var0.getParameter();
    boolean var2 = var0.declaredListSeparator();
    char var3 = var0.getShortflag();
    com.martiansoftware.jsap.UnknownFlagException var5 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.JSAPException var6 = new com.martiansoftware.jsap.JSAPException((java.lang.Throwable)var5);
    java.lang.String var7 = var5.toString();
    var0.setLongflag(var7);
    com.martiansoftware.jsap.stringparsers.DateStringParser var9 = com.martiansoftware.jsap.stringparsers.DateStringParser.getParser();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var14 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var15 = var11.setHelp("hi!");
    var11.addDefault("");
    com.martiansoftware.jsap.stringparsers.BooleanStringParser var18 = com.martiansoftware.jsap.stringparsers.BooleanStringParser.getParser();
    com.martiansoftware.jsap.JSAP var19 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var20 = var19.getHelp();
    java.lang.String var21 = var19.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var22 = new com.martiansoftware.jsap.SimpleJSAP(var21);
    boolean var23 = var22.messagePrinted();
    com.martiansoftware.jsap.JSAP var24 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var27 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var29 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var32 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var33 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var34 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var35 = var24.getHelp((-1), "hi!");
    com.martiansoftware.jsap.SimpleJSAP var36 = new com.martiansoftware.jsap.SimpleJSAP(var35);
    com.martiansoftware.jsap.UnflaggedOption var37 = new com.martiansoftware.jsap.UnflaggedOption("", (com.martiansoftware.jsap.StringParser)var18, var23, var35);
    com.martiansoftware.jsap.ant.SwitchConfiguration var38 = new com.martiansoftware.jsap.ant.SwitchConfiguration();
    java.lang.String var39 = var38.getLongflag();
    var38.setShortflag('#');
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var59 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var51, "hi!", true, '4', "", var58);
    com.martiansoftware.jsap.Switch var60 = new com.martiansoftware.jsap.Switch("", '#', "hi!");
    com.martiansoftware.jsap.FlaggedOption var62 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var64 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var67 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var68 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var69 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    var9.setProperty("", "hi!");
    var0.setLongflag("");
    boolean var72 = var0.hasProperties();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == '\u0000');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."+ "'", var7.equals("com.martiansoftware.jsap.UnknownFlagException: Unknown flag '4'."));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var9 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!"+ "'", var14.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var18 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + ""+ "'", var20.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + ""+ "'", var21.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + ""+ "'", var35.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == false);

  }

  public void test496() throws Throwable {

    com.martiansoftware.jsap.JSAP var1 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var2 = var1.getHelp();
    java.lang.String var3 = var1.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var4 = new com.martiansoftware.jsap.SimpleJSAP(var3);
    boolean var5 = var4.messagePrinted();
    java.lang.String var6 = var4.getHelp();
    com.martiansoftware.jsap.JSAP var7 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var8 = var7.getHelp();
    java.lang.String var9 = var7.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var10 = new com.martiansoftware.jsap.SimpleJSAP(var9);
    boolean var11 = var10.messagePrinted();
    java.lang.String var12 = var10.getHelp();
    com.martiansoftware.jsap.ParseException var13 = new com.martiansoftware.jsap.ParseException(var12);
    java.lang.String[] var14 = new java.lang.String[] { var12};
    com.martiansoftware.jsap.JSAPResult var15 = var4.parse(var14);
    com.martiansoftware.jsap.FlaggedOption var17 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var19 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var22 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var23 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var24 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.ParseException var25 = new com.martiansoftware.jsap.ParseException("hi!");
    java.lang.Class var26 = var15.getClass("hi!");
    com.martiansoftware.jsap.JSAP var27 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var32 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var36 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var37 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var38 = var27.getHelp((-1), "hi!");
    double var40 = var15.getDouble(var38, 0.0d);
    com.martiansoftware.jsap.JSAP var41 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var42 = var41.getHelp();
    java.lang.String var43 = var41.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var44 = new com.martiansoftware.jsap.SimpleJSAP(var43);
    boolean var45 = var44.messagePrinted();
    java.lang.String var46 = var44.getHelp();
    com.martiansoftware.jsap.ParseException var47 = new com.martiansoftware.jsap.ParseException(var46);
    java.util.Iterator var48 = var15.getExceptionIterator(var46);
    boolean var49 = var15.success();
    com.martiansoftware.jsap.FlaggedOption var51 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var53 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var56 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var57 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var58 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    char var59 = var58.getShortFlag();
    char var60 = var58.getShortFlag();
    java.lang.Character var61 = var58.getShortFlagCharacter();
    com.martiansoftware.jsap.FlaggedOption var63 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var65 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var69 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var70 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.TestSwitch var71 = new com.martiansoftware.jsap.TestSwitch("hi!");
    junit.framework.Assert.assertTrue("hi!", true);
    com.martiansoftware.jsap.Switch var74 = var58.setDefault("hi!");
    com.martiansoftware.jsap.FlaggedOption var76 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    java.lang.String var79 = com.martiansoftware.util.StringUtils.padRightToWidth("hi!", 1);
    com.martiansoftware.jsap.Parameter var80 = var76.setHelp("hi!");
    com.martiansoftware.jsap.IllegalMultipleDeclarationException var81 = new com.martiansoftware.jsap.IllegalMultipleDeclarationException("hi!");
    java.lang.String var82 = var81.getID();
    java.lang.String var83 = var81.getID();
    com.martiansoftware.jsap.Switch var84 = var74.setDefault(var83);
    int[] var85 = var15.getIntArray(var83);
    junit.framework.Assert.assertNotSame((java.lang.Object)0.0f, (java.lang.Object)var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + ""+ "'", var2.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var6.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var12.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var14 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var15 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + ""+ "'", var38.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + ""+ "'", var42.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + ""+ "'", var43.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "  [--help]\n        Prints this help message.\n"+ "'", var46.equals("  [--help]\n        Prints this help message.\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var48 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == '4');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + '4'+ "'", var61.equals('4'));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var74 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "hi!"+ "'", var79.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var80 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "hi!"+ "'", var82.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + "hi!"+ "'", var83.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var84 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var85 == null);

  }

  public void test497() throws Throwable {

    com.martiansoftware.jsap.TestDefaults var0 = new com.martiansoftware.jsap.TestDefaults();
    var0.setUp();
    var0.testOneLevelDefaults();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      var0.testDefaults2();
      fail("Expected exception of type junit.framework.AssertionFailedError");
    } catch (junit.framework.AssertionFailedError e) {
      // Expected exception.
    }

  }

  public void test498() throws Throwable {

    com.martiansoftware.jsap.JSAP var0 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var1 = var0.getHelp();
    java.lang.String var2 = var0.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var3 = new com.martiansoftware.jsap.SimpleJSAP(var2);
    boolean var4 = var3.messagePrinted();
    java.lang.String var5 = var3.getHelp();
    com.martiansoftware.jsap.JSAP var6 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var7 = var6.getHelp();
    java.lang.String var8 = var6.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var9 = new com.martiansoftware.jsap.SimpleJSAP(var8);
    boolean var10 = var9.messagePrinted();
    java.lang.String var11 = var9.getHelp();
    com.martiansoftware.jsap.ParseException var12 = new com.martiansoftware.jsap.ParseException(var11);
    java.lang.String[] var13 = new java.lang.String[] { var11};
    com.martiansoftware.jsap.JSAPResult var14 = var3.parse(var13);
    com.martiansoftware.jsap.JSAP var15 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var16 = var15.getHelp();
    java.lang.String var17 = var15.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var18 = new com.martiansoftware.jsap.SimpleJSAP(var17);
    boolean var19 = var18.messagePrinted();
    boolean var20 = var18.messagePrinted();
    com.martiansoftware.jsap.JSAP var22 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var33 = var22.getHelp((-1), "hi!");
    java.lang.String var34 = var18.getHelp(100, "hi!");
    java.util.Date[] var35 = var14.getDateArray(var34);
    com.martiansoftware.jsap.FlaggedOption var37 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var39 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var42 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var43 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var44 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var45 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var47 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var51 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var52 = var51.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var53 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var45, "hi!", true, '4', "", var52);
    com.martiansoftware.jsap.stringparsers.FloatStringParser var54 = new com.martiansoftware.jsap.stringparsers.FloatStringParser();
    com.martiansoftware.jsap.JSAP var55 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var56 = var55.getHelp();
    java.lang.String var57 = var55.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var58 = new com.martiansoftware.jsap.SimpleJSAP(var57);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var62 = var60.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var64 = var60.setRequired(false);
    com.martiansoftware.jsap.UnknownFlagException var66 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var68 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var69 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.QualifiedSwitch var70 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var54, var57, false, '4', "hi!");
    java.lang.Exception[] var71 = var14.getExceptionArray("hi!");
    // Checks that no java.lang.NullPointerException is thrown.
    try {
      com.martiansoftware.jsap.JSAP var72 = new com.martiansoftware.jsap.JSAP("hi!");
    } catch (java.lang.NullPointerException e) {
      fail("Statement throw java.lang.NullPointerException.");
    }

  }

  public void test499() throws Throwable {

    com.martiansoftware.jsap.stringparsers.BigIntegerStringParser var0 = com.martiansoftware.jsap.stringparsers.BigIntegerStringParser.getParser();
    com.martiansoftware.jsap.stringparsers.FileStringParser var1 = com.martiansoftware.jsap.stringparsers.FileStringParser.getParser();
    boolean var2 = var1.mustExist();
    com.martiansoftware.jsap.JSAP var3 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var4 = var3.getHelp();
    java.lang.String var5 = var3.getUsage();
    com.martiansoftware.jsap.SimpleJSAP var6 = new com.martiansoftware.jsap.SimpleJSAP(var5);
    com.martiansoftware.jsap.stringparsers.PackageStringParser var7 = com.martiansoftware.jsap.stringparsers.PackageStringParser.getParser();
    com.martiansoftware.jsap.JSAP var8 = new com.martiansoftware.jsap.JSAP();
    com.martiansoftware.jsap.FlaggedOption var11 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var13 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var16 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var17 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var18 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    java.lang.String var19 = var8.getHelp((-1), "hi!");
    com.martiansoftware.jsap.FlaggedOption var21 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.FlaggedOption var23 = var21.setRequired(false);
    com.martiansoftware.jsap.FlaggedOption var25 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var27 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var30 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var31 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var32 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var33 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var35 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var39 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var40 = var39.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var41 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var33, "hi!", true, '4', "", var40);
    com.martiansoftware.jsap.FlaggedOption var43 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.UnknownFlagException var45 = new com.martiansoftware.jsap.UnknownFlagException((java.lang.Character)'4');
    com.martiansoftware.jsap.FlaggedOption var48 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.TestFlaggedOption var49 = new com.martiansoftware.jsap.TestFlaggedOption("hi!");
    com.martiansoftware.jsap.Switch var50 = new com.martiansoftware.jsap.Switch("hi!", '4', "hi!", "hi!");
    com.martiansoftware.jsap.stringparsers.ColorStringParser var51 = new com.martiansoftware.jsap.stringparsers.ColorStringParser();
    com.martiansoftware.jsap.FlaggedOption var53 = new com.martiansoftware.jsap.FlaggedOption("hi!");
    com.martiansoftware.jsap.JSAP var57 = new com.martiansoftware.jsap.JSAP();
    java.lang.String var58 = var57.getHelp();
    com.martiansoftware.jsap.QualifiedSwitch var59 = new com.martiansoftware.jsap.QualifiedSwitch("hi!", (com.martiansoftware.jsap.StringParser)var51, "hi!", true, '4', "", var58);
    com.martiansoftware.jsap.FlaggedOption var60 = new com.martiansoftware.jsap.FlaggedOption(var5, (com.martiansoftware.jsap.StringParser)var7, var19, false, '4', "hi!");
    java.lang.Object var61 = var1.parse(var5);
    com.martiansoftware.jsap.UnknownFlagException var62 = new com.martiansoftware.jsap.UnknownFlagException(var5);
    java.lang.String var63 = var62.getFlag();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var64 = var0.parse(var63);
      fail("Expected exception of type com.martiansoftware.jsap.ParseException");
    } catch (com.martiansoftware.jsap.ParseException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var0 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var1 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var7 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var23 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + ""+ "'", var40.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + ""+ "'", var58.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var61 == null);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + ""+ "'", var63.equals(""));

  }

  public void test500() throws Throwable {

    com.martiansoftware.jsap.TestCommandLineTokenizer var0 = new com.martiansoftware.jsap.TestCommandLineTokenizer();
    var0.test7();
    var0.test2();
    var0.test6();
    var0.test7();
    junit.framework.TestResult var5 = var0.run();
    var0.test1();
    
    // Regression assertion (captures the current behavior of the code)
    assertFalse(var5 == null);

  }

}
